{
  "datastatus": [
    "2025-02-17  QuickDraw II and Desk Manager complete.  Total completion ~30%",
    "2024-10-06  QuickDraw II about 50% complete.",
    "2024-09-12  ToolLocator and MemoryManager are complete, working on Misc Tools.  Adds doc refs.",
    "2024-08-18  Only the first few Tool Locator calls have additional information like parameters, errors, c calls"
  ],
  "toolcalls": [
    {
      "toolcall": "01",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "TLBootInit",
      "description": "Initializes Tool Locator and all other ROM-based tools sets - not called by application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv2", "page": "24-4" }]
    },
    {
      "toolcall": "02",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "TLStartUp",
      "description": "Starts up the Tool Locator for use by an application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void TLStartUp()" },
      "docs": [{ "ref": "tbv2", "page": "24-4" }]
    },
    {
      "toolcall": "03",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "TLShutDown",
      "description": "Shuts down the Tool Locator when an application quits",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void TLShutDown()" },
      "docs": [
        { "ref": "tbv2", "page": "24-5" },
        { "ref": "tbv3", "page": "51-2" }
      ]
    },
    {
      "toolcall": "04",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "TLVersion",
      "description": "Returns the version number of the Tool Locator",
      "parameters": {
        "input": [ { "size": "word", "name": "wordspace", "description": "Space for result" } ],
        "output": [ { "size": "word", "name": "versionInfo", "description": "Version number of Tool Locator" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word TLVersion()" },
      "docs": [{ "ref": "tbv2", "page": "24-5" }]
    },
    {
      "toolcall": "05",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "TLReset",
      "description": "Resets the Tool Locator & all other ROM-based tool sets on system reset - not by appl.",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv2", "page": "24-6" }]
    },
    {
      "toolcall": "06",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "TLStatus",
      "description": "Indicates whether Tool Locator is active",
      "parameters": {
        "input": [ { "size": "word", "name": "wordspace", "description": "Space for result" } ],
        "output": [ { "size": "word", "name": "activeFlag", "description": "BOOLEAN; TRUE (Tool Locator is always active)" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean TLStatus()" },
      "docs": [{ "ref": "tbv2", "page": "24-6" }]
    },
    {
      "toolcall": "09",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "GetTSPtr",
      "description": "Returns the pointer to the function pointer table of a specified tool set",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "word", "name": "userOrSystem", "description": "$0000 = system tool set; $8000 = user tool set" },
          { "size": "word", "name": "tsNum", "description": "Tool set number of tool set whose pointer is to be returned" }
        ],
        "output": [
          { "size": "long", "name": "fptPtr", "description": "POINTER to function table pointer of tool set" }
        ]
      },
      "errors": ["tl0001"],
      "c": { "call": "extern pascal Pointer GetTSPtr(userOrSystem,tsNum)" },
      "docs": [{ "ref": "tbv2", "page": "24-8" }]
    },
    {
      "toolcall": "0A",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "SetTSPtr",
      "description": "Installs the pointer to a function ptr table in the appropriate tool pointer table",
      "parameters": {
        "input": [
          { "size": "word", "name": "userOrSystem", "description": "$0000 = system tool set; $8000 = user tool set" },
          { "size": "word", "name": "tsNum", "description": "Tool set number of tool set" },
          { "size": "long", "name": "fptPtr", "description": "POINTER to function table pointer of tool set" }
        ]
      },
      "errors": ["tl0001"],
      "c": { "call": "extern pascal void SetTSPtr(userOrSystem,tsNum, fptPtr)" },
      "docs": [{ "ref": "tbv2", "page": "24-19" }]
    },
    {
      "toolcall": "0B",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "GetFuncPtr",
      "description": "Returns entry in the function ptr table for a spec function in a specified tool set",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "word", "name": "userOrSystem", "description": "$0000 = system tool set; $8000 = user tool set" },
          { "size": "byte", "name": "funcNum", "description": "Funtion number" },
          { "size": "byte", "name": "tsNum", "description": "Tool set number" }
        ],
        "output": [
          { "size": "long", "name": "fptEntry", "description": "Entry in function pointer table" }
        ]
      },
      "errors": ["tl0001", "tl0002"],
      "c": { "call": "extern pascal Pointer GetFuncPtr(userOrSystem,funcTsNum)" },
      "docs": [{ "ref": "tbv2", "page": "24-7" }]
    },
    {
      "toolcall": "0C",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "GetWAP",
      "description": "Gets the pointer to the work area for a specified tool set",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "word", "name": "userOrSystem", "description": "$0000 = system tool set; $8000 = user tool set" },
          { "size": "word", "name": "tsNum", "description": "Tool set number" }
        ],
        "output": [
          { "size": "long", "name": "waptPtr", "description": "POINTER to work area of tool set" }
        ]
      },
      "errors": ["tl0001"],
      "c": { "call": "extern pascal Pointer GetWAP(userOrSystem,tsNum)" },
      "docs": [{ "ref": "tbv2", "page": "24-9" }]
    },
    {
      "toolcall": "0D",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "SetWAP",
      "description": "Sets the pointer to the work area for a specified tool set",
      "parameters": {
        "input": [
          { "size": "word", "name": "userOrSystem", "description": "$0000 = system tool set; $8000 = user tool set" },
          { "size": "word", "name": "tsNum", "description": "Tool set number" },
          { "size": "long", "name": "waptPtr", "description": "POINTER to work area of tool set" }
        ]
      },
      "errors": ["tl0001"],
      "c": { "call": "extern pascal void SetWAP(userOrSystem,tsNum,waptPtr)" },
      "docs": [{ "ref": "tbv2", "page": "24-20" }]
    },
    {
      "toolcall": "0E",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "LoadTools",
      "description": "Ensures that spec system tool sets are available & have specified minimum version numbers",
      "parameters": {
        "input": [{ "size": "long", "name": "toolTablePtr", "description": "POINTER to table of tool set numbers" }]
      },
      "errors": ["tl0001", "tl0010", "slUnch", "proUnch"],
      "c": { "call": "extern pascal void LoadTools(toolTablePtr)" },
      "docs": [
        { "ref": "tbv2", "page": "24-11" },
        { "ref": "gs16pr60", "page": "234" },
        { "ref": "tn.iigs.100" }
      ]
    },
    {
      "toolcall": "0F",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "LoadOneTool",
      "description": "Ensures that spec system tool set is available & has a spec minimum version number",
      "parameters": {
        "input": [
          { "size": "word", "name": "toolNumber", "description": "INTEGER; tool set number of tool set to load" },
          { "size": "word", "name": "minVersion", "description": "Minimum version number of tool set needed" }
        ]
      },
      "errors": ["tl0001", "tl0010", "slUnch", "proUnch"],
      "c": { "call": "extern pascal void LoadOneTool(toolNumber,minVersion)" },
      "docs": [
        { "ref": "tbv2", "page": "24-10" },
        { "ref": "gs16pr60", "page": "234" },
        { "ref": "tn.iigs.100" }
      ]
    },
    {
      "toolcall": "10",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "UnloadOneTool",
      "description": "Unloads a specified tool set from memory",
      "parameters": {
        "input": [ { "size": "word", "name": "toolNumber", "description": "INTEGER; tool set number of tool set to load" } ]
      },
      "errors": ["tl0001"],
      "c": { "call": "extern pascal void UnloadOneTool(toolNumber)" },
      "docs": [
        { "ref": "tbv2", "page": "24-25" },
        { "ref": "gs16pr60", "page": "234" }
      ]
    },
    {
      "toolcall": "11",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "TLMountVolume",
      "description": "Displays on SHR screen a simulated dialog box to prompt user to mount a volume",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "whereX", "description": "INTEGER; upper lext X coordinate for box" },
          { "size": "word", "name": "whereY", "description": "INTEGER; upper lext Y coordinate for box" },
          { "size": "long", "name": "line1Ptr", "description": "POINTER to Pascal-type string to appear at top of box" },
          { "size": "long", "name": "line2Ptr", "description": "POINTER to Pascal-type string to appear just below line 1" },
          { "size": "long", "name": "but1Ptr", "description": "POINTER to Pascal-type string to appear inside button 1" },
          { "size": "long", "name": "but2Ptr", "description": "POINTER to Pascal-type string to appear inside button 2" }
        ],
        "output": [
          { "size": "word", "name": "whichButton", "description": "Button number chosen; Return = 1, Esc = 2"}
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word TLMountVolume(whereX,whereY,line1Ptr,line2Ptr,but1Ptr,but2Ptr)" },
      "docs": [
        { "ref": "tbv2", "page": "24-21" },
        { "ref": "gs16pr60", "page": "234" }
      ]
    },
    {
      "toolcall": "12",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "TLTextMountVol",
      "description": "Displays on 40-column text screen a simulated dialog box to prompt user to mount volume",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "line1Ptr", "description": "POINTER to Pascal-type string to appear at top of box" },
          { "size": "long", "name": "line2Ptr", "description": "POINTER to Pascal-type string to appear just below line 1" },
          { "size": "long", "name": "but1Ptr", "description": "POINTER to Pascal-type string to appear inside button 1" },
          { "size": "long", "name": "but2Ptr", "description": "POINTER to Pascal-type string to appear inside button 2" }
        ],
        "output": [
          { "size": "word", "name": "whichButton", "description": "Button number chosen; Return = 1, Esc = 2"}
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word TLTextMountVolume(line1Ptr,line2Ptr,but1Ptr,but2Ptr)" },
      "docs": [{ "ref": "tbv2", "page": "24-23" }]
    },
    {
      "toolcall": "13",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "SaveTextState",
      "description": "Saves state of text scrn & forces hardware to display text scrn regardless of current mode",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "stateHandle", "description": "HANDLE to state record (see Toolbox Ref Vol2, Table 24-4)"}
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Handle SaveTextState()" },
      "docs": [
        { "ref": "tbv2", "page": "24-17" },
        { "ref": "tbv3", "page": "51-2" },
        { "ref": "gs16pr60", "page": "234"}
      ]
    },
    {
      "toolcall": "14",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "RestoreTextState",
      "description": "Restores state of text screen from a specified handle and disposes of the handle",
      "parameters": {
        "input": [
          { "size": "long", "name": "stateHandle", "description": "HANDLE to state record to restore" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void RestoreTextState(stateHandle)" },
      "docs": [
        { "ref": "tbv2", "page": "24-16" },
        { "ref": "gs16pr60", "page": "234"}
    ]
    },
    {
      "toolcall": "15",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "MessageCenter",
      "description": "Allows applications to communicate with each other (Tool Locator version >= 2.1)",
      "parameters": {
        "input": [
          { "size": "word", "name": "action", "description": "1 = add, 2 = get, 3 = delete (see Toolbox Ref Vol2, Table 24-3)" },
          { "size": "word", "name": "type", "description": "Message ID number" },
          { "size": "long", "name": "messageHandle", "description": "HANDLE to message" }
        ]
      },
      "errors": ["tl0111"],
      "c": { "call": "extern pascal void MessageCenter(action,type,messageHandle)" },
      "docs": [
        { "ref": "tbv2", "page": "24-14" },
        { "ref": "tbv3", "page": "51-2" },
        { "ref": "gs16pr60", "page": "234"}
      ]
    },
    {
      "toolcall": "16",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "SetDefaultTPT",
      "description": "Sets default Tool Pointer Table (TPT) to current TPT - Used to install a tool patch - not called by application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetDefaultTPT()" },
      "docs": [{ "ref": "tbv3", "page": "51-16" }]
    },
    {
      "toolcall": "17",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "MessageByName",
      "description": "Creates and associates a name with a new message, providing a mechanism for passing messages between programs",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "word", "name": "createItFlag", "description": "BOOLEAN; indicates whether or not to create the message" },
          { "size": "long", "name": "recordPointer", "description": "POINTER to input record" }
        ],
        "output": [
          { "size": "long", "name": "responseRecord", "description": "Response record from call"}
        ]
      },
      "errors": ["tl0111", "tl0112", "tl0113", "mmUnch"],
      "c": { "call": "extern pascal responseRecord MessageByName(createItFlag,recordPointer)" },
      "docs": [{ "ref": "tbv3", "page": "51-13" }]
    },
    {
      "toolcall": "18",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "StartUpTools",
      "description": "Starts and loads the tools specified in the input StartStop record",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "word", "name": "userID", "description": "Application user ID for system calls" },
          { "size": "word", "name": "startStopRefDesc", "description": "Type of reference stored in startStopRef" },
          { "size": "long", "name": "startStopRef", "description": "Reference to the StartStop record" }
        ],
        "output": [
          { "size": "long", "name": "startStopRefRet", "description": "Reference to resulting StartStop record"}
        ]
      },
      "errors": ["tl0103", "tl0104", "slUnch", "mmUnch", "gsosUnch"],
      "c": { "call": "extern pascal long StartUpTools(userID,startStopRefDesc,startStopRef)" },
      "docs": [
        { "ref": "tbv3", "page": "51-18" },
        { "ref": "gs16pr60", "page": "233" }
      ]
    },
    {
      "toolcall": "19",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "ShutDownTools",
      "description": "Shuts down the tools specified in the input StartStop record",
      "parameters": {
        "input": [
          { "size": "word", "name": "startStopRefDesc", "description": "Type of reference stored in startStopRef" },
          { "size": "long", "name": "startStopRef", "description": "Reference to the StartStop record" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void ShutDownTools(startStopRefDesc,startStopRef)" },
      "docs": [
        { "ref": "tbv3", "page": "51-17" },
        { "ref": "gs16pr60", "page": "233" }
      ]
    },
    {
      "toolcall": "1A",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "GetMsgHandle",
      "description": "Returns the handle to a message in the Message Center",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "word", "name": "flags", "description": "Command flags" },
          { "size": "long", "name": "messageRef", "description": "Specifies which message to fetch" }
        ],
        "output": [
          { "size": "long", "name": "theHandle", "description": "Handle of the specified message"}
        ]
      },
      "errors": ["tl0111"],
      "c": { "call": "extern pascal Handle GetMsgHandle(flags,messageRef)" },
      "docs": [{ "ref": "gs16pr60", "page": "242" }]
    },
    {
      "toolcall": "1B",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "AcceptRequests",
      "description": "Call AcceptRequests to notify the system that you can receive requests",
      "parameters": {
        "input": [
          { "size": "long", "name": "nameString", "description": "Pointer to Pascal name string" },
          { "size": "word", "name": "userID", "description": "User ID associated with this request procedure" },
          { "size": "long", "name": "requestProc", "description": "Address of the request procedure to install" }
        ]
      },
      "errors": ["tl0113","tl0121"],
      "c": { "call": "extern pascal void AcceptRequests(nameString,userID,requestProc)" },
      "docs": [{ "ref": "gs16pr60", "page": "235" }]
    },
    {
      "toolcall": "1C",
      "toolnum": "01",
      "toolname": "Tool Locator",
      "callname": "SendRequest",
      "description": "Sends the specified request to zero or more qualifying registered request procedures (IPC)",
      "parameters": {
        "input": [
          { "size": "word", "name": "reqCode", "description": "Request code" },
          { "size": "word", "name": "sendHow", "description": "Specifies how to send the request" },
          { "size": "long", "name": "target", "description": "Specifies recipient of request" },
          { "size": "long", "name": "dataIn", "description": "Input data or pointer to input data" },
          { "size": "long", "name": "dataOut", "description": "POINTER to output buffer" }
        ]
      },
      "errors": ["tl0120","tl0122"],
      "c": { "call": "extern pascal void SendRequest(reqCode,sendHow,target,dataIn,dataOut)" },
      "docs": [{ "ref": "gs16pr60", "page": "244" }]
    },
    {
      "toolcall": "01",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "MMBootInit",
      "description": "Called ONLY by the Tool Locator when Memory Manager is initialized - not called by application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv1", "page": "12-16" }]
    },
    {
      "toolcall": "02",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "MMStartUp",
      "description": "Starts up the Memory Manager for use by an application",
      "parameters": {
        "input": [ { "size": "word", "name": "wordspace", "description": "Space for result" } ],
        "output": [ { "size": "word", "name": "userID", "description": "User ID assigned to the application by the operating system" } ]

      },
      "errors": ["mm0207"],
      "c": { "call": "extern pascal Word MMStartUp()" },
      "docs": [{ "ref": "tbv1", "page": "12-17" }]
    },
    {
      "toolcall": "03",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "MMShutDown",
      "description": "Shuts down the Memory Manager when the application quits",
      "parameters": {
        "input": [ { "size": "word", "name": "userID", "description": "User ID of the application to be shut down" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void MMShutDown(userID)" },
      "docs": [{ "ref": "tbv1", "page": "12-18" }]
    },
    {
      "toolcall": "04",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "MMVersion",
      "description": "Returns the version number of the Memory Manager",
      "parameters": {
        "input": [ { "size": "word", "name": "wordspace", "description": "Space for result" } ],
        "output": [ { "size": "word", "name": "versionInfo", "description": "Version number of the Memory Manager" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word MMVersion()" },
      "docs": [{ "ref": "tbv1", "page": "12-19" }]
    },
    {
      "toolcall": "05",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "MMReset",
      "description": "Called ONLY when the system is Reset - not called by application",
      "parameters": { "none": true },
      "errors": ["mm0201"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv1", "page": "12-19" }]
    },
    {
      "toolcall": "06",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "MMStatus",
      "description": "Indicates whether or not the Memory Manager is active",
      "parameters": {
        "input": [ { "size": "word", "name": "wordspace", "description": "Space for result" } ],
        "output": [ { "size": "word", "name": "activeFlag", "description": "BOOLEAN; TRUE if Memory Manager is active, FALSE if inactive" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean MMStatus()" },
      "docs": [{ "ref": "tbv1", "page": "12-20" }]
    },
    {
      "toolcall": "09",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "NewHandle",
      "description": "Creates a new block and returns the handle to the block",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "long", "name": "blockSize", "description": "Size in bytes of block to create" },
          { "size": "word", "name": "userID", "description": "User ID to be associated with the block" },
          { "size": "word", "name": "attributes", "description": "Attributes (see Toolbox Ref Vol1 Figure 12-9)" },
          { "size": "long", "name": "locationPtr", "description": "POINTER to where in memory the block is to begin" } 
        ],
        "output": [ 
          { "size": "long", "name": "theHandle", "description": "HANDLE of new block; empty if block of 0 bytes created" }
        ]
      },
      "errors": ["mm0201","mm0204","mm0207"],
      "c": { "call": "extern pascal Handle NewHandle(blockSize,userID,attributes,locationPtr)" },
      "docs": [{ "ref": "tbv1", "page": "12-35" }]
    },
    {
      "toolcall": "0A",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "ReAllocHandle",
      "description": "Reallocates a purged block, using new attributes",
      "parameters": {
        "input": [
          { "size": "long", "name": "blockSize", "description": "Size in bytes of block to create" },
          { "size": "word", "name": "userID", "description": "User ID to be associated with the block" },
          { "size": "word", "name": "attributes", "description": "Attributes (see Toolbox Ref Vol1 Figure 12-9)" },
          { "size": "long", "name": "locationPtr", "description": "POINTER to where in memory the block is to begin" },
          { "size": "long", "name": "theHandle", "description": "HANDLE of the block to reallocate" }
        ]
      },
      "errors": ["mm0201","mm0203","mm0204","mm0206","mm0207"],
      "c": { "call": "extern pascal void ReallocHandle(blockSize,userID,attributes,locationPtr,theHandle)" },
      "docs": [{ "ref": "tbv1", "page": "12-41" }]
    },
    {
      "toolcall": "0B",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "RestoreHandle",
      "description": "Reallocates purged blk with same attrib, user ID, & size as the purged handle",
      "parameters": {
        "input": [
          { "size": "long", "name": "theHandle", "description": "HANDLE of the block to restore" }
        ]
      },
      "errors": ["mm0201","mm0203","mm0206","mm0208"],
      "c": { "call": "extern pascal void RestoreHandle(theHandle)" },
      "docs": [{ "ref": "tbv1", "page": "12-42" }]
    },
    {
      "toolcall": "0C",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "AddToOOMQueue",
      "description": "Adds the specified out-of-memory routine to the head of the out-of-memory queue",
      "parameters": {
        "input": [
          { "size": "long", "name": "headerPtr", "description": "POINTER to out-of-memory routine" }
        ]
      },
      "errors": ["mt0381"],
      "c": { "call": "extern pascal void AddToOOMQueue(headerPtr)" },
      "docs": [{ "ref": "tbv3", "page": "36-9" }]
    },
    {
      "toolcall": "0D",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "RemoveFromOOMQ",
      "description": "Removes the specified out-of-memory routine from the queue",
      "parameters": {
        "input": [
          { "size": "long", "name": "headerPtr", "description": "POINTER to out-of-memory routine" }
        ]
      },
      "errors": ["mt0380","mt0381"],
      "c": { "call": "extern pascal void RemoveFromOOMQueue(headerPtr)" },
      "docs": [{ "ref": "tbv3", "page": "36-11" }]
    },
    {
      "toolcall": "10",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "DisposeHandle",
      "description": "Discards a specified block and deallocates its handle. The block is purged regardless of locked status and purge level.",
      "parameters": {
        "input": [
          { "size": "long", "name": "theHandle", "description": "HANDLE of the block to be discarded" }
        ]
      },
      "errors": ["mm0206"],
      "c": { "call": "extern pascal void DisposeHandle(theHandle)" },
      "docs": [{ "ref": "tbv1", "page": "12-24" }]
    },
    {
      "toolcall": "11",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "DisposeAll",
      "description": "Discards all of the handles and blocks belonging to a specifed user ID",
      "parameters": {
        "input": [
          { "size": "word", "name": "userID", "description": "User ID whose handles will be discarded" }
        ]
      },
      "errors": ["mm0207"],
      "c": { "call": "extern pascal void DisposeAll(userID)" },
      "docs": [{ "ref": "tbv1", "page": "12-23" }]
    },
    {
      "toolcall": "12",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "PurgeHandle",
      "description": "Purges a specified purgeable, unlocked block, but doesn't deallocate handle",
      "parameters": {
        "input": [
          { "size": "long", "name": "theHandle", "description": "HANDLE of the block to be purged" }
        ]
      },
      "errors": ["mm0204", "mm0205", "mm0206"],
      "c": { "call": "extern pascal void PurgeHandle(theHandle)" },
      "docs": [{ "ref": "tbv1", "page": "12-40" }]
    },
    {
      "toolcall": "13",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "PurgeAll",
      "description": "Purges all of the purgeable, unlocked blocks for a specified user ID",
      "parameters": {
        "input": [
          { "size": "word", "name": "userID", "description": "User ID whose blocks will be purged" }
        ]
      },
      "errors": ["mm0202", "mm0206", "mm0207"],
      "c": { "call": "extern pascal void PurgeAll(userID)" },
      "docs": [{ "ref": "tbv1", "page": "12-39" }]
    },
    {
      "toolcall": "18",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "GetHandleSize",
      "description": "Returns the size of a block",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "long", "name": "theHandle", "description": "HANDLE of block whose size is to be retrieved" }
        ],
        "output": [ { "size": "long", "name": "blockSize", "description": "Size of block, in bytes" } ]

      },
      "errors": ["mm0206"],
      "c": { "call": "extern pascal LongWord GetHandleSize(theHandle)" },
      "docs": [{ "ref": "tbv1", "page": "12-27" }]
    },
    {
      "toolcall": "19",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "SetHandleSize",
      "description": "Changes the size of a specified block",
      "parameters": {
        "input": [
          { "size": "long", "name": "newSize", "description": "New size of blocks in bytes" },
          { "size": "long", "name": "theHandle", "description": "HANDLE of the block whose size is to be set" }
        ]
      },
      "errors": ["mm0201","mm0202","mm0204","mm0206"],
      "c": { "call": "extern pascal void SetHandleSize(newSize,theHandle)" },
      "docs": [
        { "ref": "tbv1", "page": "12-43" },
        { "ref": "tbv3", "page": "36-2" }
      ]
    },
    {
      "toolcall": "1A",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "FindHandle",
      "description": "Returns the handle of a block containing a specified address. If the block is not locked, it may later move.",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "long", "name": "locationPtr", "description": "POINTER whose handle will be found" }
        ],
        "output": [ 
          { "size": "long", "name": "theHandle", "description": "HANDLE of locationPtr; NIL if not found" } 
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Handle FindHandle(locationPtr)" },
      "docs": [{ "ref": "tbv1", "page": "12-25" }]
    },
    {
      "toolcall": "1B",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "FreeMem",
      "description": "Returns the total number of free bytes in memory",
      "parameters": {
        "input": [{ "size": "long", "name": "longspace", "description": "Space for result" }],
        "output": [{ "size": "long", "name": "freeSize", "description": "Total number of free bytes in memory" }]

      },
      "errors": ["none"],
      "c": { "call": "extern pascal LongWord FreeMem()" },
      "docs": [{ "ref": "tbv1", "page": "12-26" }]
    },
    {
      "toolcall": "1C",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "MaxBlock",
      "description": "Returns size of largest free mem block, but not mem that can be freed by purge or compact",
      "parameters": {
        "input": [{ "size": "long", "name": "longspace", "description": "Space for result" }],
        "output": [{ "size": "long", "name": "blockSize", "description": "Size in bytes of largest free block in memory" }]

      },
      "errors": ["none"],
      "c": { "call": "extern pascal LongWord MaxBlock()" },
      "docs": [{ "ref": "tbv1", "page": "12-34" }]
    },
    {
      "toolcall": "1D",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "TotalMem",
      "description": "Returns the size of all memory, including the main 256k",
      "parameters": {
        "input": [{ "size": "long", "name": "longspace", "description": "Space for result" }],
        "output": [{ "size": "long", "name": "totalSize", "description": "Total size in bytes of memory, including main 256K" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal LongWord TotalMem()" },
      "docs": [{ "ref": "tbv1", "page": "12-46" }]
    },
    {
      "toolcall": "1E",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "CheckHandle",
      "description": "Checks a specified handle to see whether it is valid",
      "parameters": {
        "input": [{ "size": "long", "name": "theHandle", "description": "HANDLE whose validity will be checked" }]
      },
      "errors": ["mm0206"],
      "c": { "call": "extern pascal void CheckHandle(theHandle)" },
      "docs": [{ "ref": "tbv1", "page": "12-22" }]
    },
    {
      "toolcall": "1F",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "CompactMem",
      "description": "Compacts memory space",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void CompactMem()" },
      "docs": [{ "ref": "tbv1", "page": "12-22" }]
    },
    {
      "toolcall": "20",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "HLock",
      "description": "Locks a block, specified by handle",
      "parameters": {
        "input": [{ "size": "long", "name": "theHandle", "description": "HANDLE of the block to be locked" }]
      },
      "errors": ["mm0206"],
      "c": { "call": "extern pascal void HLock(theHandle)" },
      "docs": [{ "ref": "tbv1", "page": "12-30" }]
    },
    {
      "toolcall": "21",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "HLockAll",
      "description": "Locks all of the blocks belonging to a specified user ID",
      "parameters": {
        "input": [{ "size": "word", "name": "userID", "description": "User ID whose blocks will be locked" }]
      },
      "errors": ["mm0207"],
      "c": { "call": "extern pascal void HLockAll(userID)" },
      "docs": [{ "ref": "tbv1", "page": "12-31" }]
    },
    {
      "toolcall": "22",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "HUnlock",
      "description": "Unlocks a specified block",
      "parameters": {
        "input": [{ "size": "long", "name": "theHandle", "description": "HANDLE of the block to be locked" }]
      },
      "errors": ["mm0206"],
      "c": { "call": "extern pascal void HUnlock(theHandle)" },
      "docs": [{ "ref": "tbv1", "page": "12-32" }]
    },
    {
      "toolcall": "23",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "HUnlockAll",
      "description": "Unlocks all of the blocks belonging to a specified user ID",
      "parameters": {
        "input": [{ "size": "word", "name": "userID", "description": "User ID whose blocks will be unlocked" }]
      },
      "errors": ["mm0207"],
      "c": { "call": "extern pascal void HUnlockAll(userID)" },
      "docs": [{ "ref": "tbv1", "page": "12-33" }]
    },
    {
      "toolcall": "24",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "SetPurge",
      "description": "Sets the purge level of a specified block. 0=Not, 1=Least, 2=Next Most, 3=Most (3 is only for System Loader, use levels 0-2)",
      "parameters": {
        "input": [
          { "size": "word", "name": "newPurgeLevel", "description": "New purge level of block (bits 1-0 only; set others to 0)" },
          { "size": "long", "name": "theHandle", "description": "HANDLE of the block whose purge level is to be set" }
      ]
      },
      "errors": ["mm0206"],
      "c": { "call": "extern pascal void SetPurge(newPurgeLevel,theHandle)" },
      "docs": [{ "ref": "tbv1", "page": "12-44" }]
    },
    {
      "toolcall": "25",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "SetPurgeAll",
      "description": "Sets the purge level of all blocks belonging to a specified user ID",
      "parameters": {
        "input": [
          { "size": "word", "name": "newPurgeLevel", "description": "New purge level of block (bits 1-0 only; set others to 0)" },
          { "size": "word", "name": "userID", "description": "User ID whose blocks are to be set to newPurgeLevel" }
      ]
      },
      "errors": ["mm0207"],
      "c": { "call": "extern pascal void SetPurgeAll(newPurgeLevel,userID)" },
      "docs": [{ "ref": "tbv1", "page": "12-45" }]
    },
    {
      "toolcall": "28",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "PtrToHand",
      "description": "Copies spec. # of bytes from src to dest., w/src spec. by pointer, & dest. spec. by handle",
      "parameters": {
        "input": [
          { "size": "long", "name": "sourcePtr", "description": "POINTER specifying start of bytes to be copied" },
          { "size": "long", "name": "destHandle", "description": "HANDLE specifying starting adress where bytes will be written" },
          { "size": "long", "name": "count", "description": "Number of bytes to be copied" }
      ]
      },
      "errors": ["mm0202","mm0206"],
      "c": { "call": "extern pascal void PtrToHand(sourcePtr,destHandle,count)" },
      "docs": [{ "ref": "tbv1", "page": "12-38" }]
    },
    {
      "toolcall": "29",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "HandToPtr",
      "description": "Copies spec. # of bytes from src to dest., w/src spec. by handle, & dest. spec. by pointer",
      "parameters": {
        "input": [
          { "size": "long", "name": "sourceHandle", "description": "HANDLE specifying start of bytes to be copied" },
          { "size": "long", "name": "destPtr", "description": "POINTER to starting adress where bytes will be written" },
          { "size": "long", "name": "count", "description": "Number of bytes to be copied" }
      ]
      },
      "errors": ["mm0202","mm0206"],
      "c": { "call": "extern pascal void HandToPtr(sourceHandle,destPtr,count)" },
      "docs": [{ "ref": "tbv1", "page": "12-29" }]
    },
    {
      "toolcall": "2A",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "HandToHand",
      "description": "Copies spec. # of bytes from src to dest., w/src spec. by handle, & dest. spec. by handle",
      "parameters": {
        "input": [
          { "size": "long", "name": "sourceHandle", "description": "HANDLE specifying start of bytes to be copied" },
          { "size": "long", "name": "destHandle", "description": "HANDLE specifying starting adress where bytes will be written" },
          { "size": "long", "name": "count", "description": "Number of bytes to be copied" }
      ]
      },
      "errors": ["mm0202","mm0206"],
      "c": { "call": "extern pascal void HandToHand(sourceHandle,destHandle,count)" },
      "docs": [{ "ref": "tbv1", "page": "12-28" }]
    },
    {
      "toolcall": "2B",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "BlockMove",
      "description": "Copies a specified number of bytes from a source to a destination",
      "parameters": {
        "input": [
          { "size": "long", "name": "sourcePtr", "description": "POINTER to start of bytes to be copied" },
          { "size": "long", "name": "destPtr", "description": "POINTER to starting adress where bytes will be written" },
          { "size": "long", "name": "count", "description": "Number of bytes to be copied" }
      ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void BlockMove(sourcePtr,destPtr,count)" },
      "docs": [{ "ref": "tbv1", "page": "12-21" }]
    },
    {
      "toolcall": "2F",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "RealFreeMem",
      "description": "Returns number of free bytes in memory, plus number that could be made free by purging",
      "parameters": {
        "input": [{ "size": "long", "name": "longspace", "description": "Space for result" }],
        "output": [{ "size": "long", "name": "freeBytes", "description": "Number of bytes available in memory" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Long RealFreeMem()" },
      "docs": [{ "ref": "tbv3", "page": "36-10" }]
    },
    {
      "toolcall": "30",
      "toolnum": "02",
      "toolname": "Memory Manager",
      "callname": "SetHandleID",
      "description": "Provides a supported way to determine and optionally change the User ID associated with a Memory Manager handle",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for old ID" },
          { "size": "word", "name": "newID", "description": "New ID for handle (0 to leave it unchanged)" },
          { "size": "long", "name": "theHandle", "description": "Handle to be updated" }
        ],
        "output": [
          { "size": "word", "name": "oldID", "description": "Handle's previous ID"}
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal word SetHandleID(newID,theHandle)" },
      "docs": [{ "ref": "gs16pr60", "page": "100" }]
    },
    {
      "toolcall": "01",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "MTBootInit",
      "description": "Initializes the Miscellaneous Tools Set; called only by Tool Locator",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv1", "page": "14-6" }]
    },
    {
      "toolcall": "02",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "MTStartUp",
      "description": "Starts up the Miscellaneous Tool Set for use by an application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void MTStartUp()" },
      "docs": [{ "ref": "tbv1", "page": "14-6" }]
    },
    {
      "toolcall": "03",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "MTShutDown",
      "description": "Shuts down the Miscellaneous Tool Set when an application quits",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void MTShutDown()" },
      "docs": [{ "ref": "tbv1", "page": "14-7" }]
    },
    {
      "toolcall": "04",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "MTVersion",
      "description": "Returns the version number of the Miscellaneous Tool Set",
      "parameters": {
        "input": [ { "size": "word", "name": "wordspace", "description": "Space for result" } ],
        "output": [ { "size": "word", "name": "versionInfo", "description": "Version number of the Miscellaneous Tool Set" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word MTVersion()" },
      "docs": [{ "ref": "tbv1", "page": "14-7" }]
    },
    {
      "toolcall": "05",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "MTReset",
      "description": "Resets the Miscellaneous Tool Set; called only when the system is reset",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv1", "page": "14-8" }]
    },
    {
      "toolcall": "06",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "MTStatus",
      "description": "Indicates whether the Miscellaneous Tools Set is active",
      "parameters": {
        "input": [ { "size": "word", "name": "wordspace", "description": "Space for result" } ],
        "output": [ { "size": "word", "name": "activeFlag", "description": "BOOLEAN; TRUE if Miscellaneous Tool Set is active, FALSE if not" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean MTStatus()" },
      "docs": [{ "ref": "tbv1", "page": "14-8" }]
    },
    {
      "toolcall": "09",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "WriteBRam",
      "description": "Writes 252 bytes of data from a spec mem loc, plus 4 checksum bytes, to Battery RAM",
      "parameters": {
        "input": [ { "size": "long", "name": "bufferPtr", "description": "POINTER to the 252 bytes to be written to Battery RAM" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void WriteBRam(bufferPtr)" },
      "docs": [{ "ref": "tbv1", "page": "14-9" }]
    },
    {
      "toolcall": "0A",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "ReadBRam",
      "description": "Reads 252 bytes of data from Battery RAM, plus 4 checksum bytes, & writes to spec mem loc",
      "parameters": {
        "input": [ { "size": "long", "name": "bufferPtr", "description": "POINTER to the 256 bytes to be written to application" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void ReadBRam(bufferPtr)" },
      "docs": [{ "ref": "tbv1", "page": "14-10" }]
    },
    {
      "toolcall": "0B",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "WriteBParam",
      "description": "Writes data to a specified paramameter in Battery RAM",
      "parameters": {
        "input": [
          { "size": "word", "name": "theData", "description": "Data to be written (low-order byte only)on" },
          { "size": "word", "name": "paramRefNum", "description": "Parameter reference number (see Toolbox Ref Vol1, Table 14-3)" } 
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void WriteBParam(theData,paramRefNum)" },
      "docs": [{ "ref": "tbv1", "page": "14-11" }]
    },
    {
      "toolcall": "0C",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "ReadBParam",
      "description": "Reads data from a specified parameter in Battery RAM",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "paramRefNum", "description": "Parameter reference number (see Toolbox Ref Vol1, Table 14-3)" } 
        ],
        "output": [
          { "size": "word", "name": "theData", "description": "Data that was read (low-order byte only)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal word ReadBParam(paramRefNum)" },
      "docs": [{ "ref": "tbv1", "page": "14-13" }]
    },
    {
      "toolcall": "0D",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "ReadTimeHex",
      "description": "Returns current time in hexadecimal format",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "byte", "name": "weekDay", "description": "Day of week (1-7, with 1=Sunday...)" },
          { "size": "byte", "name": "null", "description": "Padding the word" },
          { "size": "byte", "name": "month", "description": "Month (0-11, with 1=January...)" },
          { "size": "byte", "name": "day", "description": "Date (0-30)" },
          { "size": "byte", "name": "curYear", "description": "Current year minus 1900" },
          { "size": "byte", "name": "hour", "description": "Hour (0-23)" },
          { "size": "byte", "name": "minute", "description": "Minute (0-59)" },
          { "size": "byte", "name": "second", "description": "Second (0-59)" }

        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal TimeRec ReadTimeHex()" },
      "docs": [{ "ref": "tbv1", "page": "14-14" }]
    },
    {
      "toolcall": "0E",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "WriteTimeHex",
      "description": "Sets the current time in hexadecimal format",
      "parameters": {
        "input": [
          { "size": "byte", "name": "month", "description": "Month (0-11, with 1=January...)" },
          { "size": "byte", "name": "day", "description": "Date (0-30)" },
          { "size": "byte", "name": "curYear", "description": "Current year minus 1900" },
          { "size": "byte", "name": "hour", "description": "Hour (0-23)" },
          { "size": "byte", "name": "minute", "description": "Minute (0-59)" },
          { "size": "byte", "name": "second", "description": "Second (0-59)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void WriteTimeHex(month,day,curYear,hour,minute,second)" },
      "docs": [{ "ref": "tbv1", "page": "14-15" }]
    },
    {
      "toolcall": "0F",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "ReadAsciiTime",
      "description": "Reads elapsed time since 00:00:00, Jan 1, 1904, converts it to ASCII output at specified address",
      "parameters": {
        "input": [ { "size": "long", "name": "bufferPtr", "description": "POINTER to start of buffer" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void ReadAsciiTime(bufferPtr)" },
      "docs": [{ "ref": "tbv1", "page": "14-16" }]
    },
    {
      "toolcall": "10",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "SetVector",
      "description": "Sets the vector address for a specified interrupt manager or handler",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "vectorRefNum", "description": "Vector to be set (see Toolbox Ref Vol1 Figure 14-9)" },
          { "size": "long", "name": "vectorPtr", "description": "POINTER to the manager or handle" } 
       ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetVector(vectorRefNum,vectorAddrPtr)" },
      "docs":  [
        { "ref": "tbv1", "page": "14-61" },
        { "ref": "tbv3", "page": "39-3" }
      ]
    },
    {
      "toolcall": "11",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "GetVector",
      "description": "Returns the vector address for a specified interrupt manager or handler",
      "parameters": {
        "input": [ 
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "word", "name": "vectorRefNum", "description": "Vector reference number of manager or handler" } 
       ],
       "output":[
          { "size": "long", "name": "vectorPtr", "description": "POINTER to the manager or handle" }
       ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Pointer GetVector(vectorRefNum)" },
      "docs": [
        { "ref": "tbv1", "page": "14-63" },
        { "ref": "tbv3", "page": "39-3" }
      ]
    },
    {
      "toolcall": "12",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "SetHeartBeat",
      "description": "Installs a specified task into the HeartBeat Interrupt Task queue",
      "parameters": {
        "input": [ 
          { "size": "long", "name": "taskPtr", "description": "POINTER to task header" }
       ]
      },
      "errors": ["mt0303","mt0304","mt0305"],
      "c": { "call": "extern pascal void SetHeartBeat(taskPtr)" },
      "docs": [{ "ref": "tbv1", "page": "14-48" }]
    },
    {
      "toolcall": "13",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "DelHeartBeat",
      "description": "Deletes a specified task from the HeartBeat Interrupt Task queue",
      "parameters": {
        "input": [ 
          { "size": "long", "name": "taskPtr", "description": "POINTER to task header" }
       ]
      },
      "errors": ["mt0305","mt0306"],
      "c": { "call": "extern pascal void DelHeartBeat(taskPtr)" },
      "docs": [
        { "ref": "tbv1", "page": "14-52" },
        { "ref": "tbv3", "page": "39-3" }
      ]
    },
    {
      "toolcall": "14",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "ClrHeartBeat",
      "description": "Removes all tasks from the Heartbeat Interrupt Task queue by clearing Heartbeat Task pointer",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void ClrHeartBeat()" },
      "docs": [
        { "ref": "tbv1", "page": "14-53" },
        { "ref": "tbv3", "page": "39-2" },
        { "ref": "tbv3", "page": "39-3" }
      ]
    },
    {
      "toolcall": "15",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "SysFailMgr",
      "description": "Displays system failure message and halts program execution",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "errorCode", "description": "Error code (see Toolbox Ref Vol1 Figure 14-8)" },
          { "size": "long", "name": "strPtr", "description": "POINTER to ASCII string to be displayed as system failure message" }
       ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal void SysFailMgr(errorCode,strPtr)" },
      "docs": [{ "ref": "tbv1", "page": "14-54" }]
    },
    {
      "toolcall": "16",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "GetAddr",
      "description": "Returns an address of a byte, word, or long parameter referenced by the firmware",
      "parameters": {
        "input": [ 
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "word", "name": "refNum", "description": "Parameter reference number (see Toolbox Ref Vol1, Table 14-5)" }
        ],
        "output": [ 
          { "size": "long", "name": "paramPtr", "description": "POINTER to parameter" }
        ]
      },      
      "errors": ["mt0301"],
      "c": { "call": "extern pascal Pointer GetAddr(refNum)" },
      "docs": [{ "ref": "tbv1", "page": "14-19" }]
    },
    {
      "toolcall": "17",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "ReadMouse",
      "description": "Returns mouse position, status, and mode",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [ 
          { "size": "word", "name": "xPosition", "description": "X position of the mouse" },
          { "size": "word", "name": "yPosition", "description": "Y position of the mouse" },
          { "size": "byte", "name": "status", "description": "Mouse status" },
          { "size": "byte", "name": "mode", "description": "Mouse mode" }
        ]
      },      
      "errors": ["mt0309"],
      "c": { "call": "extern pascal MouseRec ReadMouse()" },
      "docs": [{ "ref": "tbv1", "page": "14-34" }]
    },
    {
      "toolcall": "18",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "InitMouse",
      "description": "Initializes mouse clamp values to $000 min & $3FF max & clears mouse mode & status",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "mouseSlot", "description": "Requests search for mouse ($0000) or slot for mouse ($0001-7)" }
        ]
      },      
      "errors": ["mt0302"],
      "c": { "call": "extern pascal void InitMouse(mouseSlot)" },
      "docs": [{ "ref": "tbv1", "page": "14-32" }]
    },
    {
      "toolcall": "19",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "SetMouse",
      "description": "Sets the mouse mode",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "mouseMode", "description": "Mouse mode, low-order byte only (see Toolbox Ref V1, Table 14-7)" }
        ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal void SetMouse(mouseMode)" },
      "docs": [{ "ref": "tbv1", "page": "14-36" }]
    },
    {
      "toolcall": "1A",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "HomeMouse",
      "description": "Positions the mouse at the minimum clamp position",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": {  "call": "extern pascal void HomeMouse()" },
      "docs": [{ "ref": "tbv1", "page": "14-32" }]
    },
    {
      "toolcall": "1B",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "ClearMouse",
      "description": "Sets X & Y axis to $0000 if min clamps are negative or to the min clamp pos if positive",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void ClearMouse()" },
      "docs": [{ "ref": "tbv1", "page": "14-31" }]
    },
    {
      "toolcall": "1C",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "ClampMouse",
      "description": "Sets new clamp values & then sets the mouse position to the minimum clamp values",
      "parameters": { 
        "input": [ 
          { "size": "word", "name": "xMinClamp", "description": "Minimum clamp value for the X axis" },
          { "size": "word", "name": "xMaxClamp", "description": "Maximum clamp value for the X axis" },
          { "size": "word", "name": "yMinClamp", "description": "Minimum clamp value for the Y axis" },
          { "size": "word", "name": "yMaxClamp", "description": "Maximum clamp value for the Y axis" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void ClampMouse(xMinClamp,xMaxClamp,yMinClamp,yMaxClamp)" },
      "docs": [{ "ref": "tbv1", "page": "14-30" }]
    },
    {
      "toolcall": "1D",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "GetMouseClamp",
      "description": "Returns the current mouse clamp values",
      "parameters": { 
        "input": [ 
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [ 
          { "size": "word", "name": "xMinClamp", "description": "Minimum clamp value for the X axis" },
          { "size": "word", "name": "xMaxClamp", "description": "Maximum clamp value for the X axis" },
          { "size": "word", "name": "yMinClamp", "description": "Minimum clamp value for the Y axis" },
          { "size": "word", "name": "yMaxClamp", "description": "Maximum clamp value for the Y axis" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal ClampRec GetMouseClamp()" },
      "docs": [{ "ref": "tbv1", "page": "14-31" }]
    },
    {
      "toolcall": "1E",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "PosMouse",
      "description": "Positions the mouse at specified coordinates",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "xPos", "description": "X axis (horizontal) position of mouse" },
          { "size": "word", "name": "yPos", "description": "Y axis (vertical) position of mouse" }
       ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal void PosMouse(xPos,yPos)" },
      "docs": [{ "ref": "tbv1", "page": "14-33" }]
    },
    {
      "toolcall": "1F",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "ServeMouse",
      "description": "Returns the mouse interrupt status",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [ 
          { "size": "word", "name": "intStatus", "description": "Mouse interrupt status (see Toolbox Ref Vol1 Figure 14-2)" }
        ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal Word ServeMouse()" },
      "docs": [{ "ref": "tbv1", "page": "14-35" }]
    },
    {
      "toolcall": "20",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "GetNewID",
      "description": "Creates a new user ID",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "idTag", "description": "High-order byte = type and auxID fields; low-order byte = $0000" }

        ],
        "output": [ 
          { "size": "word", "name": "userID", "description": "Complete user ID" }
        ]
      },      
      "errors": ["mt0301","mt030B"],
      "c": { "call": "extern pascal Word GetNewID(idTag)" },
      "docs": [
        { "ref": "tbv1", "page": "14-57" },
        { "ref": "tbv3", "page": "39-2" }
      ]
    },
    {
      "toolcall": "21",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "DeleteID",
      "description": "Deletes all references to a specified user ID",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "idTag", "description": "The type and mainID fields of the user ID to delete" }
        ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal void DeleteID(idTag)" },
      "docs": [{ "ref": "tbv1", "page": "14-59" }]
    },
    {
      "toolcall": "22",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "StatusID",
      "description": "Indicates whether a specified user ID is active",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "idTag", "description": "The type and mainID fields of the desired user ID" }

        ]
      },      
      "errors": ["mt030B"],
      "c": { "call": "extern pascal void StatusID(idTag)" },
      "docs": [
        { "ref": "tbv1", "page": "14-60" }
      ]
    },
    {
      "toolcall": "23",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "IntSource",
      "description": "Enables or disables certain interrupt sources",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "srcRefNum", "description": "Source reference number of interrupt (see Toolbox Ref Vol1 Figure 14-6)" }

        ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal void IntSource(srcRefNum)" },
      "docs": [
        { "ref": "tbv1", "page": "14-25" }
      ]
    },
    {
      "toolcall": "24",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "FWentry",
      "description": "Allows some Apple II emulation-mode entry points to be supported from full native mode",
      "parameters": { 
        "input": [ 
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "aRegValue", "description": "Accumulator at entry (low-order byte only)" },
          { "size": "word", "name": "xRegValue", "description": "X register at entry (low-order byte only)" },
          { "size": "word", "name": "yRegValue", "description": "Y register at entry (low-order byte only)" },
          { "size": "word", "name": "eModeEntryPt", "description": "Emulation mode entry point" }
        ],
        "output": [ 
          { "size": "word", "name": "status", "description": "Processor status at exit (high-order byte only)" },
          { "size": "word", "name": "aRegExit", "description": "Accumulator at exit (low-order byte only)" },
          { "size": "word", "name": "xRegExit", "description": "X register at exit (low-order byte only)" },
          { "size": "word", "name": "yRegExit", "description": "Y register at exit (low-order byte only)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal FWRec FWEntry(aRegValue,xRegValue,yRegValue,eModeEntryPt)" },
      "docs": [{ "ref": "tbv1", "page": "14-17" }]
    },
    {
      "toolcall": "25",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "GetTick",
      "description": "Returns the current value of the tick counter",
      "parameters": { 
        "input": [ 
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [ 
          { "size": "long", "name": "tickCounter", "description": "Current value of the tick counter" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal LongWord GetTick()" },
      "docs": [{ "ref": "tbv1", "page": "14-22" }]
    },
    {
      "toolcall": "26",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "PackBytes",
      "description": "Packs bytes into a special format that uses less storage space",
      "parameters": { 
        "input": [ 
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "startHandle", "description": "POINTER to POINTER to start of area to be packed" },
          { "size": "long", "name": "sizePtr", "description": "POINTER to Word containing size of the area" },
          { "size": "long", "name": "bufferPtr", "description": "POINTER to the start of the output buffer area" },
          { "size": "word", "name": "bufferSize", "description": "Size of the output buffer area" }
        ],
        "output": [ 
          { "size": "word", "name": "numPackbytes", "description": "Number of packed bytes generated" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word PackBytes(startHandle,sizePtr,bufferPtr,bufferSize)" },
      "docs": [
        { "ref": "tbv1", "page": "14-39" },
        { "ref": "tbv3", "page": "39-2" }
      ]
    },
    {
      "toolcall": "27",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "UnPackBytes",
      "description": "Umpacks data from the packed format used by PackBytes",
      "parameters": { 
        "input": [ 
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "bufferPtr", "description": "POINTER to the buffer containing the packed data" },
          { "size": "word", "name": "bufferSize", "description": "Size of the packed data buffer" },
          { "size": "long", "name": "startHandle", "description": "POINTER to POINTER to area where the data will be unpacked" },
          { "size": "long", "name": "sizePtr", "description": "POINTER to Word containing size of area for unpacked data" }
        ],
        "output": [ 
          { "size": "word", "name": "numUnpackbytes", "description": "Number of source bytes unpacked" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word UnPackBytes(bufferPtr,bufferSize,startHandle,sizePtr)" },
      "docs": [
        { "ref": "tbv1", "page": "14-39" },
        { "ref": "tbv3", "page": "39-2" },
        { "ref": "gs16pr60", "page": "175" }
      ]
    },
    {
      "toolcall": "28",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "Munger",
      "description": "Manipulates bytes in a string of bytes (like find and replace)",
      "parameters": { 
        "input": [ 
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "destPtr", "description": "POINTER to the tect to be manipulated" },
          { "size": "long", "name": "destLenPtr", "description": "POINTER to number of bytes to manipulate" },
          { "size": "long", "name": "targPtr", "description": "POINTER to be searched for from destPtr" },
          { "size": "word", "name": "targLen", "description": "Number of bytes for targPtr" },
          { "size": "long", "name": "replPtr", "description": "POINTER to string to replace when targPtr found" },
          { "size": "word", "name": "replLen", "description": "Number of bytes for replPtr" },
          { "size": "long", "name": "padPtr", "description": "POINTER to character value to be added to short input" }
        ],
        "output": [ 
          { "size": "word", "name": "padBytesFound", "description": "Number of bytes padded or truncated; 0 if target found; negative if not found" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word Munger(destPtr,destLenPtr,targPtr,targLen,replPtr,replLen,padPtr)" },
      "docs": [
        { "ref": "tbv1", "page": "14-45" }
      ]
    },
    {
      "toolcall": "29",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "GetIRQEnable",
      "description": "Returns w/hardware interrupt enable states for interrupt sources that Misc.Tool can control",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [ 
          { "size": "word", "name": "hdIntStatus", "description": "Status of hardware interrupts (see Toolbox Ref Vol1 Figure 14-1)" }
        ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal Word GetIRQEnable()" },
      "docs": [
        { "ref": "tbv1", "page": "14-23" }
      ]
    },
    {
      "toolcall": "2A",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "SetAbsClamp",
      "description": "Sets the clamp values for an absolute device to new values",
      "parameters": { 
        "input": [ 
          { "size": "word", "name": "xMinClamp", "description": "Minimum clamp value for the X axis" },
          { "size": "word", "name": "xMaxClamp", "description": "Maximum clamp value for the X axis" },
          { "size": "word", "name": "yMinClamp", "description": "Minimum clamp value for the Y axis" },
          { "size": "word", "name": "yMaxClamp", "description": "Maximum clamp value for the Y axis" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetAbsClamp(xMinClamp,xMaxClamp,yMinClamp,yMaxClamp)" },
      "docs": [{ "ref": "tbv1", "page": "14-37" }]
    },
    {
      "toolcall": "2B",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "GetAbsClamp",
      "description": "Returns the current values of the absolute device clamps",
      "parameters": { 
        "input": [ 
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [ 
          { "size": "word", "name": "xMinClamp", "description": "Minimum clamp value for the X axis" },
          { "size": "word", "name": "xMaxClamp", "description": "Maximum clamp value for the X axis" },
          { "size": "word", "name": "yMinClamp", "description": "Minimum clamp value for the Y axis" },
          { "size": "word", "name": "yMaxClamp", "description": "Maximum clamp value for the Y axis" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal ClampRec GetAbsClamp()" },
      "docs": [{ "ref": "tbv1", "page": "14-17" }]
    },
    {
      "toolcall": "2C",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "SysBeep",
      "description": "Calls the Apple II monitor entry point BELL1",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void SysBeep()" },
      "docs": [{ "ref": "tbv1", "page": "14-53" }]
    },
    {
      "toolcall": "2D",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "BasicInit",
      "description": "Unofficial call to set up the clamp flags when calling from BASICMOUSE",
      "what": "???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????"
    },
    {
      "toolcall": "2E",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "AddToQueue",
      "description": "Adds the specified entry to a queue",
      "parameters": {
        "input": [ 
          { "size": "long", "name": "newEntryPtr", "description": "POINTER to element to add to queue" },
          { "size": "long", "name": "headerPtr", "description": "POINTER to first queue element" } 
        ]
      },      
      "errors": ["mt0381","mt0382"],
      "c": { "call": "extern pascal void AddToQueue(newEntryPtr,headerPtr)" },
      "docs": [
        { "ref": "tbv3", "page": "39-6" }
      ]
    },
    {
      "toolcall": "2F",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "DeleteFromQueue",
      "description": "Deletes a specified element from a queue",
      "parameters": {
        "input": [ 
          { "size": "long", "name": "entryPtr", "description": "POINTER to element to delete from queue" },
          { "size": "long", "name": "headerPtr", "description": "POINTER to first queue element" } 
        ]
      },      
      "errors": ["mt0380","mt0381"],
      "c": { "call": "extern pascal void DeleteFromQueue(entryPtr,headerPtr)" },
      "docs": [
        { "ref": "tbv3", "page": "39-7" }
      ]
    },
    {
      "toolcall": "30",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "SetInterruptState",
      "description": "Copies the specified number of bytes from the input interrupt state record into the system interrupt variables",
      "parameters": {
        "input": [ 
          { "size": "long", "name": "intStateRcdPtr", "description": "POINTER to interrupt state record" },
          { "size": "word", "name": "bytesDesired", "description": "Number of bytes to copy from record to system" } 
        ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal void SetInterruptState(intStateRcdPtr,bytesDesired)" },
      "docs": [
        { "ref": "tbv3", "page": "39-12" }
      ]
    },
    {
      "toolcall": "31",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "GetInterruptState",
      "description": "Copies the specified number of bytes into an input interrupt record from the system interrupt variables",
      "parameters": {
        "input": [ 
          { "size": "long", "name": "intStateRcdPtr", "description": "POINTER to interrupt state record" },
          { "size": "word", "name": "bytesDesired", "description": "Number of bytes to copy from system to record" } 
        ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal void GetlnterruptState(intStateRcdPtr,bytesDesired)" },
      "docs": [
        { "ref": "tbv3", "page": "39-9" }
      ]
    },
    {
      "toolcall": "32",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "GetIntStateRecSize",
      "description": "Returns the size (in bytes) of the interrupt state record",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [ 
          { "size": "word", "name": "sizeOfRecord", "description": "Length of interrupt state record, in bytes" }
        ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal Word GetIntStateRecSize()" },
      "docs": [
        { "ref": "tbv3", "page": "39-10" }
      ]
    },
    {
      "toolcall": "33",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "ReadMouse2",
      "description": "Returns the mouse position, status, and mode",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [ 
          { "size": "word", "name": "xPosition", "description": "X position of the mouse" },
          { "size": "word", "name": "yPosition", "description": "Y position of the mouse" },
          { "size": "word", "name": "statusMode", "description": "Status and mode bytes" }
        ]
      },      
      "errors": ["mt0309"],
      "c": { "call": "extern pascal MouseRec ReadMouse2()" },
      "docs": [
        { "ref": "tbv3", "page": "39-11" }
      ]
    },
    {
      "toolcall": "34",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "GetCodeResConverter",
      "description": "Returns the address of a routine that loads code resources",
      "parameters": {
        "input": [ 
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [ 
          { "size": "long", "name": "pointer", "description": "POINTER to code resource converter routine" }
        ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal Pointer GetCodeResConverter()" },
      "docs": [
        { "ref": "tbv3", "page": "39-8" }
      ]
    },
    {
      "toolcall": "35",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "GetROMResource",
      "description": "This call is for use only by system firmware",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv3", "page": "39-10" }]
    },
    {
      "toolcall": "36",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "ReleaseROMResource",
      "description": "This call is for use only by system firmware",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv3", "page": "39-12" }]
    },
    {
      "toolcall": "37",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "ConvSeconds",
      "description": "Allows conversion to and from a long integer containing the number of seconds since January 1, 1904",
      "parameters": {
        "input": [ 
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "word", "name": "convVerb", "description": "Direction and type of conversion" },
          { "size": "long", "name": "seconds", "description": "Number of seconds since January 1, 1904" },
          { "size": "long", "name": "datePtr", "description": "POINTER to buffer for converted date" }
        ],
        "output": [ 
          { "size": "long", "name": "secondsOut", "description": "Resulting number of seconds" }
        ]
      },      
      "errors": ["mt0390","mt0391"],
      "c": { "call": "extern pascal unsigned long ConvSeconds(convVerb,seconds,datePtr)" },
      "docs": [
        { "ref": "gs16pr60", "page": "176" }
      ]
    },
    {
      "toolcall": "38",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "SysBeep2",
      "description": "SysBeep2 takes an integer parameter indicating what sound to make",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "beepType", "description": "Beep type" }
        ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal void SysBeep2(beepType)" },
      "docs": [
        { "ref": "gs16pr60", "page": "186" }
      ]
    },
    {
      "toolcall": "39",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "VersionString",
      "description": "Converts a 32-bit Version number into a Pascal string",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "flags", "description": "Reserved (pass 0)" },
          { "size": "long", "name": "theVersion", "description": "The version number to convert" },
          { "size": "long", "name": "stringPtr", "description": "POINTER to a 10-byte buffer" }
        ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal void VersionString(flags,theVersion,stringPtr)" },
      "docs": [
        { "ref": "gs16pr60", "page": "189" }
      ]
    },
    {
      "toolcall": "3A",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "WaitUntil",
      "description": "Provides an upper limit on the frequency of repeating actions",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "space", "description": "Space for result" },
          { "size": "word", "name": "delayFrom", "description": "Anchor point to delay from" },
          { "size": "word", "name": "delayAmount", "description": "Specifies how long to wait for anchor" }
        ],
        "output": [
          { "size": "word", "name": "newTime", "description": "New anchor point for next call" }
        ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal Word WaitUntil(delayFrom,delayAmount)" },
      "docs": [
        { "ref": "gs16pr60", "page": "190" }
      ]
    },
    {
      "toolcall": "3B",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "StringToText",
      "description": "StringToText translates 8-bit-character text into similar text that can be displayed on the Apple IIGS text screen",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "space", "description": "Space for result" },
          { "size": "word", "name": "space", "description": "Space for result" },
          { "size": "word", "name": "flags", "description": "Flags" },
          { "size": "long", "name": "textPtr", "description": "POINTER to source text" },
          { "size": "word", "name": "textLen", "description": "Length of text" },
          { "size": "long", "name": "resultPtr", "description": "POINTER to result buffer" }
        ],
        "output": [
          { "size": "word", "name": "resultFlags", "description": "Result flags" },
          { "size": "word", "name": "printableLength", "description": "Number of printing charachters in result" }
        ]
      },      
      "errors": ["mt034F"],
      "c": { "call": "extern pascal Long StringToText(flags,textPtr,textLen,resultPtr)" },
      "docs": [
        { "ref": "gs16pr60", "page": "181" }
      ]
    },
    {
      "toolcall": "3C",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "ShowBootInfo",
      "description": "Provides a way for special system extensions to make their presence known while the system is starting up",
      "parameters": {
        "input": [ 
          { "size": "long", "name": "cStringPtr", "description": "POINTER to zero-terminated string (or NIL)" },
          { "size": "long", "name": "iconPtr", "description": "POINTER to DrawIcon-style icon (or NIL)" }
        ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal void ShowBootInfo(cStringPtr,iconPtr)" },
      "docs": [
        { "ref": "gs16pr60", "page": "179" }
      ]
    },
    {
      "toolcall": "3D",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "ScanDevices",
      "description": "Provides easy access to a GS/OS system service vector which checks for disk insertions",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "space", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "deviceNumber", "description": "Device number" }
        ]
      },      
      "errors": ["none"],
      "c": { "call": "extern pascal Word ScanDevices()" },
      "docs": [
        { "ref": "gs16pr60", "page": "178" }
      ]
    },
    {
      "toolcall": "3E",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "AlertMessage",
      "description": "Displays a message on either the text screen or the Super Hi-Res screen and makes the user choose 1 of up to 3 buttons",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "space", "description": "Space for result" },
          { "size": "long", "name": "tablePtr", "description": "POINTER to the message table" },
          { "size": "word", "name": "msgNumber", "description": "Message index number (0, 1, 2...)" },
          { "size": "long", "name": "substitutions", "description": "POINTER to the string substitution table" }
        ],
        "output": [
          { "size": "word", "name": "buttonNum", "description": "Button chosen by the user" }
        ]
      },      
      "errors": ["mt0377"],
      "c": { "call": "extern pascal Word AlertMessage(tablePtr,msgNumber,substitutions)" },
      "docs": [
        { "ref": "gs16pr601", "page": "14" }
      ]
    },
    {
      "toolcall": "3F",
      "toolnum": "03",
      "toolname": "Misc Tools",
      "callname": "DoSysPrefs",
      "description": "Clears and then sets specified bits in the GS/OS system preferences word",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "space", "description": "Space for result" },
          { "size": "word", "name": "bitsToClear", "description": "System preference bits to clear" },
          { "size": "word", "name": "bitsToSet", "description": "System preference bits to set" }
        ],
        "output": [
          { "size": "word", "name": "oldSysPrefs", "description": "Previous system preference word" }
        ]
      },      
      "errors": ["mt0301"],
      "c": { "call": "extern pascal Word DoSysPrefs(bitsToClear,bitsToSet)" },
      "docs": [
        { "ref": "gs16pr601", "page": "16" }
      ]
    },
    {
      "toolcall": "01",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "QDBootInit",
      "description": "Initializes QuickDraw II; called only by the Tool Locator - not by application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv2", "page": "16-63" }]
    },
    {
      "toolcall": "02",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "QDStartUp",
      "description": "Starts up QuickDraw II for use by an application",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "dPageAddr", "description": "Bank $0 starting address for 3 pages of direct-page space" },
          { "size": "word", "name": "masterSCB", "description": "Master SCB for super Hi-Res graphics" },
          { "size": "word", "name": "maxWidth", "description": "INTEGER; size in bytes of largest pixel map, 0 for screen width" },
          { "size": "word", "name": "userID", "description": "User ID of application" }
        ]
      },      
      "errors": ["qd0401","qd0410","mmUnch"],
      "c": { "call": "extern pascal void QDStartUp(dPageAddr,masterSCB,maxWidth,userID)" },
      "docs": [
        { "ref": "tbv2", "page": "16-64" },
        { "ref": "tbv3", "page": "43-5" },
        { "ref": "gs16pr60", "page": "199" }
      ]
    },
    {
      "toolcall": "03",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "QDShutDown",
      "description": "Shuts down QuickDraw II when an application quits",
      "parameters": { "none": true },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void QDShutDown()" },
      "docs": [
        { "ref": "tbv2", "page": "16-66" },
        { "ref": "gs16pr60", "page": "199" }
      ]
    },
    {
      "toolcall": "04",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "QDVersion",
      "description": "Returns the version number of QuickDraw II",
      "parameters": {
        "input": [ { "size": "word", "name": "wordspace", "description": "Space for result" } ],
        "output": [ { "size": "word", "name": "versionInfo", "description": "Version number of QuickDraw II" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word QDVersion()" },
      "docs": [{ "ref": "tbv2", "page": "16-66" }]
    },
    {
      "toolcall": "05",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "QDReset",
      "description": "Resets QuickDraw II; called only when the system is reset - not by application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv2", "page": "16-67" }]
    },
    {
      "toolcall": "06",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "QDStatus",
      "description": "Indicates whether QuickDraw II is active",
      "parameters": {
        "input": [ { "size": "word", "name": "wordspace", "description": "Space for result" } ],
        "output": [ { "size": "word", "name": "activeFlag", "description": "BOOLEAN; TRUE if QuickDraw II is active, FALSE if not" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean QDStatus()" },
      "docs": [{ "ref": "tbv1", "page": "16-67" }]
    },
    {
      "toolcall": "09",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetAddress",
      "description": "Returns a pointer to a specified table",
      "parameters": {
        "input": [ 
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "word", "name": "tableID", "description": "ID of table whose pointer will be retrieved" } 
        ],
        "output": [ { "size": "long", "name": "tablePtr", "description": "POINTER to table in ROM" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Pointer GetAddress(tableID)" },
      "docs": [{ "ref": "tbv1", "page": "16-107" }]
    },
    {
      "toolcall": "0A",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GrafOn",
      "description": "Turns on Super Hi-Res graphics mode",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void GrafOn()" },
      "docs": [{ "ref": "tbv2", "page": "16-155" }]
    },
    {
      "toolcall": "0B",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GrafOff",
      "description": "Turns off Super Hi-Res graphics mode",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void GrafOff()" },
      "docs": [{ "ref": "tbv2", "page": "16-155" }]
    },
    {
      "toolcall": "0C",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetStandardSCB",
      "description": "Returns a copy of the standard scan line control byte (SCB)",
      "parameters": {
        "input": [ { "size": "word", "name": "wordspace", "description": "Space for result" } ],
        "output": [ { "size": "word", "name": "scb", "description": "Standard SCB (see Toolbox Ref Vol2 Figure 16-34)" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word GetStandardSCB()" },
      "docs": [{ "ref": "tbv2", "page": "16-34" }]
    },
    {
      "toolcall": "0D",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "InitColorTable",
      "description": "Returns a copy of the standard color table for the current mode",
      "parameters": {
        "input": [ { "size": "long", "name": "tablePtr", "description": "POINTER to space for standard color table (see Toolbox Ref Vol2 Figure 16-7)" } ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void InitColorTable(tablePtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-158" }]
    },
    {
      "toolcall": "0E",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetColorTable",
      "description": "Sets a specified color table to specified values",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "tableNumber", "description": "INTEGER; number of table whose color values will be set" },
          { "size": "long", "name": "srcTablePtr", "description": "POINTER to color table" } 
        ]
      },
      "errors": ["qd0450"],
      "c": { "call": "extern pascal void SetColorTable(tableNumber,srcTablePtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-221" }]
    },
    {
      "toolcall": "0F",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetColorTable",
      "description": "Fills a specified color table with the contents of another color table",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "tableNumber", "description": "INTEGER; color table to be copied" },
          { "size": "long", "name": "destTablePtr", "description": "POINTER to color table to receive new values" } 
        ]
      },
      "errors": ["qd0450"],
      "c": { "call": "extern pascal void GetColorTable(tableNumber,destTablePtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-116" }]
    },
    {
      "toolcall": "10",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetColorEntry",
      "description": "Sets the value of a color in a specified color table",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "tableNumber", "description": "INTEGER; number of color table" },
          { "size": "word", "name": "entryNumber", "description": "INTEGER; number of color to be changed" },
          { "size": "word", "name": "newColor", "description": "INTEGER; master color value for color" } 
        ]
      },
      "errors": ["qd0450","qd0451"],
      "c": { "call": "extern pascal void SetColorEntry(tableNumber,entryNumber,newColor)" },
      "docs": [{ "ref": "tbv2", "page": "16-220" }]
    },
    {
      "toolcall": "11",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetColorEntry",
      "description": "Returns the value of a specified color in a specified color table",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "tableNumber", "description": "INTEGER; number of color table" },
          { "size": "word", "name": "entryNumber", "description": "INTEGER; number of color to be examined" } 
        ]
      },
      "errors": ["qd0450","qd0451"],
      "c": { "call": "extern pascal Word GetColorEntry(tableNumber,entryNumber)" },
      "docs": [{ "ref": "tbv2", "page": "16-115" }]
    },
    {
      "toolcall": "12",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetSCB",
      "description": "Sets the SCB to a specified value",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "scanLine", "description": "INTEGER; scan line whose SCB is to be set" },
          { "size": "word", "name": "newSCB", "description": "INTEGER; new value for SCB" }
        ]
      },
      "errors": ["qd0452"],
      "c": { "call": "extern pascal void SetSCB(scanLine,newSCB)" },
      "docs": [{ "ref": "tbv2", "page": "16-250" }]
    },
    {
      "toolcall": "13",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetSCB",
      "description": "Returns the value of a specified SCB",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "scanLine", "description": "INTEGER; new value for SCB" }
        ],
        "output": [ 
          { "size": "word", "name": "scb", "description": "Value of SCB" }
        ]
      },
      "errors": ["qd0452"],
      "c": { "call": "extern pascal Word GetSCB(scanLine)" },
      "docs": [{ "ref": "tbv2", "page": "16-143" }]
    },
    {
      "toolcall": "14",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetAllSCBs",
      "description": "Sets all SCBs to a specified value",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "newSCB", "description": "new value for SCB" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetAllSCBs(newSCB)" },
      "docs": [{ "ref": "tbv2", "page": "16-211" }]
    },
    {
      "toolcall": "15",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "ClearScreen",
      "description": "Sets the words in screen memory to a specified value",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "colorWord", "description": "Color as offset into current color table" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void ClearScreen(colorWord)" },
      "docs": [{ "ref": "tbv2", "page": "16-71" }]
    },
    {
      "toolcall": "16",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetMasterSCB",
      "description": "Sets the master SCB to a specified value",
      "parameters": {
        "input": [ 
          { "size": "word", "name": "masterSCB", "description": "Value for master SCB (low-order byte only; high-order byte=0)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetMasterSCB(masterSCB)" },
      "docs": [{ "ref": "tbv2", "page": "16-231" }]
    },
    {
      "toolcall": "17",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetMasterSCB",
      "description": "Returns a copy of the master SCB",
      "parameters": {
        "input": [{ "size": "word", "name": "wordspace", "description": "Space for result" }],
        "output": [{ "size": "word", "name": "masterSCB", "description": "Master SCB value" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word GetMasterSCB()" },
      "docs": [{ "ref": "tbv2", "page": "16-127" }]
    },
    {
      "toolcall": "18",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "OpenPort",
      "description": "Initializes specified memory as a standard GrafPort, allocate a new visible region and clipping region, and set as current GrafPort.",
      "parameters": {
        "input": [{ "size": "long", "name": "portPtr", "description": "POINTER to space for GrafPort record" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void OpenPort(portPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-187" }]
    },
    {
      "toolcall": "19",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "InitPort",
      "description": "Initializes specified memory locations as a standard port",
      "parameters": {
        "input": [{ "size": "long", "name": "portPtr", "description": "POINTER to port" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void InitPort(portPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-161" }]
    },
    {
      "toolcall": "1A",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "ClosePort",
      "description": "Deallocates the clipping and visible regions in a port",
      "parameters": {
        "input": [{ "size": "long", "name": "portPtr", "description": "POINTER to port" }]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void ClosePort(portPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-73" }]
    },
    {
      "toolcall": "1B",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetPort",
      "description": "Makes a specified port the current GrafPort",
      "parameters": {
        "input": [{ "size": "long", "name": "portPtr", "description": "POINTER to port" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetPort(portPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-241" }]
    },
    {
      "toolcall": "1C",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetPort",
      "description": "Returns a pointer to the current GrafPort",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "resultPtr", "description": "POINTER to GrafPort" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal GrafPortPtr GetPort()" },
      "docs": [{ "ref": "tbv2", "page": "16-137" }]
    },
    {
      "toolcall": "1D",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetPortLoc",
      "description": "Sets the current port's locInfo record to specified location information",
      "parameters": {
        "input": [{ "size": "long", "name": "locInfoPtr", "description": "POINTER to location information" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetPortLoc(locInfoPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-242" }]
    },
    {
      "toolcall": "1E",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetPortLoc",
      "description": "Gets the current port's locInfo record and puts it at the specified location",
      "parameters": {
        "input": [{ "size": "long", "name": "locInfoPtr", "description": "POINTER to space for locInfo record" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void GetPortLoc(locInfoPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-242" }]
    },
    {
      "toolcall": "1F",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetPortRect",
      "description": "Sets the current GrafPort's port rectangle to the specified rectangle",
      "parameters": {
        "input": [{ "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining rectangle" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetPortRect(rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-243" }]
    },
    {
      "toolcall": "20",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetPortRect",
      "description": "Returns the current GrafPort's port rectangle",
      "parameters": {
        "input": [{ "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining rectangle" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void GetPortRect(rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-139" }]
    },
    {
      "toolcall": "21",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetPortSize",
      "description": "Changes the size of the current Grafport's port rectangle",
      "parameters": {
        "input": [
          { "size": "word", "name": "portWidth", "description": "INTEGER; width of active area in pixels" },
          { "size": "word", "name": "portHeight", "description": "INTEGER; height of active area in pixels" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetPortSize(portWidth,portHeight)" },
      "docs": [{ "ref": "tbv2", "page": "16-244" }]
    },
    {
      "toolcall": "22",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "MovePortTo",
      "description": "Changes the location of the current GrafPort's port rectangle",
      "parameters": {
        "input": [
          { "size": "word", "name": "h", "description": "INTEGER; horizontal coordinate of upper left corner" },
          { "size": "word", "name": "v", "description": "INTEGER; vertical coordinate of upper left corner" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void MovePortTo(h,v)" },
      "docs": [{ "ref": "tbv2", "page": "16-179" }]
    },
    {
      "toolcall": "23",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetOrigin",
      "description": "Adjust contents of port & bounds rectangles so up/left corner of port rect is set at specified point",
      "parameters": {
        "input": [
          { "size": "word", "name": "h", "description": "INTEGER; horizontal coordinate of upper left corner" },
          { "size": "word", "name": "v", "description": "INTEGER; vertical coordinate of upper left corner" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void SetOrigin(h,v)" },
      "docs": [{ "ref": "tbv2", "page": "16-232" }]
    },
    {
      "toolcall": "24",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetClip",
      "description": "Copies a specified region into the clipping region",
      "parameters": {
        "input": [{ "size": "long", "name": "rgnHandle", "description": "HANDLE to region" }]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void SetClip(rgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-218" }]
    },
    {
      "toolcall": "25",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetClip",
      "description": "Copies the clipping region to a specified region",
      "parameters": {
        "input": [{ "size": "long", "name": "rgnHandle", "description": "HANDLE to region" }]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void GetClip(rgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-113" }]
    },
    {
      "toolcall": "26",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "ClipRect",
      "description": "Changes clipping region of current GrafPort to a rectangle equal to a specified rectangle",
      "parameters": {
        "input": [{ "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining rectangle" }]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void ClipRect(rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-72" }]
    },
    {
      "toolcall": "27",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "HidePen",
      "description": "Decrements the pen level",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void HidePen()" },
      "docs": [{ "ref": "tbv2", "page": "16-156" }]
    },
    {
      "toolcall": "28",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "ShowPen",
      "description": "Increments the pen level",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void ShowPen()" },
      "docs": [{ "ref": "tbv2", "page": "16-265" }]
    },
    {
      "toolcall": "29",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetPen",
      "description": "Returns the pen location",
      "parameters": {
        "input": [{ "size": "long", "name": "pointPtr", "description": "POINTER to POINT" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void GetPen(pointPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-128" }]
    },
    {
      "toolcall": "2A",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetPenState",
      "description": "Sets the pen state in the GrafPort to specified values",
      "parameters": {
        "input": [{ "size": "long", "name": "penStatePtr", "description": "POINTER to pen state record (see Toolbox Ref Vol2 Figure 16-38)" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetPenState(penStatePtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-238" }]
    },
    {
      "toolcall": "2B",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetPenState",
      "description": "Returns the pen state from the GrafPort to a specified location",
      "parameters": {
        "input": [{ "size": "long", "name": "penStatePtr", "description": "POINTER to space for pen state record" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void GetPenState(penStatePtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-133" }]
    },
    {
      "toolcall": "2C",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetPenSize",
      "description": "Sets the current pen size to a specified pen size",
      "parameters": {
        "input": [
          { "size": "word", "name": "penWidth", "description": "INTEGER; width of pen in pixels" },
          { "size": "word", "name": "penHeight", "description": "INTEGER; height of pen in pixels" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetPenSize(penWidth,penHeight)" },
      "docs": [{ "ref": "tbv2", "page": "16-237" }]
    },
    {
      "toolcall": "2D",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetPenSize",
      "description": "Returns the current pen size to a specified location",
      "parameters": {
        "input": [{ "size": "long", "name": "penStatePtr", "description": "POINTER to space for POINT" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void GetPenSize(pointPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-132" }]
    },
    {
      "toolcall": "2E",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetPenMode",
      "description": "Sets the current pen mode to a specified pen mode",
      "parameters": {
        "input": [{ "size": "word", "name": "penMode", "description": "INTEGER; new pen mode (see Toolbox Ref Vol2 Figure 16-9)" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetPenMode(penMode)" },
      "docs": [{ "ref": "tbv2", "page": "16-234" }]
    },
    {
      "toolcall": "2F",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetPenMode",
      "description": "Returns the pen mode from the current GrafPort",
      "parameters": {
        "input": [{ "size": "word", "name": "wordspace", "description": "Space for result" }],
        "output": [{ "size": "word", "name": "penMode", "description": "INTEGER; pen mode value (see Toolbox Ref Vol2 Figure 16-9)" }]

      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word GetPenMode()" },
      "docs": [{ "ref": "tbv2", "page": "16-130" }]
    },
    {
      "toolcall": "30",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetPenPat",
      "description": "Sets the current pen pattern to a specified pen pattern",
      "parameters": {
        "input": [{ "size": "long", "name": "patternPtr", "description": "POINTER to pattern" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetPenPat(patternPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-236" }]
    },
    {
      "toolcall": "31",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetPenPat",
      "description": "Copies the current pen pattern from the current GrafPort to a specified location",
      "parameters": {
        "input": [{ "size": "long", "name": "patternPtr", "description": "POINTER to space for pattern" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void GetPenPat(patternPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-131" }]
    },
    {
      "toolcall": "32",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetPenMask",
      "description": "Sets the pen mask to a specified mask",
      "parameters": {
        "input": [{ "size": "long", "name": "maskPtr", "description": "POINTER to pen mask" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetPenMask(maskPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-233" }]
    },
    {
      "toolcall": "33",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetPenMask",
      "description": "Returns the pen mask to a specified location",
      "parameters": {
        "input": [{ "size": "long", "name": "maskPtr", "description": "POINTER to space for mask" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void GetPenMask(maskPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-129" }]
    },
    {
      "toolcall": "34",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetBackPat",
      "description": "Sets the background pattern to a specified pattern",
      "parameters": {
        "input": [{ "size": "long", "name": "patternPtr", "description": "POINTER to pattern" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetBackPat(patternPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-214" }]
    },
    {
      "toolcall": "35",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetBackPat",
      "description": "Copies current background pen pattern from current GrafPort to a specified location",
      "parameters": {
        "input": [{ "size": "long", "name": "patternPtr", "description": "POINTER to location for pattern" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void GetBackPat(patternPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-111" }]
    },
    {
      "toolcall": "36",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "PenNormal",
      "description": "Sets the pen state to the standard state; pen location and visibility are not changed",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void PenNormal()" },
      "docs": [{ "ref": "tbv2", "page": "16-196" }]
    },
    {
      "toolcall": "37",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetSolidPenPat",
      "description": "Sets the pen pattern to a solid pattern using the specified color",
      "parameters": {
        "input": [{ "size": "word", "name": "colorNum", "description": "INTEGER; new color value" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetSolidPenPat(colorNum)" },
      "docs": [{ "ref": "tbv2", "page": "16-252" }]
    },
    {
      "toolcall": "38",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetSolidBackPat",
      "description": "Sets the background pattern to a solid pattern using a specified color",
      "parameters": {
        "input": [{ "size": "word", "name": "colorNum", "description": "INTEGER; new color value" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetSolidBackPat(colorNum)" },
      "docs": [{ "ref": "tbv2", "page": "16-251" }]
    },
    {
      "toolcall": "39",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SolidPattern",
      "description": "Sets a specified pattern to a solid pattern using a specified color",
      "parameters": {
        "input": [
          { "size": "word", "name": "colorNum", "description": "INTEGER; new color value" },
          { "size": "long", "name": "patternPtr", "description": "POINTER to pattern" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SolidPattern(colorNum,patternPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-265" }]
    },
    {
      "toolcall": "3A",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "MoveTo",
      "description": "Moves the current pen location to a specified point",
      "parameters": {
        "input": [
          { "size": "word", "name": "h", "description": "INTEGER; horizontal point in local coordinates" },
          { "size": "word", "name": "v", "description": "INTEGER; vertical point in local coordinates" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void MoveTo(h,v)" },
      "docs": [{ "ref": "tbv2", "page": "16-180" }]
    },
    {
      "toolcall": "3B",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "Move",
      "description": "Moves the current pen location by specified horizontal & vertical displacements",
      "parameters": {
        "input": [
          { "size": "word", "name": "dH", "description": "INTEGER; horizontal displacement" },
          { "size": "word", "name": "dV", "description": "INTEGER; vertical displacement" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void Move(dH,dV)" },
      "docs": [{ "ref": "tbv2", "page": "16-178" }]
    },
    {
      "toolcall": "3C",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "LineTo",
      "description": "Draws a line from the current pen location to a specified point",
      "parameters": {
        "input": [
          { "size": "word", "name": "h", "description": "INTEGER; horizontal point to which line will be drawn" },
          { "size": "word", "name": "v", "description": "INTEGER; vertical point to which line will be drawn" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void LineTo(h,v)" },
      "docs": [{ "ref": "tbv2", "page": "16-172" }]
    },
    {
      "toolcall": "3D",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "Line",
      "description": "Draws a line from current pen location to a new point specified by the horizontal and vertical displacements",
      "parameters": {
        "input": [
          { "size": "word", "name": "dH", "description": "INTEGER; horizontal displacement in points" },
          { "size": "word", "name": "dV", "description": "INTEGER; vertical displacement in points" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void Line(dH,dV)" },
      "docs": [{ "ref": "tbv2", "page": "16-171" }]
    },
    {
      "toolcall": "3E",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetPicSave",
      "description": "Sets the picSave field in the GrafPort to a specified value",
      "parameters": {
        "input": [{ "size": "long", "name": "picSaveValue", "description": "New value for picSave field" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetPicSave(picSaveValue)" },
      "docs": [{ "ref": "tbv2", "page": "16-239" }]
    },
    {
      "toolcall": "3F",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetPicSave",
      "description": "Returns the value of the picSave field of the GrafPort",
      "parameters": {
        "input": [{ "size": "long", "name": "longspace", "description": "Space for result" }],
        "output": [{ "size": "long", "name": "picSaveValue", "description": "Current picSave value" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Longint GetPicSave()" },
      "docs": [{ "ref": "tbv2", "page": "16-134" }]
    },
    {
      "toolcall": "40",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetRgnSave",
      "description": "Sets the rgnSave field in the GrafPort ot a specified value",
      "parameters": {
        "input": [{ "size": "long", "name": "rgnSaveValue", "description": "HANDLE; new value of rgnSave field" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetRgnSave(rgnSaveValue)" },
      "docs": [{ "ref": "tbv2", "page": "16-249" }]
    },
    {
      "toolcall": "41",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetRgnSave",
      "description": "Returns the value of the rgnSave field of the GrafPort",
      "parameters": {
        "input": [{ "size": "long", "name": "longspace", "description": "Space for result" }],
        "output": [{ "size": "long", "name": "rgnSaveValue", "description": "Current rgnSave value" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal LongWord GetRgnSave()" },
      "docs": [{ "ref": "tbv2", "page": "16-140" }]
    },
    {
      "toolcall": "42",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetPolySave",
      "description": "Sets the polySave field in the GrafPort to a specified value - not called by an application",
      "parameters": {
        "input": [{ "size": "long", "name": "polySaveValue", "description": "New value for polySave field" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetPolySave(polySaveValue)" },
      "docs": [{ "ref": "tbv2", "page": "16-240" }]
    },
    {
      "toolcall": "43",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetPolySave",
      "description": "Returns the value of the polySave field of the GrafPort",
      "parameters": {
        "input": [{ "size": "long", "name": "longspace", "description": "Space for result" }],
        "output": [{ "size": "long", "name": "polySaveValue", "description": "Current polySave value" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal LongWord GetPolySave()" },
      "docs": [{ "ref": "tbv2", "page": "16-136" }]
    },
    {
      "toolcall": "44",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetGrafProcs",
      "description": "Sets the grafProcs field of the current GrafPort to a specified value",
      "parameters": {
        "input": [{ "size": "long", "name": "grafProcsPtr", "description": "POINTER to grafProcs record" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetGrafProcs(grafProcsPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-229" }]
    },
    {
      "toolcall": "45",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetGrafProcs",
      "description": "Returns the pointer to the grafProcs record associated witht the GrafPort",
      "parameters": {
        "input": [{ "size": "long", "name": "longspace", "description": "Space for result" }],
        "output": [{ "size": "long", "name": "grafProcsPtr", "description": "POINTER to grafProcs record" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal QDProcsPtr GetGraphProcs()" },
      "docs": [{ "ref": "tbv2", "page": "16-126" }]
    },
    {
      "toolcall": "46",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetUserField",
      "description": "Sets the userField in the GrafPort to a specified value",
      "parameters": {
        "input": [{ "size": "long", "name": "userFieldValue", "description": "New value for userField field" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetUserField(userFieldValue)" },
      "docs": [{ "ref": "tbv2", "page": "16-262" }]
    },
    {
      "toolcall": "47",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetUserField",
      "description": "Returns the value of the userField field of the GrafPort",
      "parameters": {
        "input": [{ "size": "long", "name": "longspace", "description": "Space for result" }],
        "output": [{ "size": "long", "name": "userField", "description": "Current userField value" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Longint GetUserField()" },
      "docs": [{ "ref": "tbv2", "page": "16-151" }]
    },
    {
      "toolcall": "48",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetSysField",
      "description": "Sets the sysField field in GrafPort to a spec value - not called by an application",
      "parameters": {
        "input": [{ "size": "long", "name": "sysFieldValue", "description": "New value for sysField field" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetSysField(sysFieldValue)" },
      "docs": [{ "ref": "tbv2", "page": "16-255" }]
    },
    {
      "toolcall": "49",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetSysField",
      "description": "Returns the value of the sysField field of the GrafPort",
      "parameters": {
        "input": [{ "size": "long", "name": "longspace", "description": "Space for result" }],
        "output": [{ "size": "long", "name": "sysField", "description": "Current sysField value" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Longint GetSysField()" },
      "docs": [{ "ref": "tbv2", "page": "16-146" }]
    },
    {
      "toolcall": "4A",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetRect",
      "description": "Sets a specified rectangle to specified values",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to space for RECT defining rectangle to be set" },
          { "size": "word", "name": "left", "description": "INTEGER; left X coordinate for rectangle" },
          { "size": "word", "name": "top", "description": "INTEGER; top Y coordinate for rectangle" },
          { "size": "word", "name": "right", "description": "INTEGER; right X coordinate for rectangle" },
          { "size": "word", "name": "bottom", "description": "INTEGER; bottom Y coordinate for rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetRect(rectPtr,left,top,right,bottom)" },
      "docs": [{ "ref": "tbv2", "page": "16-247" }]
    },
    {
      "toolcall": "4B",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "OffsetRect",
      "description": "Offsets a specified rectangle by specified displacements",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to rectangle" },
          { "size": "word", "name": "dH", "description": "INTEGER; horizontal displacement in pixels" },
          { "size": "word", "name": "dV", "description": "INTEGER; vertical displacement in pixels" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void OffsetRect(rectPtr,dH,dV)" },
      "docs": [{ "ref": "tbv2", "page": "16-184" }]
    },
    {
      "toolcall": "4C",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "InsetRect",
      "description": "Insets a specified rectangle by specified displacements",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to rectangle" },
          { "size": "word", "name": "dH", "description": "INTEGER; horizontal displacement" },
          { "size": "word", "name": "dV", "description": "INTEGER; vertical displacement" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void InsetRect(rectPtr,dH,dV)" },
      "docs": [{ "ref": "tbv2", "page": "16-162" }]
    },
    {
      "toolcall": "4D",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SectRect",
      "description": "Calculates intersection of two rectangles & places intersection in destination rectangle",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "rect1Ptr", "description": "POINTER to RECT defining first source rectangle" },
          { "size": "long", "name": "rect2Ptr", "description": "POINTER to RECT defining second source rectangle" },
          { "size": "long", "name": "intersectRectPtr", "description": "POINTER to RECT defining destination rectangle" }
        ],
        "output": [
          { "size": "word", "name": "notEmptyFlag", "description": "BOOLEAN; TRUE if rectangle not empty, FALSE if empty" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean SectRect(rect1Ptr,rect2Ptr,intersectRectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-209" }]
    },
    {
      "toolcall": "4E",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "UnionRect",
      "description": "Calculates smallest rectangle that contains both src rect & places results in dest rect",
      "parameters": {
        "input": [
          { "size": "long", "name": "rect1Ptr", "description": "POINTER to first source rectangle" },
          { "size": "long", "name": "rect2Ptr", "description": "POINTER to second source rectangle" },
          { "size": "long", "name": "unionRectPtr", "description": "POINTER to destination rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void UnionRect(rect1Ptr,rect2Ptr,unionRectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-271" }]
    },
    {
      "toolcall": "4F",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "PtInRect",
      "description": "Detects whether the pixel below and to the right of specified point is in a specified rectangle",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "pointPtr", "description": "POINTER to POINT" },
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining rectangle" }
        ],
        "output": [
          { "size": "word", "name": "pointFlag", "description": "BOOLEAN; TRUE if pixel in rectangle, FALSE if not" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean PtInRect(pointPtr,rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-200" }]
    },
    {
      "toolcall": "50",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "Pt2Rect",
      "description": "Copies spec pt to uppr left corner of spec rect & another pt to lower right corner of rect",
      "parameters": {
        "input": [
          { "size": "long", "name": "point1Ptr", "description": "POINTER to first source POINT" },
          { "size": "long", "name": "point2Ptr", "description": "POINTER to second source POINT" },
          { "size": "long", "name": "rectPtr", "description": "POINTER to destination rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void Pt2Rect(point1Ptr,point2Ptr,rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-199" }]
    },
    {
      "toolcall": "51",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "EqualRect",
      "description": "Indicates whether two rectangles are equal",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "rect1Ptr", "description": "POINTER to RECT defining one rectangle" },
          { "size": "long", "name": "rect2Ptr", "description": "POINTER to RECT defining other rectangle" }
        ],
        "output": [
          { "size": "word", "name": "equalFlag", "description": "BOOLEAN; TRUE if rectangles are equal, FALSE if not" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean EqualRect(rect1Ptr,rect2Ptr)" },
      "docs": [{ "ref": "tbv2", "page": "16-86" }]
    },
    {
      "toolcall": "52",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "NotEmptyRect",
      "description": "Indicates whether a specified rectangle is empty",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining rectangle" }
        ],
        "output": [
          { "size": "word", "name": "notEmptyFlag", "description": "BOOLEAN; TRUE if rectangle not empty, FALSE if empty" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean NotEmptyRect(rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-182" }]
    },
    {
      "toolcall": "53",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "FrameRect",
      "description": "Draws the frame of a specified rectangle using the current pen mode, pattern, & size",
      "parameters": {
        "input": [{ "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining rectangle" }]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void FrameRect(rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-104" }]
    },
    {
      "toolcall": "54",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "PaintRect",
      "description": "Paints the interior of spec rectangle using the current pen mode & pattern",
      "parameters": {
        "input": [{ "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void PaintRect(rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-193" }]
    },
    {
      "toolcall": "55",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "EraseRect",
      "description": "Erases the interior of a specified rectangle by filling it in with the background pattern",
      "parameters": {
        "input": [{ "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining rectangle" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void EraseRect(rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-91" }]
    },
    {
      "toolcall": "56",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "InvertRect",
      "description": "Inverts the pixels in the interior of a specified rectangle",
      "parameters": {
        "input": [{ "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining rectangle" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void InvertRect(rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-167" }]
    },
    {
      "toolcall": "57",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "FillRect",
      "description": "Fills the interior of a specified rectangle with a specified pen pattern",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to rectangle" },
          { "size": "long", "name": "patternPtr", "description": "POINTER to pattern" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void FillRect(rectPtr,patternPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-97" }]
    },
    {
      "toolcall": "58",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "FrameOval",
      "description": "Draws the frame of a specified oval using the current pen mode, pattern, & size",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void FrameOval(rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-102" }]
    },
    {
      "toolcall": "59",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "PaintOval",
      "description": "Paints the interior of a specified oval using the current pen mode & pattern",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void PaintOval(rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-189" }]
    },
    {
      "toolcall": "5A",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "EraseOval",
      "description": "Erases the interior of a specified oval by filling it in with the backround pattern",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void EraseOval(rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-89" }]
    },
    {
      "toolcall": "5B",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "InvertOval",
      "description": "Inverts the pixels in the interior of a specified oval",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void InvertOval(rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-165" }]
    },
    {
      "toolcall": "5C",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "FillOval",
      "description": "Fills the interior of a specified oval with a specified pen pattern",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" },
          { "size": "long", "name": "patternPtr", "description": "POINTER to pattern" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void FillOval(rectPtr,patternPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-95" }]
    },
    {
      "toolcall": "5D",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "FrameRRect",
      "description": "Draws the frame of a spec round rectangle using the current pen mode, pattern & size",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" },
          { "size": "word", "name": "ovalWidth", "description": "INTEGER; width, in pixels, of oval defining rounded corners" },
          { "size": "word", "name": "ovalHeight", "description": "INTEGER; height, in pixels, of oval defining rounded corners" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void FrameRRect(rectPtr,ovalWidth,ovalHeight)" },
      "docs": [{ "ref": "tbv2", "page": "16-106" }]
    },
    {
      "toolcall": "5E",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "PaintRRect",
      "description": "Paints interior of spec round rectangle using the current pen mode & pattern",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" },
          { "size": "word", "name": "ovalWidth", "description": "INTEGER; width, in pixels, of oval defining rounded corners" },
          { "size": "word", "name": "ovalHeight", "description": "INTEGER; height, in pixels, of oval defining rounded corners" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void PaintRRect(rectPtr,ovalWidth,ovalHeight)" },
      "docs": [{ "ref": "tbv2", "page": "16-195" }]
    },
    {
      "toolcall": "5F",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "EraseRRect",
      "description": "Erases interior of a spec round rectangle by filling it in with the backround pattern",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" },
          { "size": "word", "name": "ovalWidth", "description": "INTEGER; width, in pixels, of oval defining rounded corners" },
          { "size": "word", "name": "ovalHeight", "description": "INTEGER; height, in pixels, of oval defining rounded corners" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void EraseRRect(rectPtr,ovalWidth,ovalHeight)" },
      "docs": [{ "ref": "tbv2", "page": "16-93" }]
    },
    {
      "toolcall": "60",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "InvertRRect",
      "description": "Inverts the pixels in the interior of a specified round rectangle",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" },
          { "size": "word", "name": "ovalWidth", "description": "INTEGER; width, in pixels, of oval defining rounded corners" },
          { "size": "word", "name": "ovalHeight", "description": "INTEGER; height, in pixels, of oval defining rounded corners" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void InvertRRect(rectPtr,ovalWidth,ovalHeight)" },
      "docs": [{ "ref": "tbv2", "page": "16-169" }]
    },
    {
      "toolcall": "61",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "FillRRect",
      "description": "Fills the interior of a specified round rectangle with a specified pen pattern",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" },
          { "size": "word", "name": "ovalWidth", "description": "INTEGER; width, in pixels, of oval defining rounded corners" },
          { "size": "word", "name": "ovalHeight", "description": "INTEGER; height, in pixels, of oval defining rounded corners" },
          { "size": "long", "name": "patternPtr", "description": "POINTER to pattern" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void FillRRect(rectPtr,ovalWidth,ovalHeight,patternPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-99" }]
    },
    {
      "toolcall": "62",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "FrameArc",
      "description": "Draws the frame of a specified arc using the current pen mode, pattern, & size",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" },
          { "size": "word", "name": "startAngle", "description": "INTEGER; starting angle in degrees" },
          { "size": "word", "name": "arcAngle", "description": "INTEGER; arc angle in degrees" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void FrameArc(rectPtr,startAngle,arcAngle)" },
      "docs": [{ "ref": "tbv2", "page": "16-101" }]
    },
    {
      "toolcall": "63",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "PaintArc",
      "description": "Paints the interior of spec arc using the current pen mode & pattern",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" },
          { "size": "word", "name": "startAngle", "description": "INTEGER; starting angle in degrees" },
          { "size": "word", "name": "arcAngle", "description": "INTEGER; arc angle in degrees" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void PaintArc(rectPtr,startAngle,arcAngle)" },
      "docs": [{ "ref": "tbv2", "page": "16-188" }]
    },
    {
      "toolcall": "64",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "EraseArc",
      "description": "Erases the interior of a specified arc by filling it in with the backround pattern",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" },
          { "size": "word", "name": "startAngle", "description": "INTEGER; starting angle in degrees" },
          { "size": "word", "name": "arcAngle", "description": "INTEGER; arc angle in degrees" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void EraseArc(rectPtr,startAngle,arcAngle)" },
      "docs": [{ "ref": "tbv2", "page": "16-88" }]
    },
    {
      "toolcall": "65",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "InvertArc",
      "description": "Inverts the pixels in the interior of a specified arc",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" },
          { "size": "word", "name": "startAngle", "description": "INTEGER; starting angle in degrees" },
          { "size": "word", "name": "arcAngle", "description": "INTEGER; arc angle in degrees" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void InvertArc(rectPtr,startAngle,arcAngle)" },
      "docs": [{ "ref": "tbv2", "page": "16-164" }]
    },
    {
      "toolcall": "66",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "FillArc",
      "description": "Fills the interior of a specified arc with a specified pen pattern",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining enclosing rectangle" },
          { "size": "word", "name": "startAngle", "description": "INTEGER; starting angle in degrees" },
          { "size": "word", "name": "arcAngle", "description": "INTEGER; arc angle in degrees" },
          { "size": "long", "name": "patternPtr", "description": "POINTER to pattern" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void FillArc(rectPtr,startAngle,arcAngle,patternPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-94" }]
    },
    {
      "toolcall": "67",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "NewRgn",
      "description": "Allocates space for a new region & initializes it to empty - only way to create new region",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to new region" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal RgnHandle NewRgn()" },
      "docs": [{ "ref": "tbv2", "page": "16-181" }]
    },
    {
      "toolcall": "68",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "DisposeRgn",
      "description": "Deallocates the memory for a specified region",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE of region being disposed" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void DisposeRgn(rgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-79" }]
    },
    {
      "toolcall": "69",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "CopyRgn",
      "description": "Copies the region definition from one region to another",
      "parameters": {
        "input": [
          { "size": "long", "name": "srcRgnHandle", "description": "HANDLE to source region" },
          { "size": "long", "name": "destRgnHandle", "description": "HANDLE to destination region" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void CopyRgn(srcRgnHandle,destRgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-75" }]
    },
    {
      "toolcall": "6A",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetEmptyRgn",
      "description": "Destroys previous region information by setting a spec region to an empty region",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region being modified" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void SetEmptyRgn(rgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-223" }]
    },
    {
      "toolcall": "6B",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetRectRgn",
      "description": "Destroys previous region information by setting a spec region to a spec rectangle",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region being set" }, 
          { "size": "word", "name": "left", "description": "INTEGER; left X coordinate for rectangle" },
          { "size": "word", "name": "top", "description": "INTEGER; top Y coordinate for rectangle" },
          { "size": "word", "name": "right", "description": "INTEGER; right X coordinate for rectangle" },
          { "size": "word", "name": "bottom", "description": "INTEGER; bottom Y coordinate for rectangle" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void SetRectRgn(rgnHandle,left,top,right,bottom)" },
      "docs": [{ "ref": "tbv2", "page": "16-248" }]
    },
    {
      "toolcall": "6C",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "RectRgn",
      "description": "Destroys previous region information by setting a spec region to a spec rectangle",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region being set" },
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining rectangle used as source" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void RectRgn(rgnHandle,rectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-204" }]
    },
    {
      "toolcall": "6D",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "OpenRgn",
      "description": "Allocates temp space & starts saving lines & framed shapes for later processing as a region definition.",
      "parameters": { "none": true },
      "errors": ["qd0430", "mmUnch"],
      "c": { "call": "extern pascal void openRgn()" },
      "docs": [{ "ref": "tbv2", "page": "16-187" }]
    },
    {
      "toolcall": "6E",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "CloseRgn",
      "description": "Completes the region definition process started by an OpenRgn call",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region being set to a collection of points" }        ]
      },
      "errors": ["qd0431","mmUnch"],
      "c": { "call": "extern pascal void CloseRgn(rgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-74" }]
    },
    {
      "toolcall": "6F",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "OffsetRgn",
      "description": "Moves a region on the coordinate plane a specified distance",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region being offset" },
          { "size": "word", "name": "dH", "description": "INTEGER; horizontal displacement in pixels" },
          { "size": "word", "name": "dV", "description": "INTEGER; vertical displacement in pixels" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void OffsetRgn(rgnHandle,dH,dV)" },
      "docs": [{ "ref": "tbv2", "page": "16-185" }]
    },
    {
      "toolcall": "70",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "InsetRgn",
      "description": "Shrinks or expands a specified region",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region being inset" },
          { "size": "word", "name": "dH", "description": "INTEGER; horizontal displacement in pixels" },
          { "size": "word", "name": "dV", "description": "INTEGER; vertical displacement in pixels" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void InsetRgn(rgnHandle,dH,dV)" },
      "docs": [{ "ref": "tbv2", "page": "16-163" }]
    },
    {
      "toolcall": "71",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SectRgn",
      "description": "Calculates intersection of two regions & places intersection in a destination region",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgn1Handle", "description": "HANDLE to one source region" },
          { "size": "long", "name": "rgn2Handle", "description": "HANDLE to another source region" },
          { "size": "long", "name": "destRgnHandle", "description": "HANDLE to destination region" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void SectRgn(rgn1Handle,rgn2Handle,destRgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-210" }]
    },
    {
      "toolcall": "72",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "UnionRgn",
      "description": "Calculates smallest region that contains every point that's in either source region and places result in destination region",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgn1Handle", "description": "HANDLE to one source region" },
          { "size": "long", "name": "rgn2Handle", "description": "HANDLE to another source region" },
          { "size": "long", "name": "unionRgnHandle", "description": "HANDLE to destination region" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void UnionRgn(rgn1Handle,rgn2Handle,unionRgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-272" }]
    },
    {
      "toolcall": "73",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "DiffRgn",
      "description": "Calculates the difference of two regions and places difference in a destination region",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgn1Handle", "description": "HANDLE to one source region" },
          { "size": "long", "name": "rgn2Handle", "description": "HANDLE to another source region" },
          { "size": "long", "name": "diffRgnHandle", "description": "HANDLE to destination region" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void DiffRgn(rgn1Handle,rgn2Handle,diffRgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-78" }]
    },
    {
      "toolcall": "74",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "XorRgn",
      "description": "Calculates the difference between the union and the intersection of two regions and places result in a destination region",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgn1Handle", "description": "HANDLE to one source region" },
          { "size": "long", "name": "rgn2Handle", "description": "HANDLE to another source region" },
          { "size": "long", "name": "xorRgnHandle", "description": "HANDLE to destination region" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void XorRgn(rgn1Handle,rgn2Handle,xorRgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-273" }]
    },
    {
      "toolcall": "75",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "PtInRgn",
      "description": "Checks to see whether the pixel below & to right of a specified point1 is within a specified region",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "pointPtr", "description": "POINTER to POINT" },
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region" }
        ],
        "output": [
          { "size": "word", "name": "pixelFlag", "description": "BOOLEAN; TRUE if pixel in region, FALSE if not" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal Boolean PtInRgn(pointPtr,rgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-201" }]
    },
    {
      "toolcall": "76",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "RectInRgn",
      "description": "Checks whether a specified rectangle intersects a specified region",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining rectangle" },
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region" }
        ],
        "output": [
          { "size": "word", "name": "encloseFlag", "description": "BOOLEAN; TRUE if intersection encloses at least a pixel, FALSE if not" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal Boolean RectInRgn(rectPtr,rgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-203" }]
    },
    {
      "toolcall": "77",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "EqualRgn",
      "description": "Indicates whether two regions are equal",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "rgn1Handle", "description": "HANDLE to one region" },
          { "size": "long", "name": "rgn2Handle", "description": "HANDLE to other region" }
        ],
        "output": [
          { "size": "word", "name": "equalFlag", "description": "BOOLEAN; TRUE if regions are equal, FALSE if not" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal Boolean EqualRgn(rgn1Handle,rgn2Handle)" },
      "docs": [{ "ref": "tbv2", "page": "16-87" }]
    },
    {
      "toolcall": "78",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "EmptyRgn",
      "description": "Indicates whether a specified region is empty",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region" }
        ],
        "output": [
          { "size": "word", "name": "emptyFlag", "description": "BOOLEAN; TRUE if regions is empty, FALSE if not" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean EmptyRgn(rgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-84" }]
    },
    {
      "toolcall": "79",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "FrameRgn",
      "description": "Draws the frame of a specified region using current pen mode, pattern & size",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void FrameRgn(rgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-105" }]
    },
    {
      "toolcall": "7A",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "PaintRgn",
      "description": "Paints the interior of a specified region using the current pen mode & pattern",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void PaintRgn(rgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-194" }]
    },
    {
      "toolcall": "7B",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "EraseRgn",
      "description": "Erases the interior of a specified region by filling it with the background pattern",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void EraseRgn(rgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-92" }]
    },
    {
      "toolcall": "7C",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "InvertRgn",
      "description": "Inverts the pixels in the interior of a specified region",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void InvertRgn(rgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-168" }]
    },
    {
      "toolcall": "7D",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "FillRgn",
      "description": "Fills the interior of a specified region with a specified pen pattern",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region" },
          { "size": "long", "name": "patternPtr", "description": "POINTER to pattern" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void FillRgn(rgnHandle,patternPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-98" }]
    },
    {
      "toolcall": "7E",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "ScrollRect",
      "description": "Shifts pixels inside intersect of specified rect, visble region, clip region, port rect, and bounds rect",
      "parameters": {
        "input": [
          { "size": "long", "name": "rectPtr", "description": "POINTER to RECT defining rectangle" },
          { "size": "word", "name": "dH", "description": "INTEGER; horizontal distance to scroll in pixels" },
          { "size": "word", "name": "dV", "description": "INTEGER; vertical distance to scroll in pixels" },
          { "size": "long", "name": "updateRgnHandle", "description": "HANDLE to region" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void ScrollRect(rectPtr,dH,dV,updateRgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-208" }]
    },
    {
      "toolcall": "7F",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "PaintPixels",
      "description": "Transfers a region of pixels",
      "parameters": {
        "input": [{ "size": "long", "name": "paintParamPtr", "description": "POINTER to parameter block (see Toolbox Ref Vol2, Table 16-35)" }]
      },
      "errors": ["qd0420"],
      "c": { "call": "extern pascal void PaintPixels(paintParamPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-190" }]
    },
    {
      "toolcall": "80",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "AddPt",
      "description": "Adds two specified points together and leaves result in destination point",
      "parameters": {
        "input": [
          { "size": "long", "name": "srcPtPtr", "description": "POINTER to POINT" },
          { "size": "long", "name": "destPtPtr", "description": "POINTER to POINT used as source and destination" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void AddPt(srcPtPtr,destPtPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-68" }]
    },
    {
      "toolcall": "81",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SubPt",
      "description": "Subtracts source point from destination point and leaves result in the destination point",
      "parameters": {
        "input": [
          { "size": "long", "name": "srcPtPtr", "description": "POINTER to POINT" },
          { "size": "long", "name": "destPtPtr", "description": "POINTER to POINT used as source and destination" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SubPt(srcPtPtr,destPtPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-268" }]
    },
    {
      "toolcall": "82",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetPt",
      "description": "Sets a point to specified horizontal and vertical values",
      "parameters": {
        "input": [
          { "size": "long", "name": "srcPtPtr", "description": "POINTER to POINT" },
          { "size": "word", "name": "h", "description": "INTEGER; horizontal value of point" },
          { "size": "word", "name": "v", "description": "INTEGER; vertical value of point" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetPt(srcPtPtr,h,v)" },
      "docs": [{ "ref": "tbv2", "page": "16-245" }]
    },
    {
      "toolcall": "83",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "EqualPt",
      "description": "Indicates whether two points are equal",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "point1Ptr", "description": "POINTER to first POINT" },
          { "size": "long", "name": "point2Ptr", "description": "POINTER to second POINT" }
        ],
        "output": [
          { "size": "word", "name": "equalFlag", "description": "BOOLEAN; TRUE if points are equal, FALSE if not" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean EqualPt(point1Ptr,point2Ptr)" },
      "docs": [{ "ref": "tbv2", "page": "16-85" }]
    },
    {
      "toolcall": "84",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "LocalToGlobal",
      "description": "Converts a point from local coordinates to global coordinates",
      "parameters": {
        "input": [{ "size": "long", "name": "point1Ptr", "description": "POINTER to POINT to be converted" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void LocalToGlobal(pointPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-173" }]
    },
    {
      "toolcall": "85",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GlobalToLocal",
      "description": "Converts a point from global coordinates to local coordinates",
      "parameters": {
        "input": [{ "size": "long", "name": "pointPtr", "description": "POINTER to POINT to be converted" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void GlobalToLocal(pointPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-173" }]
    },
    {
      "toolcall": "86",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "Random",
      "description": "Returns a pseudorandom number in the range -32768 to 32767",
      "parameters": {
        "input": [{ "size": "word", "name": "wordspace", "description": "Space for result" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Integer Random()" },
      "docs": [{ "ref": "tbv2", "page": "16-202" }]
    },
    {
      "toolcall": "87",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetRandSeed",
      "description": "Sets the seed value for the random number generator",
      "parameters": {
        "input": [{ "size": "long", "name": "randomSeed", "description": "LONGINT; seed value" }]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetRandSeed(randomSeed)" },
      "docs": [{ "ref": "tbv2", "page": "16-246" }]
    },
    {
      "toolcall": "88",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetPixel",
      "description": "Returns the pixel below and to the right of a specified point",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "h", "description": "Horizontal value of point, in global coordinates" },
          { "size": "word", "name": "v", "description": "Vertical value of point, in global coordinates" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word GetPixel(h,v)" },
      "docs": [{ "ref": "tbv2", "page": "16-135" }]
    },
    {
      "toolcall": "89",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "ScalePt",
      "description": "Scales a specified point from a source rectangle to a destination rectangle",
      "parameters": {
        "input": [
          { "size": "long", "name": "pointPtr", "description": "POINTER to POINT to be scaled" },
          { "size": "long", "name": "srcRectPtr", "description": "POINTER to RECT defining source rectangle" },
          { "size": "long", "name": "destRectPtr", "description": "POINTER to RECT defining destination rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void ScalePt(pointPtr,srcRectPtr,destRectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-207" }]
    },
    {
      "toolcall": "8A",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "MapPt",
      "description": "Maps a specified point from a source rectangle to a destination rectangle",
      "parameters": {
        "input": [
          { "size": "long", "name": "pointPtr", "description": "POINTER to POINT" },
          { "size": "long", "name": "srcRectPtr", "description": "POINTER to RECT defining source rectangle" },
          { "size": "long", "name": "destRectPtr", "description": "POINTER to RECT defining destination rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void MapPt(pointPtr,srcRectPtr,destRectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-175" }]
    },
    {
      "toolcall": "8B",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "MapRect",
      "description": "Maps a specified rectangle from a source rectangle to a destination rectangle",
      "parameters": {
        "input": [
          { "size": "long", "name": "pointPtr", "description": "POINTER to RECT defining rectangle to be mapped" },
          { "size": "long", "name": "srcRectPtr", "description": "POINTER to RECT defining source rectangle" },
          { "size": "long", "name": "destRectPtr", "description": "POINTER to RECT defining destination rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void MapRect(rectPtr,srcRectPtr,destRectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-176" }]
    },
    {
      "toolcall": "8C",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "MapRgn",
      "description": "Maps a specified region from a source rectangle to a destination rectangle",
      "parameters": {
        "input": [
          { "size": "long", "name": "mapRgnHandle", "description": "HANDLE to region to be mapped" },
          { "size": "long", "name": "srcRectPtr", "description": "POINTER to RECT defining source rectangle" },
          { "size": "long", "name": "destRectPtr", "description": "POINTER to RECT defining destination rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void MapRgn(mapRgnHandle,srcRectPtr,destRectPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-177" }]
    },
    {
      "toolcall": "8D",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetStdProcs",
      "description": "Sets up a specified record of pointers for customizing QuickDraw II operations",
      "parameters": {
        "input": [
          { "size": "long", "name": "stdProcRecPtr", "description": "POINTER to stdProcs record" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetStdProcs(stdProcRecPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-254" }]
    },
    {
      "toolcall": "8E",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetCursor",
      "description": "Sets the cursor to an image passed in a specified cursor record",
      "parameters": {
        "input": [
          { "size": "long", "name": "cursorPtr", "description": "POINTER to cursor record" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void SetCursor(cursorPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-222" }]
    },
    {
      "toolcall": "8F",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetCursorAdr",
      "description": "Returns a pointer to the current cursor record",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "cursorPtr", "description": "POINTER to current cursor record" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Pointer GetCursorAdr()" },
      "docs": [{ "ref": "tbv2", "page": "16-117" }]
    },
    {
      "toolcall": "90",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "HideCursor",
      "description": "Hides the cursor by decrementing the cursor level",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void HideCursor()" },
      "docs": [{ "ref": "tbv2", "page": "16-156" }]
    },
    {
      "toolcall": "91",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "ShowCursor",
      "description": "Shows the cursor by incrementing the cursor level",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void ShowCursor()" },
      "docs": [{ "ref": "tbv2", "page": "16-264" }]
    },
    {
      "toolcall": "92",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "ObscureCursor",
      "description": "Hides the cursor until the mouse moves",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void ObscureCursor()" },
      "docs": [{ "ref": "tbv2", "page": "16-182" }]
    },
    {
      "toolcall": "94",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetFont",
      "description": "Sets the current font to a specified font",
      "parameters": {
        "input": [
          { "size": "long", "name": "newFontHandle", "description": "HANDLE to font" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetFont(newFontHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-224" }]
    },
    {
      "toolcall": "95",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetFont",
      "description": "Returns a handle to the current font",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "fontHandle", "description": "HANDLE to font" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal FontHndl GetFont()" },
      "docs": [{ "ref": "tbv2", "page": "16-119" }]
    },
    {
      "toolcall": "96",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetFontInfo",
      "description": "Returns information about the current font in a specified record",
      "parameters": {
        "input": [
          { "size": "long", "name": "fontInfoRecPtr", "description": "POINTER to space for fontInfo record" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void GetFontInfo(fontInfoRecPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-123" }]
    },
    {
      "toolcall": "97",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetFontGlobals",
      "description": "Returns information about the current font in a specified record",
      "parameters": {
        "input": [
          { "size": "long", "name": "fgRecPtr", "description": "POINTER to space for font globals record" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void GetFontGlobals(fgRecPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-121" }]
    },
    {
      "toolcall": "98",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetFontFlags",
      "description": "Sets the font flags word to a specified value",
      "parameters": {
        "input": [
          { "size": "word", "name": "fontFlags", "description": "INTEGER; font flags (see Toolbox Ref Vol2 Figure 16-37)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetFontFlags(fontFlags)" },
      "docs": [{ "ref": "tbv2", "page": "16-225" }]
    },
    {
      "toolcall": "99",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetFontFlags",
      "description": "Returns the current font flags word",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "fontFlags", "description": "INTEGER; font flags (see Toolbox Ref Vol2 Figure 16-37)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word GetFontFlags()" },
      "docs": [{ "ref": "tbv2", "page": "16-120" }]
    },
    {
      "toolcall": "9A",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetTextFace",
      "description": "Sets the text face to a specified value",
      "parameters": {
        "input": [
          { "size": "word", "name": "textFace", "description": "INTEGER; text face (see Toolbox Ref Vol2 Figure 16-39)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetTextFace(textFace)" },
      "docs": [{ "ref": "tbv2", "page": "16-257" }]
    },
    {
      "toolcall": "9B",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetTextFace",
      "description": "Returns the current text face",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "textFace", "description": "INTEGER; text face (see Toolbox Ref Vol2 Figure 16-39)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal TextStyle GetTextFace()" },
      "docs": [{ "ref": "tbv2", "page": "16-148" }]
    },
    {
      "toolcall": "9C",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetTextMode",
      "description": "Sets the text mode to a specified value",
      "parameters": {
        "input": [
          { "size": "word", "name": "textMode", "description": "INTEGER; text mode (see Toolbox Ref Vol2 Figure 16-10)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetTextMode(textMode)" },
      "docs": [{ "ref": "tbv2", "page": "16-259" }]
    },
    {
      "toolcall": "9D",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetTextMode",
      "description": "Returns the current text mode",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "textMode", "description": "INTEGER; text mode (see Toolbox Ref Vol2 Figure 16-10)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word GetTextMode()" },
      "docs": [{ "ref": "tbv2", "page": "16-149" }]
    },
    {
      "toolcall": "9E",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetSpaceExtra",
      "description": "Sets the spExtra field in the GrafPort to a specified value",
      "parameters": {
        "input": [
          { "size": "long", "name": "spaceExtra", "description": "FIXED; new value for spExtra field" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetSpaceExtra(spaceExtra)" },
      "docs": [{ "ref": "tbv2", "page": "16-253" }]
    },
    {
      "toolcall": "9F",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetSpaceExtra",
      "description": "Returns the value of the spExtra field from the GrafPort",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "spaceExtra", "description": "FIXED; value of spExtra field" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Fixed GetSpaceExtra()" },
      "docs": [{ "ref": "tbv2", "page": "16-144" }]
    },
    {
      "toolcall": "A0",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetForeColor",
      "description": "Sets the fgColor field (foreground color) in the GrafPort to a specified value",
      "parameters": {
        "input": [
          { "size": "word", "name": "foreColor", "description": "INTEGER; foreground color" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetForeColor(foreColor)" },
      "docs": [{ "ref": "tbv2", "page": "16-228" }]
    },
    {
      "toolcall": "A1",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetForeColor",
      "description": "Returns the value of the current fgColor field (foreground color) from the GrafPort",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "foreColor", "description": "INTEGER; value of fgColor field" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word GetForeColor()" },
      "docs": [{ "ref": "tbv2", "page": "16-125" }]
    },
    {
      "toolcall": "A2",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetBackColor",
      "description": "Sets the bgColor field (background color) in the GrafPort to a specified value",
      "parameters": {
        "input": [
          { "size": "word", "name": "backColor", "description": "INTEGER; background color" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetBackColor(backColor)" },
      "docs": [{ "ref": "tbv2", "page": "16-213" }]
    },
    {
      "toolcall": "A3",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetBackColor",
      "description": "Returns the value of the current bgColor field (background color) from the GrafPort",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "backColor", "description": "INTEGER; value of bgColor field" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word GetBackColor()" },
      "docs": [{ "ref": "tbv2", "page": "16-110" }]
    },
    {
      "toolcall": "A4",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "DrawChar",
      "description": "Draws a specified character at current pen location and updates pen location",
      "parameters": {
        "input": [
          { "size": "word", "name": "theChar", "description": "ASCII code of character to be drawn (0-255)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void DrawChar(theChar)" },
      "docs": [{ "ref": "tbv2", "page": "16-80" }]
    },
    {
      "toolcall": "A5",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "DrawString",
      "description": "Draws a specified Pascal-type string at the current pen location and updates the pen location.",
      "parameters": {
        "input": [
          { "size": "long", "name": "stringPtr", "description": "POINTER to Pascal-type string to be drawn" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void DrawString(stringPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-82" }]
    },
    {
      "toolcall": "A6",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "DrawCString",
      "description": "Draws a specified C string at the current pen location and updates the pen location",
      "parameters": {
        "input": [
          { "size": "long", "name": "cStringPtr", "description": "POINTER to C string to be drawn" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void DrawCString(cStringPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-81" }]
    },
    {
      "toolcall": "A7",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "DrawText",
      "description": "Draws specified text at the current pen location and updates pen location",
      "parameters": {
        "input": [
          { "size": "long", "name": "textPtr", "description": "POINTER to text to be drawn" },
          { "size": "word", "name": "textLength", "description": "INTEGER; number of bytes in text to be drawn" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void DrawText(textPtr,textLength)" },
      "docs": [{ "ref": "tbv2", "page": "16-83" }]
    },
    {
      "toolcall": "A8",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "CharWidth",
      "description": "Returns the character width, in pixels (pen displacement), of a specified character",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "theChar", "description": "Character to be measured" }
        ],
        "output": [
          { "size": "word", "name": "charWidth", "description": "INTEGER; width of character in pixels" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Integer CharWidth(theChar)" },
      "docs": [{ "ref": "tbv2", "page": "16-70" }]
    },
    {
      "toolcall": "A9",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "StringWidth",
      "description": "Returns sum of all char widths, in pixels (pen displacements), of specified Pascal-type string.",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "stringPtr", "description": "POINTER to Pascal-type string" }
        ],
        "output": [
          { "size": "word", "name": "stringWidth", "description": "INTEGER; width of string in pixels" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Integer StringWidth(stringPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-267" }]
    },
    {
      "toolcall": "AA",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "CStringWidth",
      "description": "Returns sum of all char widths, in pixels (pen displacements), of specified C string",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "cStringPtr", "description": "POINTER to C string" }
        ],
        "output": [
          { "size": "word", "name": "cStringWidth", "description": "INTEGER; width of C string in pixels" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Integer CStringWidth(cStringPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-77" }]
    },
    {
      "toolcall": "AB",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "TextWidth",
      "description": "Returns the character width, in pixels (pen displacements), of specified text",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "textPtr", "description": "POINTER to text" },
          { "size": "word", "name": "textLength", "description": "INTEGER; length of text in bytes" }
        ],
        "output": [
          { "size": "word", "name": "textWidth", "description": "INTEGER; width of text in pixels" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Integer TextWidth(textPtr,textLength)" },
      "docs": [{ "ref": "tbv2", "page": "16-270" }]
    },
    {
      "toolcall": "AC",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "CharBounds",
      "description": "Puts the character bounds rectangle of a specified character into a specified buffer",
      "parameters": {
        "input": [
          { "size": "word", "name": "theChar", "description": "Character to use to set bounds" },
          { "size": "long", "name": "resultPtr", "description": "POINTER to space for rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void CharBounds(theChar,resultPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-69" }]
    },
    {
      "toolcall": "AD",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "StringBounds",
      "description": "Puts the character bounds rectangle of a spec Pascal-type string into spec buffer",
      "parameters": {
        "input": [
          { "size": "long", "name": "stringPtr", "description": "POINTER to Pascal-type string" },
          { "size": "long", "name": "resultPtr", "description": "POINTER to space for RECT defining rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void StringBounds(stringPtr,resultPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-266" }]
    },
    {
      "toolcall": "AE",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "CStringBounds",
      "description": "Puts char bounds rectangle of a spec C string into a specified buffer",
      "parameters": {
        "input": [
          { "size": "long", "name": "cStringPtr", "description": "POINTER to C string" },
          { "size": "long", "name": "resultPtr", "description": "POINTER to space for RECT defining rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void CStringBounds(cStringPtr,resultPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-76" }]
    },
    {
      "toolcall": "AF",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "TextBounds",
      "description": "Puts the character bounds rectangle of specified text into a specified buffer",
      "parameters": {
        "input": [
          { "size": "long", "name": "textPtr", "description": "POINTER to text" },
          { "size": "long", "name": "textLength", "description": "INTEGER; length of text in bytes" },
          { "size": "long", "name": "resultPtr", "description": "POINTER to space for RECT defining rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void TextBounds(textPtr,textLength,resultPtr)" },
      "docs": [{ "ref": "tbv2", "page": "16-269" }]
    },
    {
      "toolcall": "B0",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetArcRot",
      "description": "Sets the arcRot field in the GrafPort to a specified value",
      "parameters": {
        "input": [
          { "size": "word", "name": "arcRotValue", "description": "INTEGER; new value of arcRot field" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void setArcRot(arcRotValue)" },
      "docs": [{ "ref": "tbv2", "page": "16-212" }]
    },
    {
      "toolcall": "B1",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetArcRot",
      "description": "Returns the value of the arcRot field in the current GrafPort",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "arcRot", "description": "INTEGER; value of arcRot field" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Integer getArcRot()" },
      "docs": [{ "ref": "tbv2", "page": "16-109" }]
    },
    {
      "toolcall": "B2",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetSysFont",
      "description": "Sets a specified font as the system font",
      "parameters": {
        "input": [
          { "size": "long", "name": "fontHandle", "description": "HANDLE to font that will be system font" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void setSysFont(fontHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-256" }]
    },
    {
      "toolcall": "B3",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetSysFont",
      "description": "Returns a handle to the current system font",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "fontHandle", "description": "HANDLE to current system font" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal FontHndl GetSysFont()" },
      "docs": [{ "ref": "tbv2", "page": "16-147" }]
    },
    {
      "toolcall": "B4",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetVisRgn",
      "description": "Copies specified region into the visible region (but does not change the visRgn field of the GrafPort).",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetVisRgn(rgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-264" }]
    },
    {
      "toolcall": "B5",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetVisRgn",
      "description": "Copies the contents of the visible region into a specified region. The region must have already been created with a NewRgn call.",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to region" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void GetVisRgn(rgnHandle)" },
      "docs": [{ "ref": "tbv2", "page": "16-153" }]
    },
    {
      "toolcall": "B6",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetIntUse",
      "description": "Indicates to the cursor drawing code whether the code should use scan line interrupts.",
      "parameters": {
        "input": [
          { "size": "word", "name": "useInt", "description": "BOOLEAN; TRUE for cursor to use scan line interrupts, FALSE if not" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetIntUse(useInt)" },
      "docs": [
        { "ref": "tbv2", "page": "16-230" },
        { "ref": "gs16pr60", "page": "199" }
      ]
    },
    {
      "toolcall": "B7",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "OpenPicture",
      "description": "Allocates memory for the recording of drawing commands into a picture definition, and returns a handle to the picture.",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "long", "name": "picFrame", "description": "POINTER to RECT defining picture frame" }
        ],
        "output": [
          { "size": "long", "name": "picHandle", "description": "Handle to picture" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Handle OpenPicture(picFrame)" },
      "docs": [
        { "ref": "tbv2", "page": "17-14" }
      ]
    },
    {
      "toolcall": "B8",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "PicComment",
      "description": "Inserts a specified comment into the currently open picture.",
      "parameters": {
        "input": [
          { "size": "word", "name": "commentKind", "description": "Type of comment" },
          { "size": "word", "name": "dataSize", "description": "Size of additional data; 0 if none" },
          { "size": "long", "name": "dataHandle", "description": "Handle to additional data; NIL if none" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void PicComment(commentKind,dataSize,dataHandle)" },
      "docs": [
        { "ref": "tbv2", "page": "17-15" }
      ]
    },
    {
      "toolcall": "B9",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "ClosePicture",
      "description": "Completes the picture definition process begun by OpenPicture call.",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void ClosePicture" },
      "docs": [{ "ref": "tbv2", "page": "17-9" }]
    },
    {
      "toolcall": "BA",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "DrawPicture",
      "description": "Takes drawing commands recorded in pic definition, maps them from picture frame into destination rectangle, and draws them.",
      "parameters": {
        "input": [
          { "size": "long", "name": "picHandle", "description": "Handle to picture" },
          { "size": "long", "name": "destRect", "description": "POINTER to RECT defining destination rectangle" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void DrawPicture(picHandle,destRect)" },
      "docs": [
        { "ref": "tbv2", "page": "17-12" }
      ]
    },
    {
      "toolcall": "BB",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "KillPicture",
      "description": "Releases all memory occupied by a specifed picture.",
      "parameters": {
        "input": [
          { "size": "long", "name": "picHandle", "description": "Handle to picture" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void KillPicture(picHandle)" },
      "docs": [
        { "ref": "tbv2", "page": "17-13" }
      ]
    },
    {
      "toolcall": "BC",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "FramePoly",
      "description": "Draws the frame of a specified polygon using the current pen mode, pattern, & size. Poly is framed with a series of LineTo calls.",
      "parameters": {
        "input": [
          { "size": "long", "name": "polyHandle", "description": "Handle to polygon" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void FramePoly(polyHandle)" },
      "docs": [
        { "ref": "tbv2", "page": "16-103" }
      ]
    },
    {
      "toolcall": "BD",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "PaintPoly",
      "description": "Paints the interior of a specified polygon using the current pen mode & pattern.",
      "parameters": {
        "input": [
          { "size": "long", "name": "polyHandle", "description": "Handle to polygon" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void PaintPoly(polyHandle)" },
      "docs": [
        { "ref": "tbv2", "page": "16-192" }
      ]
    },
    {
      "toolcall": "BE",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "ErasePoly",
      "description": "Erases the interior of a specified polygon by filling it with the background pattern",
      "parameters": {
        "input": [
          { "size": "long", "name": "polyHandle", "description": "Handle to polygon" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void ErasePoly(polyHandle)" },
      "docs": [
        { "ref": "tbv2", "page": "16-90" }
      ]
    },
    {
      "toolcall": "BF",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "InvertPoly",
      "description": "Inverts the pixels in the interior of a specified polygon.",
      "parameters": {
        "input": [
          { "size": "long", "name": "polyHandle", "description": "Handle to polygon" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void InvertPoly(polyHandle)" },
      "docs": [
        { "ref": "tbv2", "page": "16-166" }
      ]
    },
    {
      "toolcall": "C0",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "FillPoly",
      "description": "Fills the interior of a specified polygon with a specified pen pattern.",
      "parameters": {
        "input": [
          { "size": "long", "name": "polyHandle", "description": "Handle to polygon" },
          { "size": "long", "name": "patternPtr", "description": "POINTER to pattern" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void FillPoly(polyHandle,patternPtr)" },
      "docs": [
        { "ref": "tbv2", "page": "16-96" }
      ]
    },
    {
      "toolcall": "C1",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "OpenPoly",
      "description": "Returns a handle to a polygon data structure that will be updated by future LineTo calls.",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "polyHandle", "description": "Handle to polygon" }
        ]
      },
      "errors": ["qd0440"],
      "c": { "call": "extern pascal Handle OpenPoly()" },
      "docs": [
        { "ref": "tbv2", "page": "16-186" }
      ]
    },
    {
      "toolcall": "C2",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "ClosePoly",
      "description": "Completes the polygon definition process started with an OpenPoly call.",
      "parameters": { "none": true },
      "errors": ["qd0441","mmUnch"],
      "c": { "call": "extern pascal void ClosePoly()" },
      "docs": [{ "ref": "tbv2", "page": "16-72" }]
    },
    {
      "toolcall": "C3",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "KillPoly",
      "description": "Disposes of a specified polygon.",
      "parameters": {
        "input": [
          { "size": "long", "name": "polyHandle", "description": "Handle to polygon to be killed" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void KillPoly()" },
      "docs": [
        { "ref": "tbv2", "page": "16-170" }
      ]
    },
    {
      "toolcall": "C4",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "OffsetPoly",
      "description": "Offsets a specified polygon by specified horizontal & vertical displacements.",
      "parameters": {
        "input": [
          { "size": "long", "name": "polyHandle", "description": "Handle to polygon" },
          { "size": "word", "name": "dH", "description": "INTEGER; horizontal displacement in pixels" },
          { "size": "word", "name": "dV", "description": "INTEGER; vertical displacement in pixels" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void OffsetPoly(polyHandle,dH,dV)" },
      "docs": [
        { "ref": "tbv2", "page": "16-183" }
      ]
    },
    {
      "toolcall": "C5",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "MapPoly",
      "description": "Maps a specified polygon from a source rectangle to a destination rectangle",
      "parameters": {
        "input": [
          { "size": "long", "name": "polyHandle", "description": "Handle to polygon to be mapped" },
          { "size": "long", "name": "srcRectPtr", "description": "POINTER to RECT defining source rectangle" },
          { "size": "long", "name": "destRectPtr", "description": "POINTER to RECT defining destination rectangle" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void MapPoly(polyHandle,srcRectPtr,destRectPtr)" },
      "docs": [
        { "ref": "tbv2", "page": "16-174" }
      ]
    },
    {
      "toolcall": "C6",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetClipHandle",
      "description": "Sets the clipRgn handle field in the GrafPort to a specified value.",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "Handle to clipping region" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetClipHandle(rgnHandle)" },
      "docs": [
        { "ref": "tbv2", "page": "16-219" }
      ]
    },
    {
      "toolcall": "C7",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetClipHandle",
      "description": "Returns a copy of the handle to the clipping region.",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "rgnHandle", "description": "Handle to clipping region" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal RgnHandle GetClipHandle()" },
      "docs": [
        { "ref": "tbv2", "page": "16-114" }
      ]
    },
    {
      "toolcall": "C8",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetVisHandle",
      "description": "Sets the visRgn field in the GrafPort to a specified value.",
      "parameters": {
        "input": [
          { "size": "long", "name": "rgnHandle", "description": "HANDLE to visible region" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetVisHandle(rgnHandle)" },
      "docs": [
        { "ref": "tbv2", "page": "16-263" }
      ]
    },
    {
      "toolcall": "C9",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetVisHandle",
      "description": "Returns a copy of the handle to the visible region.",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "visRgnHandle", "description": "HANDLE to region" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal RgnHandle GetVisHandle()" },
      "docs": [
        { "ref": "tbv2", "page": "16-152" }
      ]
    },
    {
      "toolcall": "CA",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "InitCursor",
      "description": "Reinitializes the cursor. The cursor is set to the arrow cursor and made visible.",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void InitCursor()" },
      "docs": [{ "ref": "tbv2", "page": "16-160" }]
    },
    {
      "toolcall": "CB",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetBufDims",
      "description": "Sets size of QD II clipping and text buffers, padding to allow mods to chExtra & spExtra",
      "parameters": {
        "input": [
          { "size": "word", "name": "maxWidth", "description": "INTEGER; width, in bytes, of widest pixel image to be used" },
          { "size": "word", "name": "maxFontHeight", "description": "INTEGER; height, in pixels, of tallest font application will use" },
          { "size": "word", "name": "maxFBRExtent", "description": "INTEGER; greatest fbrExtent, in pixels, of any font to be used" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void SetBufDims(maxWidth,maxFontHeight,maxFBRExtent)" },
      "docs": [
        { "ref": "tbv2", "page": "16-215" }
      ]
    },
    {
      "toolcall": "CC",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "ForceBufDims",
      "description": "Sets size of QD II clipping and text buffers, but doesn't pad maxFBRExtent in any way.",
      "parameters": {
        "input": [
          { "size": "word", "name": "maxWidth", "description": "INTEGER; width, in bytes, of widest pixel image to be used" },
          { "size": "word", "name": "maxFontHeight", "description": "INTEGER; height, in pixels, of tallest font application will use" },
          { "size": "word", "name": "maxFBRExtent", "description": "INTEGER; greatest fbrExtent, in pixels, of any font to be used" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void ForceBufDims(maxWidth,maxFontHeight,maxFBRExtent)" },
      "docs": [
        { "ref": "tbv2", "page": "16-100" }
      ]
    },
    {
      "toolcall": "CD",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SaveBufDims",
      "description": "Saves QD II's buffer-sizing information in eight-byte record.",
      "parameters": {
        "input": [
          { "size": "long", "name": "sizeInfoPtr", "description": "POINTER to space for record (see Toolbox Ref Vol2 Figure 16-36)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SaveBufDims(sizeInfoPtr)" },
      "docs": [
        { "ref": "tbv2", "page": "16-206" }
      ]
    },
    {
      "toolcall": "CE",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "RestoreBufDims",
      "description": "Restores QD II's internal buffers to sizes described in an 8-byte record created by SaveBufDims",
      "parameters": {
        "input": [
          { "size": "long", "name": "sizeInfoPtr", "description": "POINTER to record to be restored" }
        ]
      },
      "errors": ["mmUnch"],
      "c": { "call": "extern pascal void RestoreBufDims(sizeInfoPtr)" },
      "docs": [
        { "ref": "tbv2", "page": "16-205" }
      ]
    },
    {
      "toolcall": "CF",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetFGSize",
      "description": "Returns the size of the font globals record.",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "fgSize", "description": "INTEGER; size of font globals record" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word GetFGSize()" },
      "docs": [
        { "ref": "tbv2", "page": "16-118" }
      ]
    },
    {
      "toolcall": "D0",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetFontID",
      "description": "Sets the fontID field in the GrafPort.",
      "parameters": {
        "input": [
          { "size": "long", "name": "fontID", "description": "Font ID" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetFontID(fontID)" },
      "docs": [
        { "ref": "tbv2", "page": "16-227" }
      ]
    },
    {
      "toolcall": "D1",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetFontID",
      "description": "Returns the fontID field of the GrafPort.",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "fontID", "description": "Value of fontID field in GrafPort" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal LongWord GetFontID()" },
      "docs": [
        { "ref": "tbv2", "page": "16-122" }
      ]
    },
    {
      "toolcall": "D2",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetTextSize",
      "description": "Sets the txSize field of the GrafPort to a specified value.",
      "parameters": {
        "input": [
          { "size": "word", "name": "textSize", "description": "INTEGER; value for txSize field" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetTextSize(textSize)" },
      "docs": [
        { "ref": "tbv2", "page": "16-261" }
      ]
    },
    {
      "toolcall": "D3",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetTextSize",
      "description": "Returns current value of the txSize field of the GrafPort.",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "textSize", "description": "Current value of txSize field" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Integer GetTextSize()" },
      "docs": [
        { "ref": "tbv2", "page": "16-150" }
      ]
    },
    {
      "toolcall": "D4",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "SetCharExtra",
      "description": "Sets the chExtra field in the GrafPort to a specified value.",
      "parameters": {
        "input": [
          { "size": "long", "name": "charExtra", "description": "FIXED; value for chExtra field" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetCharExtra(charExtra)" },
      "docs": [
        { "ref": "tbv2", "page": "16-217" }
      ]
    },
    {
      "toolcall": "D5",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetCharExtra",
      "description": "Returns the chExtra field from the GrafPort",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "charExtra", "description": "FIXED; value of chExtra field" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Fixed GetCharExtra()" },
      "docs": [
        { "ref": "tbv2", "page": "16-112" }
      ]
    },
    {
      "toolcall": "D6",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "PPToPort",
      "description": "Transfers pixels from a source pixel map to current port & clips pixels to current visble region & clipping region",
      "parameters": {
        "input": [
          { "size": "long", "name": "srcLocPtr", "description": "POINTER to source LocInfo record" },
          { "size": "long", "name": "srcRectPtr", "description": "POINTER to RECT defining source rectangle" },
          { "size": "word", "name": "destX", "description": "INTEGER; X coordinate of upper left corner of destination" },
          { "size": "word", "name": "destY", "description": "INTEGER; Y coordinate of upper left corner of destination" },
          { "size": "word", "name": "transferMode", "description": "Same as pen mode (see Toolbox Ref Vol2, Table 16-9)" }
        ]
      },
      "errors": ["qd0420"],
      "c": { "call": "extern pascal void PPToPort(srcLocPtr,srcRectPtr,destX,destY,transferMode)" },
      "docs": [
        { "ref": "tbv2", "page": "16-196" }
      ]
    },
    {
      "toolcall": "D7",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "InflateTextBuffer",
      "description": "Ensures that the text buffer is big enough to handle a font with the specified width and height, increasing it if necessary.",
      "parameters": {
        "input": [
          { "size": "word", "name": "newWidth", "description": "INTEGER; width of font" },
          { "size": "word", "name": "newHeight", "description": "INTEGER; height of font" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void InflateTextBuffer(newWidth,newHeight)" },
      "docs": [
        { "ref": "tbv2", "page": "16-157" }
      ]
    },
    {
      "toolcall": "D8",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetROMFont",
      "description": "Fills a specified buffer with information about the font in ROM",
      "parameters": {
        "input": [
          { "size": "long", "name": "recordPtr", "description": "POINTER to space for ROM font record (see Toolbox Ref Vol2 Figure 16-33)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void GetROMFont(recordPtr)" },
      "docs": [
        { "ref": "tbv2", "page": "16-141" }
      ]
    },
    {
      "toolcall": "D9",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "GetFontLore",
      "description": "Returns info, up to a specified number of bytes, about the current font in a specified buffer",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "long", "name": "recordPtr", "description": "POINTER to space for record" },
          { "size": "word", "name": "recordSize", "description": "Maximum number of bytes to transfer" }
        ],
        "output": [
          { "size": "word", "name": "numBytesXfer", "description": "INTEGER; number of bytes tranferred" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal word GetFontLore(recordPtr,recordSize)" },
      "docs": [
        { "ref": "tbv2", "page": "16-141" }
      ]
    },
    {
      "toolcall": "DA",
      "toolnum": "04",
      "toolname": "QuickDraw",
      "callname": "Get640Colors",
      "description": "Returns a pointer to a 512-byte table of 32 $00s, 32 $11s, ..., 32 $FFs, to be used as solid pen patterns.",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "tablePtr", "description": "POINTER to pattern table" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Pointer Get640Colors()" },
      "docs": [
        { "ref": "gs16pr60", "page": "200" }
      ]
    },
    {
      "toolcall": "DB",
      "toolnum": "05",
      "toolname": "QuickDraw",
      "callname": "Set640Color",
      "description": "Sets the current grafport’s pen pattern to any of the 16 \"solid\" 640-mode dithered colors",
      "parameters": {
        "input": [
          { "size": "word", "name": "colorNum", "description": "Color number" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void Set640Color(colorNum)" },
      "docs": [
        { "ref": "gs16pr60", "page": "201" }
      ]
    },
    {
      "toolcall": "01",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "DeskBootInit",
      "description": "Initializes the Desk Manager; called only by Tool Locator (not by application)",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv1", "page": "5-9" }]
    },
    {
      "toolcall": "02",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "DeskStartUp",
      "description": "Starts up the Desk Manager for use by an application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void DeskStartUp()" },
      "docs": [{ "ref": "tbv1", "page": "5-9" }]
    },
    {
      "toolcall": "03",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "DeskShutDown",
      "description": "Shuts down the Desk Manager when an application quits",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void DeskShutDown()" },
      "docs": [{ "ref": "tbv1", "page": "5-10" }]
    },
    {
      "toolcall": "04",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "DeskVersion",
      "description": "Returns the version number of the Desk Manager",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "versionInfo", "description": "Version number of the Desk Manager" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word DeskVersion()" },
      "docs": [
        { "ref": "tbv1", "page": "5-10" }
      ]
    },
    {
      "toolcall": "05",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "DeskReset",
      "description": "Resets the Desk Manager; called only on reset - not by application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void DeskShutDown()" },
      "docs": [{ "ref": "tbv1", "page": "5-11" }]
    },
    {
      "toolcall": "06",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "DeskStatus",
      "description": "Indicates whether the Desk Manager is active",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "activeFlag", "description": "BOOLEAN; TRUE if Desk Manager is active, FALSE if not" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean DeskStatus()" },
      "docs": [
        { "ref": "tbv1", "page": "5-11" }
      ]
    },
    {
      "toolcall": "09",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "SaveScrn",
      "description": "Saves the 80-column text screens in banks $00, $01, $E0, & $E1 - not called by application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv1", "page": "5-22" }]
    },
    {
      "toolcall": "0A",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "RestScrn",
      "description": "Restores the screen area saved by the Desk Manager - not called by application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv1", "page": "5-21" }]
    },
    {
      "toolcall": "0B",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "SaveAll",
      "description": "Saves all variables that Desk Manager preserves when CDA menu is activated - not called by application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv1", "page": "5-22" }]
    },
    {
      "toolcall": "0C",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "RestAll",
      "description": "Restores all variables that Desk Manager preserves when CDA menu is activated - not called by application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv1", "page": "5-21" }]
    },
    {
      "toolcall": "0E",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "InstallNDA",
      "description": "Installs a specified NDA in the system",
      "parameters": {
        "input": [
          { "size": "long", "name": "idHandle", "description": "HANDLE to NDA header section" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void InstallNDA(idHandle)" },
      "docs": [
        { "ref": "tbv1", "page": "5-19" }
      ]
    },
    {
      "toolcall": "0F",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "InstallCDA",
      "description": "Installs a specified CDA in the system",
      "parameters": {
        "input": [
          { "size": "long", "name": "idHandle", "description": "HANDLE to CDA header section" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void InstallCDA(idHandle)" },
      "docs": [
        { "ref": "tbv1", "page": "5-18" }
      ]
    },
    {
      "toolcall": "11",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "ChooseCDA",
      "description": "Activates the Desk Manager and displays the CDA menu - not called by application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv1", "page": "5-12" }]
    },
    {
      "toolcall": "13",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "SetDAStrPtr",
      "description": "Changes the names of the built-in CDAs",
      "parameters": {
        "input": [
          { "size": "long", "name": "altDispHandle", "description": "HANDLE to new alternate display desk accessory" },
          { "size": "long", "name": "stringTablePtr", "description": "POINTER to table of strings" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetDAStrPtr(altDispHandle,stringTablePtr)" },
      "docs": [
        { "ref": "tbv1", "page": "5-23" }
      ]
    },
    {
      "toolcall": "14",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "GetDAStrPtr",
      "description": "Returns the pointer to the names of the built-in CDAs",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "stringTablePtr", "description": "POINTER to table of strings for the built-in CDA names" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Pointer GetDAStrPtr()" },
      "docs": [
        { "ref": "tbv1", "page": "5-16" }
      ]
    },
    {
      "toolcall": "15",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "OpenNDA",
      "description": "Opens a specified NDA",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "idNum", "description": "ID number returned from Menu Manager" }
        ],
        "output": [
          { "size": "word", "name": "refNum", "description": "Reference number to use when apllication closes NDA" }
        ]
      },
      "errors": ["dm0510"],
      "c": { "call": "extern pascal Word OpenNDA(idNum)" },
      "docs": [
        { "ref": "tbv1", "page": "5-20" }
      ]
    },
    {
      "toolcall": "16",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "CloseNDA",
      "description": "Closes a specified NDA",
      "parameters": {
        "input": [
          { "size": "word", "name": "refNum", "description": "As returned by the OpenNDA routine" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void CloseNDA(refNum)" },
      "docs": [
        { "ref": "tbv1", "page": "5-13" }
      ]
    },
    {
      "toolcall": "17",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "SystemClick",
      "description": "Handles mouse-down events in a system (that is, desk accessory) window",
      "parameters": {
        "input": [
          { "size": "long", "name": "eventRecPtr", "description": "POINTER to event record" },
          { "size": "long", "name": "theWindowPtr", "description": "POINTER to system window" },
          { "size": "word", "name": "findWndwResult", "description": "Result of the FindWindow call" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SystemClick(eventRecPtr,theWindowPtr,findWndwResult)" },
      "docs": [
        { "ref": "tbv1", "page": "5-26" }
      ]
    },
    {
      "toolcall": "18",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "SystemEdit",
      "description": "Passes standard menu edits to system windows. Valid: 1=undo, 2=cut, 3=copy, 4=paste, 5=clear",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "editType", "description": "Edit type" }
        ],
        "output": [
          { "size": "word", "name": "processedFlag", "description": "BOOLEAN; TRUE if frontmost window and DA has to handle call, otherwise FALSE" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean SystemEdit(editType)" },
      "docs": [
        { "ref": "tbv1", "page": "5-27" }
      ]
    },
    {
      "toolcall": "19",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "SystemTask",
      "description": "Causes a desk accessory to perform its periodic action",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void SystemTask()" },
      "docs": [{ "ref": "tbv1", "page": "5-29" }]
    },
    {
      "toolcall": "1A",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "SystemEvent",
      "description": "Previews all events returned to application & indicates if event was processed by a desk accessory",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "eventWhat", "description": "From event record" },
          { "size": "long", "name": "eventMessage", "description": "From event record" },
          { "size": "long", "name": "eventWhen", "description": "From event record" },
          { "size": "long", "name": "eventWhere", "description": "From event record" },
          { "size": "long", "name": "eventMods", "description": "From event record" }
        ],
        "output": [
          { "size": "word", "name": "processFlag", "description": "BOOLEAN; TRUE if if event is to be processed by DA, otherwise FALSE - not called by application" }
        ]
      },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [
        { "ref": "tbv1", "page": "5-28" }
      ]
    },
    {
      "toolcall": "1B",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "GetNumNDAs",
      "description": "Returns the total number of NDAs currently installed",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "numberofNDAs", "description": "INTEGER; total number of open NDAs" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal unsigned int GetNumNDAs()" },
      "docs": [
        { "ref": "tbv1", "page": "5-17" }
      ]
    },
    {
      "toolcall": "1C",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "CloseNDAByWinPtr",
      "description": "Closes an NDA with a specified window pointer",
      "parameters": {
        "input": [
          { "size": "long", "name": "theWindowPtr", "description": "POINTER to window to close" }
        ]
      },
      "errors": ["dm0510","dm0511"],
      "c": { "call": "extern pascal void CloseNDAByWinPtr(theWindowPtr)" },
      "docs": [
        { "ref": "tbv1", "page": "5-14" }
      ]
    },
    {
      "toolcall": "1D",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "CloseAllNDAs",
      "description": "Closes all open NDAs",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void CloseAllNDAs()" },
      "docs": [{ "ref": "tbv1", "page": "5-12" }]
    },
    {
      "toolcall": "1E",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "FixAppleMenu",
      "description": "Adds the names of the NDAs to a specified menu",
      "parameters": {
        "input": [
          { "size": "word", "name": "startingID", "description": "ID of menu that will display NDAs" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void FixAppleMenu(startingID)" },
      "docs": [
        { "ref": "tbv1", "page": "5-15" }
      ]
    },
    {
      "toolcall": "1F",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "AddToRunQ",
      "description": "Adds the specified routine to the head of the run queue",
      "parameters": {
        "input": [
          { "size": "long", "name": "runItemPtr", "description": "POINTER to run item to add" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void AddToRunQ(runItemPtr)" },
      "docs": [
        { "ref": "tbv3", "page": "29-6" }
      ]
    },
    {
      "toolcall": "20",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "RemoveFromRunQ",
      "description": "Removes the specified run item from the run queue",
      "parameters": {
        "input": [
          { "size": "long", "name": "runItemPtr", "description": "POINTER to run item to remove" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void RemoveFromRunQ(runItemPtr)" },
      "docs": [
        { "ref": "tbv3", "page": "29-8" }
      ]
    },
    {
      "toolcall": "21",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "RemoveCDA",
      "description": "Removes the specified CDA from the Desk Manager CDA list (does not dispose of memory used by CDA)",
      "parameters": {
        "input": [
          { "size": "long", "name": "idHandle", "description": "HANDLE to CDA header" }
        ]
      },
      "errors": ["dm0510"],
      "c": { "call": "extern pascal void RemoveCDA(idHandle)" },
      "docs": [
        { "ref": "tbv3", "page": "29-7" }
      ]
    },
    {
      "toolcall": "22",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "RemoveNDA",
      "description": "Removes the specified NDA from the Desk Manager NDA list (does not dispose of memory used by NDA nor rebuild Apple menu)",
      "parameters": {
        "input": [
          { "size": "long", "name": "idHandle", "description": "HANDLE to NDA header" }
        ]
      },
      "errors": ["dm0510"],
      "c": { "call": "extern pascal void RemoveNDA(idHandle)" },
      "docs": [
        { "ref": "tbv3", "page": "29-9" }
      ]
    },
    {
      "toolcall": "23",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "GetDeskAccInfo",
      "description": "Provides safe access to certain information about DAs currently installed in the system",
      "parameters": {
        "input": [
          { "size": "word", "name": "flags", "description": "Flags" },
          { "size": "long", "name": "daReference", "description": "Specifies which desk accessory to get information about" },
          { "size": "word", "name": "buffSize", "description": "Size of the result buffer" },
          { "size": "long", "name": "bufferPtr", "description": "Pointer to the result buffer" }
        ]
      },
      "errors": ["dm0520"],
      "c": { "call": "extern pascal void GetDeskAccInfo(flags,daReference,buffSize,bufferPtr)" },
      "docs": [
        { "ref": "gs16pr60", "page": "24" }
      ]
    },
    {
      "toolcall": "24",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "CallDeskAcc",
      "description": "Calls a NDA's Action or Init routine with the specified values",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "flags", "description": "Flags" },
          { "size": "long", "name": "daReference", "description": "Specifies which desk accessory to call" },
          { "size": "word", "name": "action", "description": "Action code to pass to desk accessory" },
          { "size": "long", "name": "data", "description": "Data value to pass to desk accessory" }
        ],
        "output": [
          { "size": "word", "name": "result", "description": "Result returned from desk accessory" }
        ]
      },
      "errors": ["dm0520"],
      "c": { "call": "extern pascal Word CallDeskAcc(flags,daReference,action,data)" },
      "docs": [
        { "ref": "gs16pr60", "page": "22" }
      ]
    },
    {
      "toolcall": "25",
      "toolnum": "05",
      "toolname": "Desk Manager",
      "callname": "GetDeskGlobal",
      "description": "GetDeskGlobal retrieves information from the Desk Manager",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" },
          { "size": "word", "name": "selector", "description": "Selects which value to retrieve" }
        ],
        "output": [
          { "size": "long", "name": "value", "description": "The selected value" }
        ]
      },
      "errors": ["dm0520"],
      "c": { "call": "extern pascal Long GetDeskGlobal(selector)" },
      "docs": [
        { "ref": "gs16pr60", "page": "26" }
      ]
    },
    {
      "toolcall": "01",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "EMBootInit",
      "description": "Initializes the Event Manager; called only by Tool Locator - not called by application",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv1", "page": "7-26" }]
    },
    {
      "toolcall": "02",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "EMStartUp",
      "description": "Starts up the Event Manager, sets size of event queue, and sets minimum and maximum mouse clamp values.",
      "parameters": {
        "input": [      
          { "size": "word", "name": "dPageAddr", "description": "Bank $0 starting address for one page of direct-page space" },
          { "size": "word", "name": "queueSize", "description": "Maximum number of event records in queue (0=default of 20)" },
          { "size": "word", "name": "xMinClamp", "description": "Minimum X clamp value for the mouse" },
          { "size": "word", "name": "xMaxClamp", "description": "Maximum X clamp value for the mouse" },
          { "size": "word", "name": "yMinClamp", "description": "Minimum Y clamp value for the mouse" },
          { "size": "word", "name": "yMaxClamp", "description": "Maximum Y clamp value for the mouse" },
          { "size": "word", "name": "userID", "description": "ID number Event Manager will use to get memory" }
          
        ]
      },
      "errors": ["em0601","em0606","em0607"],
      "c": { "call": "extern pascal void EMStartUp(dPageAddr,queueSize,xMinClamp,xMaxClamp,yMinClamp,yMaxClamp,userID)" },
      "docs": [
        { "ref": "tbv1", "page": "7-27" }
      ]
    },
    {
      "toolcall": "03",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "EMShutDown",
      "description": "Shuts down the Event Manager when an application quits",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void EMShutDown()" },
      "docs": [{ "ref": "tbv1", "page": "7-29" }]
    },
    {
      "toolcall": "04",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "EMVersion",
      "description": "Returns the version number of the Event Manager",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "versionInfo", "description": "Version number of the Event Manager" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word EMVersion()" },
      "docs": [
        { "ref": "tbv1", "page": "7-29" }
      ]
    },
    {
      "toolcall": "05",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "EMReset",
      "description": "Resets the Event Manager; called only on reset - not called by application",
      "parameters": { "none": true },
      "errors": ["mm0602"],
      "c": { "call": false },
      "docs": [{ "ref": "tbv1", "page": "7-30" }]
    },
    {
      "toolcall": "06",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "EMStatus",
      "description": "Indicates whether the Event Manager is active",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "activeFlag", "description": "BOOLEAN; TRUE if Event Manager is active, FALSE if not" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean EMStatus()" },
      "docs": [
        { "ref": "tbv1", "page": "7-30" }
      ]
    },
    {
      "toolcall": "09",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "DoWindows",
      "description": "Returns the address of the direct page used by the Event Manager - not called by application",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "dPageAddr", "description": "Bank $0 starting address for Event Manager's one-page work area" }
        ]
      },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [
        { "ref": "tbv1", "page": "7-32" }
      ]
    },
    {
      "toolcall": "0A",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "GetNextEvent",
      "description": "Returns next avail event of spec type(s); if event is in queue, GetNextEvent removes it",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "eventMask", "description": "Specifies which types of events are of interest" },
          { "size": "long", "name": "eventPtr", "description": "POINTER to the event record in which event will be placed" }
        ],
        "output": [
          { "size": "word", "name": "handleEventFlag", "description": "BOOLEAN; TRUE if even should be handled by application; FALSE if not" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean GetNextEvent(eventMask,eventPtr)" },
      "docs": [
        { "ref": "tbv1", "page": "7-39" }
      ]
    },
    {
      "toolcall": "0B",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "EventAvail",
      "description": "Allows an application to look at the next available event of a specified type or types.",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "eventMask", "description": "Specifies which types of events are of interest" },
          { "size": "long", "name": "eventPtr", "description": "POINTER to the event record in which event will be placed" }
        ],
        "output": [
          { "size": "word", "name": "gotEventFlag", "description": "BOOLEAN; TRUE if any specified event types available; FALSE if not" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean EventAvail(eventMask,eventPtr)" },
      "docs": [
        { "ref": "tbv1", "page": "7-33" }
      ]
    },
    {
      "toolcall": "0C",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "GetMouse",
      "description": "Returns the current mouse location (in the local coordinate system of the current GrafPort)",
      "parameters": {
        "input": [
          { "size": "long", "name": "mouseLocPtr", "description": "POINTER to POINT for current mouse location" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void GetMouse(mouseLocPtr)" },
      "docs": [
        { "ref": "tbv1", "page": "7-38" }
      ]
    },
    {
      "toolcall": "0D",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "Button",
      "description": "Returns the current status of a specified button on the mouse",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "buttonNum", "description": "Number of button (0 or 1) to check" }
        ],
        "output": [
          { "size": "word", "name": "buttonDown", "description": "BOOLEAN; TRUE if button is down, or FALSE if it isn't" }
        ]
      },
      "errors": ["em0605"],
      "c": { "call": "extern pascal Boolean Button(buttonNum)" },
      "docs": [
        { "ref": "tbv1", "page": "7-31" }
      ]
    },
    {
      "toolcall": "0E",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "StillDown",
      "description": "Tests whether the specified mouse button is still down",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "buttonNum", "description": "Number of button (0 or 1) to check" }
        ],
        "output": [
          { "size": "word", "name": "buttonDown", "description": "BOOLEAN; TRUE if button down and no mouse events are pending in event queue for specifed button, FALSE if not" }
        ]
      },
      "errors": ["em0605"],
      "c": { "call": "extern pascal Boolean StillDown(buttonNum)" },
      "docs": [
        { "ref": "tbv1", "page": "7-47" }
      ]
    },
    {
      "toolcall": "0F",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "WaitMouseUp",
      "description": "Tests whether specified mouse button is still down. If not, removes preceding mouse-up event from queue and returns FALSE.",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "buttonNum", "description": "Number of button (0 or 1) to check" }
        ],
        "output": [
          { "size": "word", "name": "buttonDownFlag", "description": "BOOLEAN; TRUE if button down and no mouse events are pending in event queue for specifed button, FALSE if not" }
        ]
      },
      "errors": ["em0605"],
      "c": { "call": "extern pascal Boolean WaitMouseUp(buttonNum)" },
      "docs": [
        { "ref": "tbv1", "page": "7-49" }
      ]
    },
    {
      "toolcall": "10",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "TickCount",
      "description": "Returns current number of ticks (in sixtieths of a second) since system was last started",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "numTicks", "description": "Number of ticks since system startup" }
        ]
      },
      "errors": ["em0605"],
      "c": { "call": "extern pascal LongWord TickCount()" },
      "docs": [
        { "ref": "tbv1", "page": "7-48" }
      ]
    },
    {
      "toolcall": "11",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "GetDblTime",
      "description": "Returns max difference (in ticks) allowed for mouse clicks to be considered a double-click",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "maxTicks", "description": "Maximum number of ticks between mouse clicks" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal LongWord GetDblTime()" },
      "docs": [
        { "ref": "tbv1", "page": "7-37" }
      ]
    },
    {
      "toolcall": "12",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "GetCaretTime",
      "description": "Returns time (in ticks) between blicks of caret marking insertion point in text to be edited",
      "parameters": {
        "input": [
          { "size": "long", "name": "longspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "long", "name": "numTicks", "description": "Number of ticks between blinks of the caret" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal LongWord GetCaretTime()" },
      "docs": [
        { "ref": "tbv1", "page": "7-36" }
      ]
    },
    {
      "toolcall": "13",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "SetSwitch",
      "description": "Generates a switch event - only switcher-type applications should make this call",
      "parameters": { "none": true },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetSwitch()" },
      "docs": [{ "ref": "tbv1", "page": "7-46" }]
    },
    {
      "toolcall": "14",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "PostEvent",
      "description": "Posts an event into the event queue"
    },
    {
      "toolcall": "15",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "FlushEvents",
      "description": "Removes all queue events of type(s) specified by mask up to the first event of type specified by stop mask",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "eventMask", "description": "Types of events to be removed from queue" },
          { "size": "word", "name": "stopMask", "description": "Event types to stop removal process" }
        ],
        "output": [
          { "size": "word", "name": "resultCode", "description": "0 = all events removed from queue, or event code = type of event that stopped process" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word FlushEvents(eventMask,stopMask)" },
      "docs": [
        { "ref": "tbv1", "page": "7-35" }
      ]
    },
    {
      "toolcall": "16",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "GetOSEvent",
      "description": "Returns next available queue event of a specified type(s) and removes it from the queue",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "eventMask", "description": "Types of events to be removed from queue" },
          { "size": "long", "name": "eventPtr", "description": "POINTER to the event record in which event will be placed" }
        ],
        "output": [
          { "size": "word", "name": "gotEventFlag", "description": "BOOLEAN; TRUE if any specified event types available; FALSE if null event" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean GetOSEvent(eventMask,eventPtr)" },
      "docs": [
        { "ref": "tbv1", "page": "7-41" }
      ]
    },
    {
      "toolcall": "17",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "OSEventAvail",
      "description": "Allows application to look at next available queue event of specified type(s), but leaves event in queue",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "eventMask", "description": "Specifies which types of queue events are of interest" },
          { "size": "long", "name": "eventPtr", "description": "POINTER to the event record in which event will be placed" }
        ],
        "output": [
          { "size": "word", "name": "gotEventFlag", "description": "BOOLEAN; TRUE if any specified event types available; FALSE if null event" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Boolean OSEventAvail(eventMask,eventPtr)" },
      "docs": [
        { "ref": "tbv1", "page": "7-42" }
      ]
    },
    {
      "toolcall": "18",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "SetEventMask",
      "description": "Specifies the system event mask",
      "parameters": {
        "input": [
          { "size": "word", "name": "sysEventMask", "description": "System event mask" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetEventMask(sysEventMask)" },
      "docs": [
        { "ref": "tbv1", "page": "7-45" }
      ]
    },
    {
      "toolcall": "19",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "FakeMouse",
      "description": "Allows use of alternative pointing device, like graphics tablet, in place/conjuction of mouse",
      "parameters": {
        "input": [
          { "size": "word", "name": "changedFlag", "description": "Indicates device's position and/or button state has changed" },
          { "size": "byte", "name": "modLatch", "description": "Keyboard modifiers latch" },
          { "size": "byte", "name": "padding", "description": "Set to 0" },
          { "size": "word", "name": "xPosition", "description": "Device's clamped absolute X position" },
          { "size": "word", "name": "yPosition", "description": "Device's clamped absolute Y position" },
          { "size": "word", "name": "buttonStatus", "description": "Device's button status" }
        ]
      },
      "errors": ["none"],
      "c": { "call": false },
      "docs": [
        { "ref": "tbv1", "page": "7-34" }
      ]
    },
    {
      "toolcall": "1A",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "SetAutoKeyLimit",
      "description": "Controls how repeated keystrokes are inserted into the event queue",
      "parameters": {
        "input": [
          { "size": "word", "name": "newLimit", "description": "Limit for inserted auto-key events" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetAutoKeyLimit(newLimit)" },
      "docs": [
        { "ref": "tbv3", "page": "31-6" }
      ]
    },
    {
      "toolcall": "1B",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "GetKeyTranslation",
      "description": "Returns the identifier for the currently selected keystroke translation table",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" }
        ],
        "output": [
          { "size": "word", "name": "kTransID", "description": "Keyboard translation identifier ($0000 to $00FF)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word GetKeyTranslation()" },
      "docs": [
        { "ref": "tbv3", "page": "31-5" }
      ]
    },
    {
      "toolcall": "1C",
      "toolnum": "06",
      "toolname": "Event Manager",
      "callname": "SetKeyTranslation",
      "description": "Sets a new keystroke translation table",
      "parameters": {
        "input": [
          { "size": "word", "name": "kTransID", "description": "Keyboard translation identifier (low-order byte)" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal void SetKeyTranslation(kTransID)" },
      "docs": [
        { "ref": "tbv3", "page": "31-7" }
      ]
    },
    {
      "toolcall": "01",
      "toolnum": "07",
      "toolname": "Scheduler",
      "callname": "SchBootInit",
      "description": "Initializes the Scheduler; called only by Tool Locator - not called by application"
    },
    {
      "toolcall": "02",
      "toolnum": "07",
      "toolname": "Scheduler",
      "callname": "SchStartUp",
      "description": "Starts up the Scheduler for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "07",
      "toolname": "Scheduler",
      "callname": "SchShutDown",
      "description": "Shuts down the Scheduler when an application quits"
    },
    {
      "toolcall": "04",
      "toolnum": "07",
      "toolname": "Scheduler",
      "callname": "SchVersion",
      "description": "Returns the version number of the Scheduler"
    },
    {
      "toolcall": "05",
      "toolnum": "07",
      "toolname": "Scheduler",
      "callname": "SchReset",
      "description": "Resets the Scheduler; called only when system is reset - not by application"
    },
    {
      "toolcall": "06",
      "toolnum": "07",
      "toolname": "Scheduler",
      "callname": "SchStatus",
      "description": "Indicates whether the Scheduler is active"
    },
    {
      "toolcall": "09",
      "toolnum": "07",
      "toolname": "Scheduler",
      "callname": "SchAddTask",
      "description": "Adds a task to the Scheduler queue"
    },
    {
      "toolcall": "0A",
      "toolnum": "07",
      "toolname": "Scheduler",
      "callname": "SchFlush",
      "description": "Flushes all tasks in the Scheduler queue - must not be called by an application"
    },
    {
      "toolcall": "01",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "SoundBootInit",
      "description": "Initializes the Sound Tool Set; called only by Tool Locator (not by application)"
    },
    {
      "toolcall": "02",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "SoundStartUp",
      "description": "Starts up the Sound Tool Set for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "SoundShutDown",
      "description": "Shuts down the Sound Tool Set when an application quits"
    },
    {
      "toolcall": "04",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "SoundVersion",
      "description": "Returns the version number of the Sound Tool Set"
    },
    {
      "toolcall": "05",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "SoundReset",
      "description": "Resets the Sound Tool Set; called only on reset - not by application"
    },
    {
      "toolcall": "06",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "SoundToolStatu",
      "description": "Indicates whether the Sound Tool Set is active"
    },
    {
      "toolcall": "09",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "WriteRamBlock",
      "description": "Writes a spec number of bytes from system RAM into DOC RAM"
    },
    {
      "toolcall": "0A",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "ReadRamBlock",
      "description": "Reads a specified number of bytes from DOC RAM into system RAM"
    },
    {
      "toolcall": "0B",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "GetTableAddres",
      "description": "Returns the jump table address for the low-level routines"
    },
    {
      "toolcall": "0C",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "GetSoundVolume",
      "description": "Reads the volume setting for a generator"
    },
    {
      "toolcall": "0D",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "SetSoundVolume",
      "description": "Changes volume setting for the volume registers in the DOC or changes system volume"
    },
    {
      "toolcall": "0E",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "FFStartSound",
      "description": "Enables the DOC to start generating sound on a particular generator"
    },
    {
      "toolcall": "0F",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "FFStopSound",
      "description": "Halts any specified sound generators that are generating sound"
    },
    {
      "toolcall": "10",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "FFSoundStatus",
      "description": "Returns the status of all 15 sound generators"
    },
    {
      "toolcall": "11",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "FFGeneratorSta",
      "description": "Reads the first two bytes of the generator control block corresponding to a spec generator"
    },
    {
      "toolcall": "12",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "SetSoundMIRQV",
      "description": "Sets up the entry point into the sound-interrupt handler"
    },
    {
      "toolcall": "13",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "SetUserSoundIR",
      "description": "Sets up the entry point for an application-defined synthesizer interrupt handler"
    },
    {
      "toolcall": "14",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "FFSoundDoneSta",
      "description": "Returns the current Free-Form Synthesizer playing status"
    },
    {
      "toolcall": "15",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "FFSetUpSound",
      "description": "Identical to the FFStartSound tool call but does not actually start playing the specified sound"
    },
    {
      "toolcall": "16",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "FFStartPlaying",
      "description": "Starts playing the sound specified by the FF s e t UpSound tool call on a specified set of generators"
    },
    {
      "toolcall": "17",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "SetDOCReg",
      "description": "Sets the DOC registers for a generator's oscillator from register contents stored in a special format"
    },
    {
      "toolcall": "18",
      "toolnum": "08",
      "toolname": "Sound Tool Set",
      "callname": "ReadDOCReg",
      "description": "Reads the DOC registers for a generator's oscillator and stores them in the target memory location"
    },
    {
      "toolcall": "01",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "ADBBootInit",
      "description": "Initializes the ADB Tool Set; called only by Tool Locator (not by application)"
    },
    {
      "toolcall": "02",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "ADBStartUp",
      "description": "Starts up the ADB Tool Set"
    },
    {
      "toolcall": "03",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "ADBShutDown",
      "description": "Shuts down the ADB Tool Set"
    },
    {
      "toolcall": "04",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "ADBVersion",
      "description": "Returns the version number of the ADB Tool Set"
    },
    {
      "toolcall": "05",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "ADBReset",
      "description": "Resets the ADB Tool Set; called only on system reset - not by application"
    },
    {
      "toolcall": "06",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "ADBStatus",
      "description": "Indicates whether the ADB Tool Set is active"
    },
    {
      "toolcall": "09",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "SendInfo",
      "description": "Sends data to the keyboard microcontroller or to an ADB device"
    },
    {
      "toolcall": "0A",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "ReadKeyMicroDa",
      "description": "Receives data from the keyboard microcontroller"
    },
    {
      "toolcall": "0B",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "ReadKeyMicroMe",
      "description": "Reads a data byte from the keyboard microcontroller memory"
    },
    {
      "toolcall": "0D",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "AsyncADBReceiv",
      "description": "Receives data from an ADB device"
    },
    {
      "toolcall": "0E",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "SyncADBReceive",
      "description": "Receives data from an ADB device"
    },
    {
      "toolcall": "0F",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "AbsOn",
      "description": "Enables automatic polling of an absolute device (reserved for future use)"
    },
    {
      "toolcall": "10",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "AbsOff",
      "description": "Disables automatic polling of an absolute device (reserved for future use)"
    },
    {
      "toolcall": "11",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "ReadAbs",
      "description": "Determines whether automatic polling of an absolute device is on or off"
    },
    {
      "toolcall": "12",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "GetAbsScale",
      "description": "Reads absolute device scaling values (reserved for future use)"
    },
    {
      "toolcall": "13",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "SetAbsScale",
      "description": "Sets up scaling for absolute devices (reserved for future use)"
    },
    {
      "toolcall": "14",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "SRQPoll",
      "description": "Adds a device to the SRQ list"
    },
    {
      "toolcall": "15",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "SRQRemove",
      "description": "Removes a device previously installed by the SRQPoll routine from the SRQ list"
    },
    {
      "toolcall": "16",
      "toolnum": "09",
      "toolname": "ADB Tools",
      "callname": "ClearSRQTable",
      "description": "Clears the SRQ list of all entries"
    },
    {
      "toolcall": "01",
      "toolnum": "0A",
      "toolname": "SANE",
      "callname": "SANEBootInit",
      "description": "Initializes the SANE Tool Set; called only by Tool Locator (not by application)"
    },
    {
      "toolcall": "02",
      "toolnum": "0A",
      "toolname": "SANE",
      "callname": "SANEStartup",
      "description": "Starts up the SANE Tool Set for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "0A",
      "toolname": "SANE",
      "callname": "SANEShutDown",
      "description": "Shuts down the SANE Tool Set when application quits"
    },
    {
      "toolcall": "04",
      "toolnum": "0A",
      "toolname": "SANE",
      "callname": "SANEVersion",
      "description": "Returns the version number of the SANE Tool Set"
    },
    {
      "toolcall": "05",
      "toolnum": "0A",
      "toolname": "SANE",
      "callname": "SANEReset",
      "description": "Resets the SANE Tool Set; called only on system reset - not by application"
    },
    {
      "toolcall": "06",
      "toolnum": "0A",
      "toolname": "SANE",
      "callname": "SANEStatus",
      "description": "Indicates whether the SANE Tool Set is active"
    },
    {
      "toolcall": "09",
      "toolnum": "0A",
      "toolname": "SANE",
      "callname": "SANEFP816",
      "description": "Contains basic arithmetic ops, comparisions, conversions, environ. control, & IEEE ops"
    },
    {
      "toolcall": "0A",
      "toolnum": "0A",
      "toolname": "SANE",
      "callname": "SANEDecStr816",
      "description": "Contains numeric scanners and formatters"
    },
    {
      "toolcall": "0B",
      "toolnum": "0A",
      "toolname": "SANE",
      "callname": "SANEElems816",
      "description": "Contains elementary functions, financial functions, and a random-number generator"
    },
    {
      "toolcall": "01",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "IMBootInit",
      "description": "Initializes the Integer Math Tool Set; called only by Tool Locator (not by application)"
    },
    {
      "toolcall": "02",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "IMStartUp",
      "description": "Starts up the Integer Math Tool Set for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "IMShutDown",
      "description": "Shuts down the Integer Math Tool Set when application quits"
    },
    {
      "toolcall": "04",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "IMVersion",
      "description": "Returns the version number of the Integer Math Tool Set"
    },
    {
      "toolcall": "05",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "IMReset",
      "description": "Resets the Integer Math Tool Set; called only on system reset - not by application"
    },
    {
      "toolcall": "06",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "IMStatus",
      "description": "Indicates whether the Integer Math Tool Set is active"
    },
    {
      "toolcall": "09",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Multiply",
      "description": "Multiplies two Integer inputs and produces a Longint result"
    },
    {
      "toolcall": "0A",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "SDivide",
      "description": "Divides two Integers & produces a signed Integer quotient & a signed Integer remainder"
    },
    {
      "toolcall": "0B",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "UDivide",
      "description": "Divides two unsigned Integer inputs & produces an Int quotient & an unsigned int remainder"
    },
    {
      "toolcall": "0C",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "LongMul",
      "description": "Multiplies two Longint values & produces a 64-bit result"
    },
    {
      "toolcall": "0D",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "LongDivide",
      "description": "Divides two unsgn Longint inputs & produces a Longint unsgn quot & a Longint unsgn remain"
    },
    {
      "toolcall": "0E",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "FixRatio",
      "description": "Takes 2 signed Integers & produces a Fixed number as ratio of the numerator & denominator"
    },
    {
      "toolcall": "0F",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "FixMul",
      "description": "Multiplies two 32-bit Fixed inputs and produces a 32-bit Fixed result"
    },
    {
      "toolcall": "10",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "FracMul",
      "description": "Multiplies two Frac inputs and returns a rounded Frac result"
    },
    {
      "toolcall": "11",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "FixDiv",
      "description": "Divides two like inputs and returns a rounded Fixed result (no remainder)"
    },
    {
      "toolcall": "12",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "FracDiv",
      "description": "Divides two like inputs and returns a rounded Frac result (no remainder)"
    },
    {
      "toolcall": "13",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "FixRound",
      "description": "Takes a Fixed input and returns a rounded Integer result"
    },
    {
      "toolcall": "14",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "FracSqrt",
      "description": "Takes a Frac input and returns a rounded Frac square root"
    },
    {
      "toolcall": "15",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "FracCos",
      "description": "Takes a Fixed input (in radians) and returns its Frac cosine"
    },
    {
      "toolcall": "16",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "FracSin",
      "description": "Takes a Fixed input (in radians) and returns its Frac sine"
    },
    {
      "toolcall": "17",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "FixAtan2",
      "description": "Takes two like inputs & returns a Fixed arc tangent (in radians) of their coordinates"
    },
    {
      "toolcall": "18",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "HiWord",
      "description": "Returns high-order word of a Long input"
    },
    {
      "toolcall": "19",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "LoWord",
      "description": "Returns low-order word of a long inpuot"
    },
    {
      "toolcall": "1A",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Long2Fix",
      "description": "Converts a specified Longint value to its corresponding Fixed value"
    },
    {
      "toolcall": "1B",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Fix2Long",
      "description": "Converts a Fixed value to its corresponding Longint value"
    },
    {
      "toolcall": "1C",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Fix2Frac",
      "description": "Converts a Fixed value to its corresponding Frac value"
    },
    {
      "toolcall": "1D",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Frac2Fix",
      "description": "Converts a specifed Frac value to its corresponding Fixed value"
    },
    {
      "toolcall": "1E",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Fix2X",
      "description": "Converts a Fixed value to its corresponding Extended value"
    },
    {
      "toolcall": "1F",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Frac2X",
      "description": "Converts a specified Frac value to its corresponding Extended value"
    },
    {
      "toolcall": "20",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "X2Fix",
      "description": "Converts an Extended value to its corresponding Fixed value"
    },
    {
      "toolcall": "21",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "X2Frac",
      "description": "Converts an Extended value to its corresponding Frac value"
    },
    {
      "toolcall": "22",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Int2Hex",
      "description": "Takes unsigned int & produces an IM string representing the value in hexadecimal format"
    },
    {
      "toolcall": "23",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Long2Hex",
      "description": "Takes unsigned Longint value & produces an IM string representing the value in hex format"
    },
    {
      "toolcall": "24",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Hex2Int",
      "description": "Takes an Integer Math string representing a hex value & returns an unsigned integer"
    },
    {
      "toolcall": "25",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Hex2Long",
      "description": "Takes Integer Math string representing a hex value & returns an unsigned Longint"
    },
    {
      "toolcall": "26",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Int2Dec",
      "description": "Takes signed or unsigned integer & produces IM string representing value in decimal format"
    },
    {
      "toolcall": "27",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Long2Dec",
      "description": "Takes signed/unsigned Longint value & produces IM str representing val in decimal format"
    },
    {
      "toolcall": "28",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Dec2Int",
      "description": "Takes Integer Math string representing a decimal value & returns a signed/unsigned integer"
    },
    {
      "toolcall": "29",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Dec2Long",
      "description": "Takes Integer Math string representing a decimal value & produces a Longint value"
    },
    {
      "toolcall": "2A",
      "toolnum": "0B",
      "toolname": "Integer Math",
      "callname": "Hexit",
      "description": "Takes unsigned integer & returns a 4-byte Int Math string representing value in hex format"
    },
    {
      "toolcall": "01",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "TextBootInit",
      "description": "Initializes the Text Tool Set; called only by Tool Locator"
    },
    {
      "toolcall": "02",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "TextStartUp",
      "description": "Starts up the Text Tool Set for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "TextShutDown",
      "description": "Shuts down the Text Tool Set when an application quits"
    },
    {
      "toolcall": "04",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "TextVersion",
      "description": "Returns the version number of the Text Tool Set"
    },
    {
      "toolcall": "05",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "TextReset",
      "description": "Resets the Text Tool Set; called only when the system is reset"
    },
    {
      "toolcall": "06",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "TextStatus",
      "description": "Indicates whether the Text Tools Set is active"
    },
    {
      "toolcall": "09",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "SetInGlobals",
      "description": "Sets the global parameters for the input device"
    },
    {
      "toolcall": "0A",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "SetOutGlobals",
      "description": "Sets the global parameters for the output device"
    },
    {
      "toolcall": "0B",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "SetErrGlobals",
      "description": "Sets the global parameters for the error output device"
    },
    {
      "toolcall": "0C",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "GetInGlobals",
      "description": "Returns the current values for the input device global parameters"
    },
    {
      "toolcall": "0D",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "GetOutGlobals",
      "description": "Returns the current values for the output device global parameters"
    },
    {
      "toolcall": "0E",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "GetErrGlobals",
      "description": "Returns the current values for the error output device global parameters"
    },
    {
      "toolcall": "0F",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "SetInputDevice",
      "description": "Sets the input device to a specified type and location"
    },
    {
      "toolcall": "10",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "SetOutputDevic",
      "description": "Sets the output device to a specified type and location"
    },
    {
      "toolcall": "11",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "SetErrorDevice",
      "description": "Sets the error output device to a specified type and location"
    },
    {
      "toolcall": "12",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "GetInputDevice",
      "description": "Returns the type of driver installed as the input device"
    },
    {
      "toolcall": "13",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "GetOutputDevic",
      "description": "Returns the type of driver installed as the output device"
    },
    {
      "toolcall": "14",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "GetErrorDevice",
      "description": "Returns the type of driver installed as the error output device"
    },
    {
      "toolcall": "15",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "InitTextDev",
      "description": "Initializes a specified text device"
    },
    {
      "toolcall": "16",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "CtlTextDev",
      "description": "Passes a control code to a specified text device"
    },
    {
      "toolcall": "17",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "StatusTextDev",
      "description": "Executes a status call to a specified text device"
    },
    {
      "toolcall": "18",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "WriteChar",
      "description": "Combines a character with output global AND & OR mask & writes to output device"
    },
    {
      "toolcall": "19",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "ErrWriteChar",
      "description": "Combines a character with output global AND & OR mask & writes to error output text device"
    },
    {
      "toolcall": "1A",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "WriteLine",
      "description": "Combines pointed-to Pascal-type string with out global mask, + CR, then output"
    },
    {
      "toolcall": "1B",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "ErrWriteLine",
      "description": "Combines pointed-to Pascal-type string with outpt global masks & write to err out"
    },
    {
      "toolcall": "1C",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "WriteString",
      "description": "Combines a pointed-to Pascal-type string with outpt global masks & write to out device"
    },
    {
      "toolcall": "1D",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "ErrWriteString",
      "description": "Combines a pointed-to Pascal-type string with outpt global masks & write to err out"
    },
    {
      "toolcall": "1E",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "TextWriteBlock",
      "description": "Combines a char string with output global masks & writes to output text device"
    },
    {
      "toolcall": "1F",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "ErrWriteBlock",
      "description": "Combines a char string with output global masks & write to err out"
    },
    {
      "toolcall": "20",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "WriteCString",
      "description": "Combines a pointed-to C string with output global masks & write to output txt device"
    },
    {
      "toolcall": "21",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "ErrWriteCStrin",
      "description": "Combines a pointed-to C string with output global masks & write to err output txt dvc"
    },
    {
      "toolcall": "22",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "ReadChar",
      "description": "Reads a char from input text device, combines with input global mask, & puts char on stack"
    },
    {
      "toolcall": "23",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "TextReadBlock",
      "description": "Reads char block from input txt device, combines w/input global mask & writes to mem loc"
    },
    {
      "toolcall": "24",
      "toolnum": "0C",
      "toolname": "Text Tools",
      "callname": "ReadLine",
      "description": "Reads char string from input txt device, combines w/input global mask, & writes to mem loc"
    },
    {
      "toolcall": "01",
      "toolnum": "0D",
      "toolname": "RAMDisk Tool",
      "callname": "RDBootInit",
      "description": "Initializes the RAMDisk Tool set; called only by Memory Manager - not by application"
    },
    {
      "toolcall": "01",
      "toolnum": "0D",
      "toolname": "RAMDisk Tool",
      "callname": "RDBootInit",
      "description": "Initializes the RAMDisk Tool set; called only by Memory Manager - not by application"
    },
    {
      "toolcall": "02",
      "toolnum": "0D",
      "toolname": "RAMDisk Tool",
      "callname": "RDStartUp",
      "description": "Starts up the RAMDisk Tool set"
    },
    {
      "toolcall": "03",
      "toolnum": "0D",
      "toolname": "RAMDisk Tool",
      "callname": "RDShutDown",
      "description": "Shuts down the RAMDisk Tool set"
    },
    {
      "toolcall": "04",
      "toolnum": "0D",
      "toolname": "RAMDisk Tool",
      "callname": "RDVersion",
      "description": "Returns the version of the RAMDisk Tool set"
    },
    {
      "toolcall": "05",
      "toolnum": "0D",
      "toolname": "RAMDisk Tool",
      "callname": "RDReset",
      "description": "Resets the RAMDisk Tool set - not by application"
    },
    {
      "toolcall": "06",
      "toolnum": "0D",
      "toolname": "RAMDisk Tool",
      "callname": "RDStatus",
      "description": "Indicates whether the RAMDisk Tool set is active"
    },
    {
      "toolcall": "09",
      "toolnum": "0D",
      "toolname": "RAMDisk Tool",
      "callname": "Kill",
      "description": "This routine does nothing"
    },
    {
      "toolcall": "0A",
      "toolnum": "0D",
      "toolname": "RAMDisk Tool",
      "callname": "RDExecPCCmd",
      "description": "This routine executes normal or extended SmartPort commands, using data from the zero page"
    },
    {
      "toolcall": "0B",
      "toolnum": "0D",
      "toolname": "RAMDisk Tool",
      "callname": "RDSetDiskSize",
      "description": "This routine does nothing"
    },
    {
      "toolcall": "0C",
      "toolnum": "0D",
      "toolname": "RAMDisk Tool",
      "callname": "RDGetDiskSize",
      "description": "This routine returns the current size of the RAMDisk in bytes"
    },
    {
      "toolcall": "01",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "WindBootInit",
      "description": "Initializes the Window Manager; called only by Tool Locator - not by application"
    },
    {
      "toolcall": "02",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "WindStartUp",
      "description": "Starts up the Window Manager for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "WindShutDown",
      "description": "Shuts down the Window Manager when an application quits"
    },
    {
      "toolcall": "04",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "WindVersion",
      "description": "Returns the version number of the Window Manager"
    },
    {
      "toolcall": "05",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "WindReset",
      "description": "Resets the Window Manager; called only when system reset - not by application"
    },
    {
      "toolcall": "06",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "WindStatus",
      "description": "Indicates whether the Window Manager is active"
    },
    {
      "toolcall": "09",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "NewWindow",
      "description": "Creates spec window per its params, adds to window list, returns ptr to new wndw GrafPort"
    },
    {
      "toolcall": "0A",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "CheckUpdate",
      "description": "Looks from top to bottom in window list for visible window that needs updating"
    },
    {
      "toolcall": "0B",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "CloseWindow",
      "description": "Removes spec window from scrn, disposes all ctrls assoc w/window, deletes window from list"
    },
    {
      "toolcall": "0C",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "DeskTop",
      "description": "Controls region addition to & subtraction from desktop & ctrls current desktop pattern"
    },
    {
      "toolcall": "0D",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetWTitle",
      "description": "Changes the title of a specified window to a spec title and redraw the window"
    },
    {
      "toolcall": "0E",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetWTitle",
      "description": "Returns the pointer to a specified window's title"
    },
    {
      "toolcall": "0F",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetFrameColor",
      "description": "Sets the color of a specified window's frame"
    },
    {
      "toolcall": "10",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetFrameColor",
      "description": "Returns the color of a specifed window's frame"
    },
    {
      "toolcall": "11",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SelectWindow",
      "description": "Makes a specified window the active window"
    },
    {
      "toolcall": "12",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "HideWindow",
      "description": "Makes a specified window invisible"
    },
    {
      "toolcall": "13",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "ShowWindow",
      "description": "Makes a specified window visible if it was invisible and then draws the window"
    },
    {
      "toolcall": "14",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SendBehind",
      "description": "Changes position of a specified window, redrawing any exposed windows"
    },
    {
      "toolcall": "15",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "FrontWindow",
      "description": "Returns a ptr to the first visible window in the windows list (that is, the active window)"
    },
    {
      "toolcall": "16",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetInfoDraw",
      "description": "Sets pointer to routine that draws information bar for specified window"
    },
    {
      "toolcall": "17",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "FindWindow",
      "description": "Indicates which part of which window, if any, cursor was in when mouse button was pressed"
    },
    {
      "toolcall": "18",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "TrackGoAway",
      "description": "Tracks mouse until bttn released, hi-lighting go-away region if mouse loc is inside it"
    },
    {
      "toolcall": "19",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "MoveWindow",
      "description": "Moves a specified window to another part of the screen without affecting its size"
    },
    {
      "toolcall": "1A",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "DragWindow",
      "description": "Pulls around dotted outln of spec window, following movements of mouse until bttn released"
    },
    {
      "toolcall": "1B",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GrowWindow",
      "description": "Pulls around grow image of spec window, following movements of mouse until bttn released"
    },
    {
      "toolcall": "1C",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SizeWindow",
      "description": "Enlarges or shrinks port rectangle of spec window's GrafPort to a spec width & height"
    },
    {
      "toolcall": "1D",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "TaskMaster",
      "description": "Calls GetNextEvent & looks in event part of task record to see if it can handle the event"
    },
    {
      "toolcall": "1E",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "BeginUpdate",
      "description": "Replaces visible region of window's GrafPort with intersection of visible & update region"
    },
    {
      "toolcall": "1F",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "EndUpdate",
      "description": "Restores normal visible region of spec window's GrafPort that was changed by BeginUpdate"
    },
    {
      "toolcall": "20",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetWMgrPort",
      "description": "Returns a pointer to the Window Manager's port"
    },
    {
      "toolcall": "21",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "PinRect",
      "description": "Pins a specified point inside a specified rectangle"
    },
    {
      "toolcall": "22",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "HiliteWindow",
      "description": "Highlights or unhighlights a specified window"
    },
    {
      "toolcall": "23",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "ShowHide",
      "description": "Shows or hides a window"
    },
    {
      "toolcall": "24",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "BringToFront",
      "description": "Brings spec window to front of all windows & redraws windows as necessary (no highlight)"
    },
    {
      "toolcall": "25",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "WindNewRes",
      "description": "Closes Window Manager's GrafPort & opens new GrafPort in the other SHR resolution"
    },
    {
      "toolcall": "26",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "TrackZoom",
      "description": "Tracks mouse until bttn released, hi-lighting zoom region if mouse location is inside it"
    },
    {
      "toolcall": "27",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "ZoomWindow",
      "description": "Switches size & position of spec window between its current size & pos & its max size"
    },
    {
      "toolcall": "28",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetWRefCon",
      "description": "Sets value that is inside spec window record & is reserved for the application's use"
    },
    {
      "toolcall": "29",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetWRefCon",
      "description": "Returns value from spec window's record that was passed to either NewWindow or SetWRefCon"
    },
    {
      "toolcall": "2A",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetNextWindow",
      "description": "Returns ptr to next window in window list after spec window; NIL if last window in list"
    },
    {
      "toolcall": "2B",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetWKind",
      "description": "Indicates whether a spec window is a system window or an application window"
    },
    {
      "toolcall": "2C",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetWFrame",
      "description": "Returns the bit flag that describes a specified window's frame type"
    },
    {
      "toolcall": "2D",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetWFrame",
      "description": "Sets the bit flag that describes a specified window's frame type"
    },
    {
      "toolcall": "2E",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetStructRgn",
      "description": "Returns a handle to a specified window's structure region"
    },
    {
      "toolcall": "2F",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetContentRgn",
      "description": "Returns a handle to a specified window's content region"
    },
    {
      "toolcall": "30",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetUpdateRgn",
      "description": "Returns a handle to a specified window's update region"
    },
    {
      "toolcall": "31",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetDefProc",
      "description": "Returns ptr to routine that's called to draw, hit test, & define window's frame & behavior"
    },
    {
      "toolcall": "32",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetDefProc",
      "description": "Sets ptr to routine that's called to draw, hit test, & define window's frame & behavior"
    },
    {
      "toolcall": "33",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetWControls",
      "description": "Returns the handle to the first control in the window's control list"
    },
    {
      "toolcall": "34",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetOriginMask",
      "description": "Specifies the mask used to put the horizontal origin on a grid"
    },
    {
      "toolcall": "35",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetInfoRefCon",
      "description": "Returns value associated with the draw information bar routine for a spec window"
    },
    {
      "toolcall": "36",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetInfoRefCon",
      "description": "Sets value associated with the draw information bar routine for a spec window"
    },
    {
      "toolcall": "37",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetZoomRect",
      "description": "Returns ptr to rectangle used as content's zoomed or unzoomed size for a specified window"
    },
    {
      "toolcall": "38",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetZoomRect",
      "description": "Sets rectangle to be used as content's zoomed or unzoomed size for a specified window"
    },
    {
      "toolcall": "39",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "RefreshDesktop",
      "description": "Redraws the entire desktop and all the windows"
    },
    {
      "toolcall": "3A",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "InvalRect",
      "description": "Accumulates spec rectangle into update region of window whose GrafPort is current port"
    },
    {
      "toolcall": "3B",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "InvalRgn",
      "description": "Accumulates spec region into update region of window whose GrafPort is current port"
    },
    {
      "toolcall": "3C",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "ValidRect",
      "description": "Removes spec rectangle from update region of current GrafPort window & cancels updates"
    },
    {
      "toolcall": "3D",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "ValidRgn",
      "description": "Removes spec region from update region of current GrafPort window & cancels updates"
    },
    {
      "toolcall": "3E",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetContentOrig",
      "description": "Returns value used by TaskMaster to set origin of window's GrafPort when update event"
    },
    {
      "toolcall": "3F",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetContentOrig",
      "description": "Sets the origin of the window's GrafPort when handling an update event"
    },
    {
      "toolcall": "40",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetDataSize",
      "description": "Returns the height and width of the data area of a specified window"
    },
    {
      "toolcall": "41",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetDataSize",
      "description": "Sets the height and width of the data area of a specifed window"
    },
    {
      "toolcall": "42",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetMaxGrow",
      "description": "Returns the maximum values to which a spec window's content region can grow"
    },
    {
      "toolcall": "43",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetMaxGrow",
      "description": "Sets the maximum values to which a spec window's content region can grow"
    },
    {
      "toolcall": "44",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetScroll",
      "description": "Returns # pixels that TaskMaster will scroll content region when arrow scroll bar selected"
    },
    {
      "toolcall": "45",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetScroll",
      "description": "Sets # of pixels that TaskMaster will scroll content region when arrow scroll bar selected"
    },
    {
      "toolcall": "46",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetPage",
      "description": "Returns # of pixels that TaskMaster will scroll content region when selected on scroll bar"
    },
    {
      "toolcall": "47",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetPage",
      "description": "Sets # of pixels that TaskMaster will scroll content region when selected on scroll bar"
    },
    {
      "toolcall": "48",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetContentDraw",
      "description": "Returns pointer to routine that draws content region of a specified window"
    },
    {
      "toolcall": "49",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetContentDraw",
      "description": "Sets pointer to routine that draws content region of a specified window"
    },
    {
      "toolcall": "4A",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetInfoDraw",
      "description": "Returns pointer to routine that draws information bar for specified window"
    },
    {
      "toolcall": "4B",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetSysWindow",
      "description": "Marks a specified window as a system window"
    },
    {
      "toolcall": "4C",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetSysWFlag",
      "description": "Indicate whether a specified window is a a system or an application window"
    },
    {
      "toolcall": "4D",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "StartDrawing",
      "description": "Makes a specified window the current port and sets its origin"
    },
    {
      "toolcall": "4E",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetWindowIcons",
      "description": "Sets the icon font for the Window Manager"
    },
    {
      "toolcall": "4F",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetRectInfo",
      "description": "Sets information rectangle to coordinates of the information bar rectangle"
    },
    {
      "toolcall": "50",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "StartInfoDrawi",
      "description": "Allows application to draw or hit test outside of information bar definition procedure"
    },
    {
      "toolcall": "51",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "EndInfoDrawing",
      "description": "Puts the Window Manager back into a global coordinate system"
    },
    {
      "toolcall": "52",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetFirstWindow",
      "description": "Returns pointer to first window in the window list (window may not be the active window)"
    },
    {
      "toolcall": "53",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "WindDragRect",
      "description": "Pulls dotted outln of spec rectangle around scrn, follown mvmnts of mouse til btn released"
    },
    {
      "toolcall": "54",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetDragRect",
      "description": "Returns the address of the internal DragRect routine"
    },
    {
      "toolcall": "55",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "DrawInfoBar",
      "description": "Redraws the info bar of the window specified by grafPortPtr"
    },
    {
      "toolcall": "56",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "WindowGlobal",
      "description": "Spec a mask that determines how Window Manager performs tasks & retuns windowGlobalFlag"
    },
    {
      "toolcall": "57",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "SetContentOrig",
      "description": "Sets origin of windows GrafPort when hndlng updt event & ctrls scrolling of content region"
    },
    {
      "toolcall": "58",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetWindowMgrGl",
      "description": "Returns a pointer to the Window Manager global data area - call not made by application"
    },
    {
      "toolcall": "59",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "AlertWindow",
      "description": "Creates an alert window that displays a message pointed to by alertStrPtr",
      "parameters": {
        "input": [
          { "size": "word", "name": "wordspace", "description": "Space for result" },
          { "size": "word", "name": "alertFlags", "description": "Flag word for call" },
          { "size": "long", "name": "subStrPtr", "description": "POINTER to substitution array" },
          { "size": "long", "name": "alertStrRef", "description": "Reference to alert string; alertFlags indicates type" }

        ],
        "output": [
          { "size": "word", "name": "result", "description": "Button number selected (0 relative, in order created" }
        ]
      },
      "errors": ["none"],
      "c": { "call": "extern pascal Word AlertWindow(alertFlags, subStrPtr, alertStrRef)" },
      "docs": [{ "ref": "tbv3", "page": "52-21" }]
    },
    {
      "toolcall": "5A",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "StartFrameDraw",
      "description": "Sets up to draw a window frame - should be called only be window definition procedures"
    },
    {
      "toolcall": "5B",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "EndFrameDrawin",
      "description": "Restores Window Manager variables after a call to StartFrameDrawing"
    },
    {
      "toolcall": "5C",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "ResizeWindow",
      "description": "Moves, resizes, & draws the window specified by grafPortPtr"
    },
    {
      "toolcall": "5D",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "TaskMasterCont",
      "description": "Internal routine that handles events inside the content region of a window"
    },
    {
      "toolcall": "5E",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "TaskMasterKey",
      "description": "Internal routine that handles keystroke events inside the content region of a window"
    },
    {
      "toolcall": "5F",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "TaskMaskerDA",
      "description": "This call is the TaskMaster entry point for desk accessories"
    },
    {
      "toolcall": "60",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "CompileText",
      "description": "Combines source text with either custom or standard strings to compile a result text string"
    },
    {
      "toolcall": "61",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "NewWindow2",
      "description": "Performs the same function as NewWindow but allows the input window template as a resource"
    },
    {
      "toolcall": "62",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "ErrorWindow",
      "description": "Creates a dialog box displaying an error message for a specified error code"
    },
    {
      "toolcall": "63",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "GetAuxWindInfo",
      "description": "Returns a pointer to a block of auxiliary data for a specified window"
    },
    {
      "toolcall": "64",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "DoModalWindow",
      "description": "Handles user interaction in a window containing extended controls"
    },
    {
      "toolcall": "65",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "MWGetCtlPart",
      "description": "Returns the part code from any TrackControl call made by the most recent DoModalWindow call"
    },
    {
      "toolcall": "66",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "MWSetMenuProc",
      "description": "Informs DoModalWindow of the address of a routine to be called when the frontmost window changes inside a DoModalWindow call"
    },
    {
      "toolcall": "67",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "MWStdDrawProc",
      "description": "MWStdDrawProc is what DoModalWindow calls to update a modal window if you do not supply your own update procedure"
    },
    {
      "toolcall": "68",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "MWSetUpEditMen",
      "description": "Sets the sate of the standard emenu items based on the frontmost window"
    },
    {
      "toolcall": "69",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "FindCursorCtl",
      "description": "Returns the handle for the control beneath a given point"
    },
    {
      "toolcall": "6A",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "ResizeInfoBar",
      "description": "Sets the vertical size of a standard window’s information bar"
    },
    {
      "toolcall": "6B",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "HandleDiskInse",
      "description": "Lets an application know about disks the user has inserted or ejected"
    },
    {
      "toolcall": "6C",
      "toolnum": "0E",
      "toolname": "Window Manager",
      "callname": "UpdateWindow",
      "description": "Updates the specified window"
    },
    {
      "toolcall": "01",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "MenuBootInit",
      "description": "Initializes the Menu Manager; called only by Tool Locator - not by application"
    },
    {
      "toolcall": "02",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "MenuStartUp",
      "description": "Starts up the Menu Manager for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "MenuShutDown",
      "description": "Shuts down the Menu Manager when an application quits"
    },
    {
      "toolcall": "04",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "MenuVersion",
      "description": "Returns the version number of the Menu Manager"
    },
    {
      "toolcall": "05",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "MenuReset",
      "description": "Resets the Menu Manager; called only when system reset - not by application"
    },
    {
      "toolcall": "06",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "MenuStatus",
      "description": "Indicates whether the Menu Manager is active"
    },
    {
      "toolcall": "09",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "MenuKey",
      "description": "Maps a character to the associated menu and item for that character"
    },
    {
      "toolcall": "0A",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetMenuBar",
      "description": "Returns the handle of the current menu bar"
    },
    {
      "toolcall": "0B",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "MenuRefresh",
      "description": "Attempts to refresh the screen"
    },
    {
      "toolcall": "0C",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "FlashMenuBar",
      "description": "Flashes the entire current menu bar"
    },
    {
      "toolcall": "0D",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "InsertMenu",
      "description": "Inserts a specified menu into the menu list after a spec menu item or at front of list"
    },
    {
      "toolcall": "0E",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "DeleteMenu",
      "description": "Removes a specified menu from the menu list"
    },
    {
      "toolcall": "0F",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "InsertMItem",
      "description": "Inserts a menu item into a menu after a specified menu item or at the front of the list"
    },
    {
      "toolcall": "10",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "DeleteMItem",
      "description": "Removes a specified item from the current menu"
    },
    {
      "toolcall": "11",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetSysBar",
      "description": "Returns the handle of the current system menu bar"
    },
    {
      "toolcall": "12",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetSysBar",
      "description": "Sets a new system bar; the system menu bar becomes the current menu bar"
    },
    {
      "toolcall": "13",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "FixMenuBar",
      "description": "Computes standard sizes for the menu bar and menus"
    },
    {
      "toolcall": "14",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "CountMItems",
      "description": "Returns the number of items, including any dividing lines, in a specified menu"
    },
    {
      "toolcall": "15",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "NewMenuBar",
      "description": "Creates a default menu bar with no menus"
    },
    {
      "toolcall": "16",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetMHandle",
      "description": "Returns a handle to a menu record"
    },
    {
      "toolcall": "17",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetBarColors",
      "description": "Sets the normal, inverse, and outline colors of the current menu bar"
    },
    {
      "toolcall": "18",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetBarColors",
      "description": "Returns the colors for the current menu bar"
    },
    {
      "toolcall": "19",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMTitleStart",
      "description": "Sets the starting position for the leftmost title within the current menu bar"
    },
    {
      "toolcall": "1A",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetMTitleStart",
      "description": "Returns the starting position of the leftmost title within the current menu bar"
    },
    {
      "toolcall": "1B",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetMenuMgrPort",
      "description": "Returns a pointer to the Menu Manager's port"
    },
    {
      "toolcall": "1C",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "CalcMenuSize",
      "description": "Sets menu dimensions, either manually or automatically"
    },
    {
      "toolcall": "1D",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMTitleWidth",
      "description": "Sets the width of a title"
    },
    {
      "toolcall": "1E",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetMTitleWidth",
      "description": "Returns the width of a menu title"
    },
    {
      "toolcall": "1F",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMenuFlag",
      "description": "Sets the menu to a specified state"
    },
    {
      "toolcall": "20",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetMenuFlag",
      "description": "Returns the menu flag for a specified menu"
    },
    {
      "toolcall": "21",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMenuTitle",
      "description": "Specifies the title for a menu"
    },
    {
      "toolcall": "22",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetMenuTitle",
      "description": "Returns a pointer to the title of a menu"
    },
    {
      "toolcall": "23",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "MenuGlobal",
      "description": "Turns menu help on/off or returns state of menu help; help user know inactive to active"
    },
    {
      "toolcall": "24",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMItem",
      "description": "Specifies the name for a menu item by pointing to an item line"
    },
    {
      "toolcall": "25",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetMItem",
      "description": "Returns a pointer to the name of an item"
    },
    {
      "toolcall": "26",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMItemFlag",
      "description": "Sets spec item number to be underlined or not underlined & sets the highlighting style"
    },
    {
      "toolcall": "27",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetMItemFlag",
      "description": "Returns values for a spec item, such as whether it is disabled, underlined or highlighted"
    },
    {
      "toolcall": "28",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMItemBlink",
      "description": "Determines how many times all menu items should blink when selected"
    },
    {
      "toolcall": "29",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "MenuNewRes",
      "description": "Adjusts screen resolution and redraws the current system menu bar"
    },
    {
      "toolcall": "2A",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "DrawMenuBar",
      "description": "Draws the current menu bar, along with any menu titles on the bar"
    },
    {
      "toolcall": "2B",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "MenuSelect",
      "description": "Draws hilighted titles, pulls down menus, & handles user interaction when mouse bttn click"
    },
    {
      "toolcall": "2C",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "HiliteMenu",
      "description": "Highlights or unhighlights the title of a specified menu"
    },
    {
      "toolcall": "2D",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "NewMenu",
      "description": "Allocates space for a menu list and its items"
    },
    {
      "toolcall": "2E",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "DisposeMenu",
      "description": "Frees the memory allocated by NewMenu"
    },
    {
      "toolcall": "2F",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "InitPalette",
      "description": "Reinitializes the palettes needed for the colored Apple logo in system menu bar"
    },
    {
      "toolcall": "30",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "EnableMItem",
      "description": "Sets a specified menu item to display normally and allows it to be selected"
    },
    {
      "toolcall": "31",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "DisableMItem",
      "description": "Sets spec menu item to display in dimmed characters & does not allow it to be selected"
    },
    {
      "toolcall": "32",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "CheckMItem",
      "description": "Sets spec menu item to display or to not display a check mark to the left of the item"
    },
    {
      "toolcall": "33",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMItemMark",
      "description": "Sets a spec menu item to display or to not display a spec character to the left of item"
    },
    {
      "toolcall": "34",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetMItemMark",
      "description": "Returns the current character that is displayed to the left of a specified menu item"
    },
    {
      "toolcall": "35",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMItemStyle",
      "description": "Sets the text style for a specified menu item"
    },
    {
      "toolcall": "36",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetMItemStyle",
      "description": "Returns the text style for a specified menu item"
    },
    {
      "toolcall": "37",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMenuID",
      "description": "Specifies a new menu number"
    },
    {
      "toolcall": "38",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMItemID",
      "description": "Specifies the ID number of a menu item"
    },
    {
      "toolcall": "39",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMenuBar",
      "description": "Sets the current menu bar"
    },
    {
      "toolcall": "3A",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMItemName",
      "description": "Specifies the aname of a menu item by pointing to a Pascal-type string"
    },
    {
      "toolcall": "3B",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetPopUpDefPro",
      "description": "Returns a pointer to the control definition procedure for pop-up menus"
    },
    {
      "toolcall": "3C",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "PopUpMenuSelec",
      "description": "Draws highlighted titles and handles user interaction when the user clicks on a pop-up menu"
    },
    {
      "toolcall": "3E",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "NewMenu2",
      "description": "Allocates space for a menu list and its items"
    },
    {
      "toolcall": "3F",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "InsertMitem2",
      "description": "Inserts an item into a menu after a specified menu item or at the top of the menu"
    },
    {
      "toolcall": "40",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMenuTitle2",
      "description": "Specifies the title of a menu"
    },
    {
      "toolcall": "41",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMitem2",
      "description": "Specifies the title of a menu item"
    },
    {
      "toolcall": "42",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetMitemName2",
      "description": "Specifies the name of a menu item"
    },
    {
      "toolcall": "43",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "NewMenuBar2",
      "description": "Creates a menu bar using a menu bar template as its input specification"
    },
    {
      "toolcall": "44",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetResMTitle",
      "description": "Returns pointer to the menu title"
    },
    {
      "toolcall": "45",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "HideMenuBar",
      "description": "Hides the system menu bar by adding the menu bar to the desktop region"
    },
    {
      "toolcall": "46",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "ShowMenuBar",
      "description": "Reveals the system menu bar by subtracting the menu bar from the desktop region"
    },
    {
      "toolcall": "47",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetItemIcon",
      "description": "ItemIconRef field in the itemStruct record for the menu item indicated"
    },
    {
      "toolcall": "48",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetItemIcon",
      "description": "Returns the reference to the icon associated with menu item indicated"
    },
    {
      "toolcall": "49",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetItemStruct",
      "description": "Sets the ItemTitleRef field of the item record to the reference for the itemStruct record passed"
    },
    {
      "toolcall": "4A",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetItemStruct",
      "description": "Returns the reference to the itemStruct record of the menu item specified"
    },
    {
      "toolcall": "4B",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "RemoveItemStru",
      "description": "Removes the itemStruct record from the item record"
    },
    {
      "toolcall": "4C",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetItemFlag2",
      "description": "Returns the itemfFag2 field for the itemStruct record associated with the menu item indicated"
    },
    {
      "toolcall": "4D",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "SetItemFlag2",
      "description": "Sets the itemFlag2 field for the itemStruct record of the indicated menu item to the value passed"
    },
    {
      "toolcall": "4E",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetItemWidth",
      "description": "Computes the default size of a specified menu item"
    },
    {
      "toolcall": "4F",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "GetMItemBlink",
      "description": "GetMItemBlink returns the current menu item blink setting, as set with SetMItemBlink"
    },
    {
      "toolcall": "50",
      "toolnum": "0F",
      "toolname": "Menu Manager",
      "callname": "InsertPathMIte",
      "description": "Takes a GS/OS pathname and inserts one menu item into the specified menu for each segment of the pathname"
    },
    {
      "toolcall": "01",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "CtlBootInit",
      "description": "Initializes the Control Manager; called only by Tool Locator (not application)"
    },
    {
      "toolcall": "02",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "CtlStartUp",
      "description": "Starts up the Control Manager for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "CtlShutDown",
      "description": "Shuts down the Control Manager"
    },
    {
      "toolcall": "04",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "CtlVersion",
      "description": "Returns the version number of the Control Manager"
    },
    {
      "toolcall": "05",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "CtlReset",
      "description": "Resets the Control Manager; called only on reset (not by application)"
    },
    {
      "toolcall": "06",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "CtlStatus",
      "description": "Indicates whether the Control Manager is active"
    },
    {
      "toolcall": "09",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "NewControl",
      "description": "Creates a ctrl, adds it to begin of spec. window's ctrl list, & returns handle to new ctrl"
    },
    {
      "toolcall": "0A",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "DisposeControl",
      "description": "Deletes a spec. ctrl & releases mem occupied by ctrl record & any data struct. w/the ctrl"
    },
    {
      "toolcall": "0B",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "KillControls",
      "description": "Disposes of all controls associated with a specified window"
    },
    {
      "toolcall": "0C",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "SetCtlTitle",
      "description": "Sets a specified control's title to a given string and redraws the control"
    },
    {
      "toolcall": "0D",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "GetCtlTitle",
      "description": "Returns value in spec ctrl's ctlData field, which, for ctrls w/titles, is ptr to title str"
    },
    {
      "toolcall": "0E",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "HideControl",
      "description": "Makes spec ctrl invisible by fillng region the ctrl occupies w/bkground pattern of grafprt"
    },
    {
      "toolcall": "0F",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "ShowControl",
      "description": "Makes a specified control visible"
    },
    {
      "toolcall": "10",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "DrawControls",
      "description": "Draws all controls currently visible in a specified window"
    },
    {
      "toolcall": "11",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "HiliteControl",
      "description": "Changes the way a specified control is highlighted"
    },
    {
      "toolcall": "12",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "CtlNewRes",
      "description": "Reinitializes resolution and mode"
    },
    {
      "toolcall": "13",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "FindControl",
      "description": "Tells in which of window's ctrls, if any, the cursor was in when user pressed mouse button"
    },
    {
      "toolcall": "14",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "TestControl",
      "description": "Tests which part of a specified control contains a specified point"
    },
    {
      "toolcall": "15",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "TrackControl",
      "description": "Follows mouse movements and responds appropriately until mouse button is released"
    },
    {
      "toolcall": "16",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "MoveControl",
      "description": "Moves a specified control to a new location within its window"
    },
    {
      "toolcall": "17",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "DragControl",
      "description": "Pulls dotted outln of ctrl around screen, following mvments of mouse till button released"
    },
    {
      "toolcall": "18",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "SetCtlIcons",
      "description": "Provides a handle to a specified new icon font"
    },
    {
      "toolcall": "19",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "SetCtlValue",
      "description": "Sets spec ctrl's ctlValue field to a spec value & redraws ctrl to reflect new setting"
    },
    {
      "toolcall": "1A",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "GetCtlValue",
      "description": "Returns a specified control's current ctlValue field"
    },
    {
      "toolcall": "1B",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "SetCtlParams",
      "description": "Sets new params in ctrl's def procedure, which will set values & redraw ctrl if necessary"
    },
    {
      "toolcall": "1C",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "GetCtlParams",
      "description": "Returns a specified control's additional parameters"
    },
    {
      "toolcall": "1D",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "DragRect",
      "description": "Pulls dotted outln of rectangle around screen, follown mvments of mouse till bttn released"
    },
    {
      "toolcall": "1E",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "GrowSize",
      "description": "Returns the height & width of size box ctrl, using Control Manager's current icon font"
    },
    {
      "toolcall": "1F",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "GetCtlDpage",
      "description": "Returns the value of the Control Manager's direct page"
    },
    {
      "toolcall": "20",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "SetCtlAction",
      "description": "Sets a specified control's ctrlAction field to a new action"
    },
    {
      "toolcall": "21",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "GetCtlAction",
      "description": "Returns the current value of a specified control's ctlAction field"
    },
    {
      "toolcall": "22",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "SetCtlRefCon",
      "description": "Sets a specified control's ctlRefCon field to a new value"
    },
    {
      "toolcall": "23",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "GetCtlRefCon",
      "description": "Returns the current value of a specified control's ctlRefCon field"
    },
    {
      "toolcall": "24",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "EraseControl",
      "description": "Makes spec ctrl invisible but doesn't add ctrl's enclosing rectangle to wndw update region"
    },
    {
      "toolcall": "25",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "DrawOneCtl",
      "description": "Draws a specified control"
    },
    {
      "toolcall": "26",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "FindTargetCtl",
      "description": "Returns the handle of the target control within the control list for the active window"
    },
    {
      "toolcall": "27",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "MakeNextCtlTar",
      "description": "Makes the next eligible control the target control"
    },
    {
      "toolcall": "28",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "MakeThisCtlTar",
      "description": "Makes the specified control the target"
    },
    {
      "toolcall": "29",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "SendEventToCtl",
      "description": "Passes a specified extended task record to the appropriate control or controls"
    },
    {
      "toolcall": "2A",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "GetCtlID",
      "description": "Returns the ctlID field from the control record of a specified control"
    },
    {
      "toolcall": "2B",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "SetCtliD",
      "description": "Sets the ctliD field in the control record of a specified control"
    },
    {
      "toolcall": "2C",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "CallDefProc",
      "description": "Calls a controls defproc with the specified inputs"
    },
    {
      "toolcall": "2D",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "NotifyCtls",
      "description": "Calls the control definition procedures for extended controls in a specified window"
    },
    {
      "toolcall": "2E",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "GetCtlMoreFlag",
      "description": "Gets the contents of the ctlMoreFlags field of the control record for a specified control"
    },
    {
      "toolcall": "2F",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "SetCtlMoreFlag",
      "description": "Sets the contents of the ctlMoreFlags field of the control record for a specified control"
    },
    {
      "toolcall": "30",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "GetCtlHandleFr",
      "description": "Retrieves the control handle to the control record with a specified ctlID field value"
    },
    {
      "toolcall": "31",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "NewControl2",
      "description": "Creates one or more new controls."
    },
    {
      "toolcall": "32",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "CMLoadResource",
      "description": "This is an entry point to the internal Control Manager routine that loads resources"
    },
    {
      "toolcall": "33",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "CMReleaseResou",
      "description": "This is an entry point to the internal Control Manager routine that releases resources"
    },
    {
      "toolcall": "34",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "SetCtlParamPtr",
      "description": "Sets the pointer to the current text substitution array for the Control Manager"
    },
    {
      "toolcall": "35",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "GetCtlParamPtr",
      "description": "Retrieves the pointer to the current text substitution array for the Control Manager"
    },
    {
      "toolcall": "36",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "FutzCtls",
      "description": "Invalidates bound rects of a window's normal controls and tells other controls that window state has changed"
    },
    {
      "toolcall": "37",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "InvalCtls",
      "description": "Invalidates all rectangles for all controls in a specified window"
    },
    {
      "toolcall": "38",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "CMUnloadSegmen",
      "description": "Unloads any dynamic segments that have been loaded in the course of using the tool"
    },
    {
      "toolcall": "39",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "FindRadioButto",
      "description": "Returns a value indicating which radio button is selected in a given family"
    },
    {
      "toolcall": "3A",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "SetLETextByID",
      "description": "Sets the text of an Edit Line control to a string supplied by the caller"
    },
    {
      "toolcall": "3B",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "GetLETextByID",
      "description": "Returns the text of an Edit Line control into a buffer supplied by the caller"
    },
    {
      "toolcall": "3C",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "SetCtlValueByI",
      "description": "Sets the value of the control that has the specified control ID in the specified window"
    },
    {
      "toolcall": "3D",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "GetCtlValueByI",
      "description": "Returns the current value of the control that has the specified control ID in the specified window"
    },
    {
      "toolcall": "3E",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "InvalOneCtlByI",
      "description": "Invalidates a control's rectangle, just as if you called InvalRect on the control's rectangle"
    },
    {
      "toolcall": "3F",
      "toolnum": "10",
      "toolname": "Control Manager",
      "callname": "HiliteCtlByID",
      "description": "Changes the way a specified control is highlighted, just as if you called HiliteControl"
    },
    {
      "toolcall": "01",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "LoaderInit",
      "description": "Initializes System Loader Toolset; called only by the Tool Locator - not by application"
    },
    {
      "toolcall": "02",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "LoaderStartUp",
      "description": "Starts up System Loader - This function does nothing - Do not use"
    },
    {
      "toolcall": "03",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "LoaderShutDown",
      "description": "Shuts down System Loader - This function does nothing - Do not use"
    },
    {
      "toolcall": "04",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "LoaderVersion",
      "description": "Returns the version number of System Loader"
    },
    {
      "toolcall": "05",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "LoaderReset",
      "description": "Resets System Loader Toolset - This function does nothing - Do not use"
    },
    {
      "toolcall": "06",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "LoaderStatus",
      "description": "Indicates whether System Loader Toolset is active"
    },
    {
      "toolcall": "09",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "InitialLoad",
      "description": "Called to ask the System Loader to perform an initial load of a program"
    },
    {
      "toolcall": "0A",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "Restart",
      "description": "Restarts a dormant application that was shut down, but is still in memory"
    },
    {
      "toolcall": "0B",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "LoadSegNum",
      "description": "Loads a load segment specified by load-file number, seg number, & user ID, into memory"
    },
    {
      "toolcall": "0C",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "UnloadSegNum",
      "description": "Unloads a specific load segment from memory"
    },
    {
      "toolcall": "0D",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "LoadSegName",
      "description": "Loads a named segment into memory (named by its load file's pathname & segment name)"
    },
    {
      "toolcall": "0E",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "UnloadSeg",
      "description": "Unloads the load segment containing the specified address"
    },
    {
      "toolcall": "0F",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "GetLoadSegInfo",
      "description": "Returns the Memory Segment Table entry corresponding to the spec (by #) load segment"
    },
    {
      "toolcall": "10",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "GetUserID",
      "description": "Returns the User ID associated with the specified pathname"
    },
    {
      "toolcall": "11",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "LGetPathname",
      "description": "Returns the pathname associated with the specified User ID"
    },
    {
      "toolcall": "12",
      "toolnum": "11",
      "toolname": "System Loader",
      "callname": "UserShutdown",
      "description": "Closes down an application that has just terminated"
    },
    {
      "toolcall": "01",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "QDAuxBootInit",
      "description": "Initializes QuickDraw II Auxiliary; called only by the Tool Locator - not by application"
    },
    {
      "toolcall": "02",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "QDAuxStartUp",
      "description": "Starts up QuickDraw II Auxiliary for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "QDAuxShutDown",
      "description": "Shuts down QuickDraw II Auxiliary when an application quits"
    },
    {
      "toolcall": "04",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "QDAuxVersion",
      "description": "Returns the version number of QuickDraw II Auxiliary"
    },
    {
      "toolcall": "05",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "QDAuxReset",
      "description": "Resets QuickDraw II Auxiliary; called only when the system is reset - not by applicaiton"
    },
    {
      "toolcall": "06",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "QDAuxStatus",
      "description": "Indicates whether QuickDraw II Auxiliary is active"
    },
    {
      "toolcall": "09",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "CopyPixels",
      "description": "Copies pixel image from 1 place to another, w/stretch or compress to make source fit dest"
    },
    {
      "toolcall": "0A",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "WaitCursor",
      "description": "Changes the cursor to a predefined cursor that looks like a watch"
    },
    {
      "toolcall": "0B",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "DrawIcon",
      "description": "Draws a spec icon in a spec mode at a spec location & clips to current visible region"
    },
    {
      "toolcall": "0C",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "SpecialRect",
      "description": "Frames & fills a rectangle in a single call"
    },
    {
      "toolcall": "0D",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "SeedFill",
      "description": "Generates a mask from a specified source image and pattern by filling outward from a starting point"
    },
    {
      "toolcall": "0E",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "CalcMask",
      "description": "Generates a mask from a specified source image and pattern by filling inward from the boundary rectangle"
    },
    {
      "toolcall": "0F",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "GetSysIcon",
      "description": "Returns small icons representing files, devices, and other miscellaneous icons"
    },
    {
      "toolcall": "10",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "PixelMap2Rgn",
      "description": "Transforms a pixel map into a QuickDraw II region"
    },
    {
      "toolcall": "13",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "IBeamCursor",
      "description": "Sets the QuickDraw II cursor to an I-beam cursor"
    },
    {
      "toolcall": "14",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "WhooshRect",
      "description": "Animates a “zooming” effect from one rectangle to another"
    },
    {
      "toolcall": "15",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "DrawStringWidt",
      "description": "Draws a string in a specified horizontal width on a single line"
    },
    {
      "toolcall": "16",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "UseColorTable",
      "description": "Preserves Scanline Control Bytes (SCBs) and sets them to use a color table you specify"
    },
    {
      "toolcall": "17",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "RestoreColorTa",
      "description": "Undoes the effects of UseColorTable"
    },
    {
      "toolcall": "B7",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "OpenPicture",
      "description": "Allocates mem for recording of drawing commands into a pic defin. & returns handle to pic"
    },
    {
      "toolcall": "B8",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "PicComment",
      "description": "Inserts a specified comment into the currently open picture"
    },
    {
      "toolcall": "BA",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "DrawPicture",
      "description": "Takes drawing commands recorded in pic defin., maps them from pic frame into dest rect."
    },
    {
      "toolcall": "BB",
      "toolnum": "12",
      "toolname": "QuickDraw Aux",
      "callname": "KillPicture",
      "description": "Releases all memory occupied by a specifed picture"
    },
    {
      "toolcall": "01",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PMBootInit",
      "description": "Initializes the Print Manager; called only by Tool Locator - not by application"
    },
    {
      "toolcall": "02",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PMStartUp",
      "description": "Starts up the Print Manager for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PMShutDown",
      "description": "Shuts down the Print Manager when an application quits"
    },
    {
      "toolcall": "04",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PMVersion",
      "description": "Returns the version number of the Print Manager"
    },
    {
      "toolcall": "05",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PMReset",
      "description": "Resets the Print Manager; called only when system reset - not by application"
    },
    {
      "toolcall": "06",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PMStatus",
      "description": "Indicates whether the Print Manager is active"
    },
    {
      "toolcall": "09",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrDefault",
      "description": "Fills the fields of a spec print record with default values for the appropriate printer"
    },
    {
      "toolcall": "0A",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrValidate",
      "description": "Checks print record for compatibility w/current version # of Print Mgr & installed printer"
    },
    {
      "toolcall": "0B",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrStlDialog",
      "description": "Conducts a style dialog w/user to determine page dimens & other info needed for page setup"
    },
    {
      "toolcall": "0C",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrJobDialog",
      "description": "Conducts a job dialog w/user to determine print quality, range of pages to print, etc."
    },
    {
      "toolcall": "0D",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrPixelMap",
      "description": "Prints all or part of a specified pixel map"
    },
    {
      "toolcall": "0E",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrOpenDoc",
      "description": "Inits GrafPort for use in printing a document, makes it current port & returns ptr to port"
    },
    {
      "toolcall": "0F",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrCloseDoc",
      "description": "Closes the GrafPort being used for printing"
    },
    {
      "toolcall": "10",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrOpenPage",
      "description": "Begins a new page"
    },
    {
      "toolcall": "11",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrClosePage",
      "description": "Ends the printing of the current page"
    },
    {
      "toolcall": "12",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrPicFile",
      "description": "Prints a spooled document"
    },
    {
      "toolcall": "14",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrError",
      "description": "Returns last printer error code left during printing loop by Print Manager routines"
    },
    {
      "toolcall": "15",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrSetError",
      "description": "Stores spec value into global variable where Print Manager keeps its printer err codes"
    },
    {
      "toolcall": "16",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrChoosePrinte",
      "description": "Conducts a Choose Printer dialog w/user to determine printer and port driver to use"
    },
    {
      "toolcall": "18",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrGetPrinterSp",
      "description": "Returns information about the currently selected printer"
    },
    {
      "toolcall": "23",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrDriverVer",
      "description": "Returns the version number of the currently installed printer driver"
    },
    {
      "toolcall": "24",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrPortVer",
      "description": "Returns the version number of the currently installed port driver"
    },
    {
      "toolcall": "25",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrGetZoneName",
      "description": "Returns the name string for the currently selected AppleTalk print zone"
    },
    {
      "toolcall": "28",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrGetPrinterDv",
      "description": "Returns the name string for the currently selected printer driver"
    },
    {
      "toolcall": "29",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrGetPortDvrNa",
      "description": "Returns the name string for the currently selected port driver"
    },
    {
      "toolcall": "2A",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrGetUserName",
      "description": "Returns the user name as entered in the Control Panel"
    },
    {
      "toolcall": "2B",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrGetNetworkNa",
      "description": "Returns the AppleTalk network name for the currently selected printer"
    },
    {
      "toolcall": "34",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PMUnloadDriver",
      "description": "Unloads current port driver, printer driver, or both, depending on input parameter"
    },
    {
      "toolcall": "35",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PMLoadDriver",
      "description": "Loads current printer driver, port driver, or both, depending on the input parameter"
    },
    {
      "toolcall": "36",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrGetDocName",
      "description": "Returns a pointer to the current document name string for your document"
    },
    {
      "toolcall": "37",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrSetDocName",
      "description": "Sets the document name for use with AppleTalk printers"
    },
    {
      "toolcall": "38",
      "toolnum": "13",
      "toolname": "Print Manager",
      "callname": "PrGetPgOrienta",
      "description": "Returns a value indicating the current page orientation for the specified document"
    },
    {
      "toolcall": "01",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEBootInit",
      "description": "Initializes the LineEdit Tool Set; called only by Tool Locator"
    },
    {
      "toolcall": "02",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEStartUp",
      "description": "Starts up the LineEdit Tool Set for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEShutDown",
      "description": "Shuts down the LineEdit Tool Set when an application quits"
    },
    {
      "toolcall": "04",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEVersion",
      "description": "Returns the version number of the LineEdit Tool Set"
    },
    {
      "toolcall": "05",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEReset",
      "description": "Resets the LineEdit Tool Set; called only when the system is reset"
    },
    {
      "toolcall": "06",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEStatus",
      "description": "Indicates whether the LineEdit Tool Set is active"
    },
    {
      "toolcall": "09",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LENew",
      "description": "Allocates space for text, creates & inits edit record, & returns handle to new edit record"
    },
    {
      "toolcall": "0A",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEDispose",
      "description": "Releases the memory allocated for a specified edit record"
    },
    {
      "toolcall": "0B",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LESetText",
      "description": "Incorporates a copy of the specified text into a specified edit record"
    },
    {
      "toolcall": "0C",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEIdle",
      "description": "Causes the caret at the insertion point (if any) in specified text to blink"
    },
    {
      "toolcall": "0D",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEClick",
      "description": "Controls placement & highlighting of selection range as determined by mouse events"
    },
    {
      "toolcall": "0E",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LESetSelect",
      "description": "Sets the selection range of a specified edit record"
    },
    {
      "toolcall": "0F",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEActivate",
      "description": "Highlights the selection range or caret of a specified edit record"
    },
    {
      "toolcall": "10",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEDeactivate",
      "description": "Unhighlights the selection range or caret of a specified edit record"
    },
    {
      "toolcall": "11",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEKey",
      "description": "Replaces select range/caret in text of spec edit record w/spec char & leaves insert pnt"
    },
    {
      "toolcall": "12",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LECut",
      "description": "Removes selection range from text of spec edit record & places it in LineEdit scrap"
    },
    {
      "toolcall": "13",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LECopy",
      "description": "Copies selection range from text of a spec edit record to the LineEdit scrap"
    },
    {
      "toolcall": "14",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEPaste",
      "description": "Replaces selec range/caret in text of spec edit record w/contents of LineEdit scrap"
    },
    {
      "toolcall": "15",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEDelete",
      "description": "Removes selec range from text of spec edit record without placing it in LineEdit scrap"
    },
    {
      "toolcall": "16",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEInsert",
      "description": "Takes spec text & inserts it just before selection range/caret in text of spec edit record"
    },
    {
      "toolcall": "17",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEUpdate",
      "description": "Redraws the text of a specified edit record"
    },
    {
      "toolcall": "18",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LETextBox",
      "description": "Draws specified text in a specified rectangle, justifying the text as specified"
    },
    {
      "toolcall": "19",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEFromScrap",
      "description": "Copies the desk scrap to the LineEdit scrap"
    },
    {
      "toolcall": "1A",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEToScrap",
      "description": "Copies the LineEdit scrap to the desk scrap"
    },
    {
      "toolcall": "1B",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEScrapHandle",
      "description": "Returns a handle to the LineEdit scrap"
    },
    {
      "toolcall": "1C",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEGetScrapLen",
      "description": "Returns the size of the LineEdit scrap in bytes"
    },
    {
      "toolcall": "1D",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LESetScrapLen",
      "description": "Sets the size of the LineEdit scrap to a specified number of bytes"
    },
    {
      "toolcall": "1E",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LESetHilite",
      "description": "Sets the leHiliteHook field of a psecified edit record to a specified address"
    },
    {
      "toolcall": "1F",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LESetCaret",
      "description": "Sets the leCaretHook field of a specified edit record to a specified address"
    },
    {
      "toolcall": "20",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LETextBox2",
      "description": "Draws spec txt in spec rectangle, justify text as spec, w/word wrap, & handle embed chges"
    },
    {
      "toolcall": "21",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LESetJust",
      "description": "Sets the style of justification for the text of a specified edit record"
    },
    {
      "toolcall": "22",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEGetTextHand",
      "description": "Returns a handle to the text of a specified edit record"
    },
    {
      "toolcall": "23",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEGetTextLen",
      "description": "Returns the length of the text of a specified edit record in bytes"
    },
    {
      "toolcall": "24",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "GetLEDefProc",
      "description": "Returns the address of the current LineEdit control definition procedure"
    },
    {
      "toolcall": "25",
      "toolnum": "14",
      "toolname": "Line Edit",
      "callname": "LEClassifyKey",
      "description": "Returns a word with bits indicating what categories a specified event falls into"
    },
    {
      "toolcall": "01",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "DialogBootInit",
      "description": "Initializes the Dialog Manager; called only by Tool Locator (not application)"
    },
    {
      "toolcall": "02",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "DialogStartUp",
      "description": "Starts up the Dialog Manager for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "DialogShutDown",
      "description": "Shuts down the Dialog Manager"
    },
    {
      "toolcall": "04",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "DialogVersion",
      "description": "Returns the version number of the Dialog Manager"
    },
    {
      "toolcall": "05",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "DialogReset",
      "description": "Resets the Dialog Manager; called only on reset (not by application)"
    },
    {
      "toolcall": "06",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "DialogStatus",
      "description": "Indicates whether the Dialog Manager is active"
    },
    {
      "toolcall": "09",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "ErrorSound",
      "description": "Establishes the sound procedure for alerts"
    },
    {
      "toolcall": "0A",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "NewModalDialog",
      "description": "Creates a specified modal dialog & returns a pointer to the GrafPort of the new dialog"
    },
    {
      "toolcall": "0B",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "NewModelessDia",
      "description": "Creates a specified modeless dialog & returns a pointer to the GrafPort of the new dialog"
    },
    {
      "toolcall": "0C",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "CloseDialog",
      "description": "Removes a specified dialog window from the screen and deletes it from the window list"
    },
    {
      "toolcall": "0D",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "NewDItem",
      "description": "Adds a new item to the dialog's item list"
    },
    {
      "toolcall": "0E",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "RemoveDItem",
      "description": "Removes a specified item from a specified dialog and erases it from the screen"
    },
    {
      "toolcall": "0F",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "ModalDialog",
      "description": "If frontmost window is modal dialog box, then repeatedly gets events in dialog's window"
    },
    {
      "toolcall": "10",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "IsDialogEvent",
      "description": "Determines whether a specified event needs to be handled as part of modeless dialog"
    },
    {
      "toolcall": "11",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "DialogSelect",
      "description": "Handles an event as part of a specified modeless dialog"
    },
    {
      "toolcall": "12",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "DlgCut",
      "description": "Checks if spec dialog has any editLine items, if so applies LEcut proc to selected item"
    },
    {
      "toolcall": "13",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "DlgCopy",
      "description": "Checks if spec dialog has any editLine items, if so applies LEcopy proc to selected item"
    },
    {
      "toolcall": "14",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "DlgPaste",
      "description": "Checks if spec dialog has any editLine items, if so applies LEPaste proc to selected item"
    },
    {
      "toolcall": "15",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "DlgDelete",
      "description": "Checks if spec dialog has any editLine items, if so applies LEDelete proc to selected item"
    },
    {
      "toolcall": "16",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "DrawDialog",
      "description": "Draws the contents of a specified dialog box"
    },
    {
      "toolcall": "17",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "Alert",
      "description": "Invokes an alert defined by a specified alert template"
    },
    {
      "toolcall": "18",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "StopAlert",
      "description": "Invokes an alert defined by alert template & draws stop icon in upper-left corner of box"
    },
    {
      "toolcall": "19",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "NoteAlert",
      "description": "Invokes an alert defined by alert template & draws note icon in upper-left corner of box"
    },
    {
      "toolcall": "1A",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "CautionAlert",
      "description": "Invokes an alert defined by alert template & draws caution icon in uppr-left corner of box"
    },
    {
      "toolcall": "1B",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "ParamText",
      "description": "Specifies text for 1-4 special strings in statText, longStatText, & longStatText2 items"
    },
    {
      "toolcall": "1C",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "SetDAFont",
      "description": "Specifies the font for the dialog or alert window's GrafPort"
    },
    {
      "toolcall": "1E",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "GetControlDIte",
      "description": "Returns a handle to the control for a specified item"
    },
    {
      "toolcall": "1F",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "GetIText",
      "description": "Returns the text of a specified statText or editLine item in a psecified dialog box"
    },
    {
      "toolcall": "20",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "SetIText",
      "description": "Provides text for spec statText or editLine item in a spec dialog box & draws the item"
    },
    {
      "toolcall": "21",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "SelectIText",
      "description": "Sets selection range or insertion point for a spec editLine item in a spec dialog box"
    },
    {
      "toolcall": "22",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "HideDItem",
      "description": "Erases a specified item from a specified dialog"
    },
    {
      "toolcall": "23",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "ShowDItem",
      "description": "Makes visible a specified item from a specified dialog"
    },
    {
      "toolcall": "24",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "FindDItem",
      "description": "Returns the ID of the item located at a specified point in a specified dialog"
    },
    {
      "toolcall": "25",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "UpdateDialog",
      "description": "Redraws the part of a specified dialog that is in a specifed update region"
    },
    {
      "toolcall": "26",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "GetDItemType",
      "description": "Returns type of a specified item (buttonItem, radioItem, statText, etc.)"
    },
    {
      "toolcall": "27",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "SetDItemType",
      "description": "Changes a specified item to a new specified item type"
    },
    {
      "toolcall": "28",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "GetDItemBox",
      "description": "Returns the display rectangle of a specified item"
    },
    {
      "toolcall": "29",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "SetDItemBox",
      "description": "Changes the display rectangle of a spec item to a new display rectangle"
    },
    {
      "toolcall": "2A",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "GetFirstDItem",
      "description": "Returns the ID of the first item in a specified dialog"
    },
    {
      "toolcall": "2B",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "GetNextDItem",
      "description": "Returns the ID of the next item in a specified dialog after a specified item"
    },
    {
      "toolcall": "2C",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "ModalDialog2",
      "description": "If frontmost wndow is modal, then handles events in window; returns code if emabled item"
    },
    {
      "toolcall": "2E",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "GetDItemValue",
      "description": "Returns the current value of a specified item"
    },
    {
      "toolcall": "2F",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "SetDItemValue",
      "description": "Sets the value of a specified item to a new desired value & redraws the item"
    },
    {
      "toolcall": "32",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "GetNewModalDia",
      "description": "Creates a modal dialog & returns a pointer to the port of the new dialog"
    },
    {
      "toolcall": "33",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "GetNewDItem",
      "description": "Adds a new item to a specified dialog's item list using a template"
    },
    {
      "toolcall": "34",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "GetAlertStage",
      "description": "Returns the stage of the last occurence of an alert as a number from 0 to 3"
    },
    {
      "toolcall": "35",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "ResetAlertStag",
      "description": "Resets stage of last occurrence of alert so next occurence of same alert will be as first"
    },
    {
      "toolcall": "36",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "DefaultFilter",
      "description": "Calls standard default filter used by ModalDialog or Alert when no user filter is spec"
    },
    {
      "toolcall": "37",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "GetDefButton",
      "description": "Returns the ID of the default button item in a specified dialog"
    },
    {
      "toolcall": "38",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "SetDefButton",
      "description": "Sets the ID of the default button to a specified ID"
    },
    {
      "toolcall": "39",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "DisableDItem",
      "description": "Disables a specified item in a specified dialog"
    },
    {
      "toolcall": "3A",
      "toolnum": "15",
      "toolname": "Dialog Manager",
      "callname": "EnableDItem",
      "description": "Enables a specified item in a specified dialog"
    },
    {
      "toolcall": "01",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "ScrapBootInit",
      "description": "Initializes the Scrap Manager; called only by Tool Locator (not application)"
    },
    {
      "toolcall": "02",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "ScrapStartUp",
      "description": "Starts up the Scrap Manager for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "ScrapShutDown",
      "description": "Shuts down the Scrap Manager"
    },
    {
      "toolcall": "04",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "ScrapVersion",
      "description": "Returns the version number of the Scrap Manager"
    },
    {
      "toolcall": "05",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "ScrapReset",
      "description": "Resets the Scrap Manager; called only on reset (not by application)"
    },
    {
      "toolcall": "06",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "ScrapStatus",
      "description": "Indicates whether the Scrap Manager is active"
    },
    {
      "toolcall": "09",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "UnloadScrap",
      "description": "Writes desk scrap from memory to the scrap file & releases the memory it occupied"
    },
    {
      "toolcall": "0A",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "LoadScrap",
      "description": "Reads the desk scrap from the scrap file into memory"
    },
    {
      "toolcall": "0B",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "ZeroScrap",
      "description": "Clears the contents of the scrap and increments the scrap count"
    },
    {
      "toolcall": "0C",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "PutScrap",
      "description": "Appends specified data to the scrap that has the same scrap type as the data"
    },
    {
      "toolcall": "0D",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "GetScrap",
      "description": "Copies scrap info of appropriate type to spec handle, setting handle to correct size"
    },
    {
      "toolcall": "0E",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "GetScrapHandle",
      "description": "Returns a copy of the handle for the scrap of a specified type"
    },
    {
      "toolcall": "0F",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "GetScrapSize",
      "description": "Returns the size of the specified scrap"
    },
    {
      "toolcall": "10",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "GetScrapPath",
      "description": "Returns a pointer to the pathname used for the Clipboard file"
    },
    {
      "toolcall": "11",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "SetScrapPath",
      "description": "Sets a pointer to the pathname used for the Clipboard file"
    },
    {
      "toolcall": "12",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "GetScrapCount",
      "description": "Returns the current scrap count"
    },
    {
      "toolcall": "13",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "GetScrapState",
      "description": "Returns a flag indicating the current state of the scrap"
    },
    {
      "toolcall": "14",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "GetIndScrap",
      "description": "This call is useful for utilities that want to read all scrap types"
    },
    {
      "toolcall": "15",
      "toolnum": "16",
      "toolname": "Scrap Manager",
      "callname": "ShowClipboard",
      "description": "Creates a System window that takes care of the clipboard display for you"
    },
    {
      "toolcall": "01",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFBootInit",
      "description": "Initializes the Std File Ops Tool Set; called only by Tool Locator (not by application)"
    },
    {
      "toolcall": "02",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFStartUp",
      "description": "Starts up the Std File Ops Tool Set for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFShutDown",
      "description": "Shuts down the Standard File Operations Tool Set when application quits"
    },
    {
      "toolcall": "04",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFVersion",
      "description": "Returns the version number of the Standard File Operations Tool Set"
    },
    {
      "toolcall": "05",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFReset",
      "description": "Resets the Std File Ops Tool Set; called only on system reset - not by application"
    },
    {
      "toolcall": "06",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFStatus",
      "description": "Indicates whether the Std File Ops Tool Set is active"
    },
    {
      "toolcall": "09",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFGetFile",
      "description": "Displays the standard Open FIle dialog box & returns info about the file selected by user"
    },
    {
      "toolcall": "0A",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFPutFile",
      "description": "Displays standard Save File dialog box & returns info about the name of file to be saved"
    },
    {
      "toolcall": "0B",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFPGetFile",
      "description": "Displays custom Open File dialog box & returns info about file selected by user"
    },
    {
      "toolcall": "0C",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFPPutFile",
      "description": "Displays custom Save File dialog box & returns info about the name of file to be saved"
    },
    {
      "toolcall": "0D",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFAllCaps",
      "description": "Allows applicat. to decide if filenames will be displayed in all upper or upper/lowercase"
    },
    {
      "toolcall": "0E",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFGetFile2",
      "description": "Displays the standard Open File dialog box and returns information about the file selected by the user"
    },
    {
      "toolcall": "0F",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFPutFile2",
      "description": "Displays the standard Save File dialog box and returns the file specification entered by the user"
    },
    {
      "toolcall": "10",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFPGetFile2",
      "description": "Displays a custom Open File dialog box and returns information about the file selected by the user"
    },
    {
      "toolcall": "11",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFPPutFile2",
      "description": "Displays a custom Save File dialog box and returns information about the file specification entered by the user"
    },
    {
      "toolcall": "12",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFShowinvisibl",
      "description": "Controls the display of invisible files"
    },
    {
      "toolcall": "13",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFReScan",
      "description": "Forces the system to rebuild and redisplay the current list of files"
    },
    {
      "toolcall": "14",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFMultiGet2",
      "description": "Displays the standard Open Multifile dialog box and returns information about the file or files selected by the user"
    },
    {
      "toolcall": "15",
      "toolnum": "17",
      "toolname": "Std File Ops",
      "callname": "SFPMultiGet2",
      "description": "Displays a custom Open Multifile dialog box and returns information about the file or files selected by the user"
    },
    {
      "toolcall": "01",
      "toolnum": "19",
      "toolname": "Note Synthesize",
      "callname": "NSBootInit",
      "description": "Initializes the Note Synthesizer; called only by Tool Locator (not application)"
    },
    {
      "toolcall": "02",
      "toolnum": "19",
      "toolname": "Note Synthesize",
      "callname": "NSStartUp",
      "description": "Starts up the Note Synthesizer for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "19",
      "toolname": "Note Synthesize",
      "callname": "NSShutDown",
      "description": "Shuts down the Note Synthesizer"
    },
    {
      "toolcall": "04",
      "toolnum": "19",
      "toolname": "Note Synthesize",
      "callname": "NSVersion",
      "description": "Returns the version number of the Note Synthesizer"
    },
    {
      "toolcall": "05",
      "toolnum": "19",
      "toolname": "Note Synthesize",
      "callname": "NSReset",
      "description": "Resets the Note Synthesizer; called only on reset (not by application)"
    },
    {
      "toolcall": "06",
      "toolnum": "19",
      "toolname": "Note Synthesize",
      "callname": "NSStatus",
      "description": "Indicates whether the Note Synthesizer is active"
    },
    {
      "toolcall": "09",
      "toolnum": "19",
      "toolname": "Note Synthesize",
      "callname": "AllocGen",
      "description": "Requests allocation of a sound generator - returns a generator number from 0 to 13"
    },
    {
      "toolcall": "0A",
      "toolnum": "19",
      "toolname": "Note Synthesize",
      "callname": "DeallocGen",
      "description": "Sets the named generator's allocation priority to zero"
    },
    {
      "toolcall": "0B",
      "toolnum": "19",
      "toolname": "Note Synthesize",
      "callname": "NoteOn",
      "description": "Initiates generation of a note on a specified generator"
    },
    {
      "toolcall": "0C",
      "toolnum": "19",
      "toolname": "Note Synthesize",
      "callname": "NoteOff",
      "description": "Switches the spec generator to release mode, which causes note being generated to die out"
    },
    {
      "toolcall": "0D",
      "toolnum": "19",
      "toolname": "Note Synthesize",
      "callname": "AllNotesOff",
      "description": "Turns off all Note Synthesizer generators & sets their priorities to zero"
    },
    {
      "toolcall": "0E",
      "toolnum": "19",
      "toolname": "Note Synthesize",
      "callname": "NSSetUpdateRate",
      "description": "Sets the Note Synthesizer's updateRate parameter"
    },
    {
      "toolcall": "0F",
      "toolnum": "19",
      "toolname": "Note Synthesize",
      "callname": "NSSetUserUpdate",
      "description": "Sets the user update routine"
    },
    {
      "toolcall": "01",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "SeqBootInit",
      "description": "Initializes the Note Sequencer; called only by Tool Locator (not application)"
    },
    {
      "toolcall": "02",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "SeqStartUp",
      "description": "Starts up the Note Sequencer for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "SeqShutDown",
      "description": "Shuts down the Note Sequencer"
    },
    {
      "toolcall": "04",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "SeqVersion",
      "description": "Returns the version number of the Note Sequencer"
    },
    {
      "toolcall": "05",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "SeqReset",
      "description": "Resets the Note Sequencer; called only on reset (not by application)"
    },
    {
      "toolcall": "06",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "SeqStatus",
      "description": "Indicates whether the Note Sequencer is active"
    },
    {
      "toolcall": "09",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "SetIncr",
      "description": "Sets the Note Sequencer's increment value - used for temp control of a sequence"
    },
    {
      "toolcall": "0A",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "ClearIncr",
      "description": "Sets NS's increment value to zero, halting current sequence, & returns previous inc value"
    },
    {
      "toolcall": "0B",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "GetTimer",
      "description": "Returns the value of the Note Sequencer's tick counter"
    },
    {
      "toolcall": "0C",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "GetLoc",
      "description": "Returns certain info about the sequence that is playing"
    },
    {
      "toolcall": "0D",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "SeqAllNotesOff",
      "description": "Switches off all notes that are playing but doesn't stop the sequence"
    },
    {
      "toolcall": "0E",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "SetTrkInfo",
      "description": "Assigns instruments in current instrument table to logical tracks, & determines priority"
    },
    {
      "toolcall": "0F",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "StartSeq",
      "description": "Starts interpretation of a series of seqItems stored at address specified by 'sequence'"
    },
    {
      "toolcall": "10",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "StepSeq",
      "description": "Advances Note Sequencer to next seqItem in current sequence, executing current seqItems"
    },
    {
      "toolcall": "11",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "StopSeq",
      "description": "Halts interpretation of a series of seqItems"
    },
    {
      "toolcall": "12",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "SetInstTable",
      "description": "Sets the current instrument table to the one specified in instTable"
    },
    {
      "toolcall": "13",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "StartInts",
      "description": "Enables interrupts - Restores normal functioning after call to StopInts"
    },
    {
      "toolcall": "14",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "StopInts",
      "description": "Disables Note Synthesizer & Note Sequencer interrupts"
    },
    {
      "toolcall": "15",
      "toolnum": "1A",
      "toolname": "Note Sequencer",
      "callname": "StartSeqRel",
      "description": "This call differs from StartSeq in that it uses relative addressing from the beginning of the sequence"
    },
    {
      "toolcall": "01",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "FMBootInit",
      "description": "Initializes the Font Manager; called only by Tool Locator (not application)"
    },
    {
      "toolcall": "02",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "FMStartUp",
      "description": "Starts up the Font Manager for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "FMShutDown",
      "description": "Shuts down the Font Manager"
    },
    {
      "toolcall": "04",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "FMVersion",
      "description": "Returns the version number of the Font Manager"
    },
    {
      "toolcall": "05",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "FMReset",
      "description": "Resets the Font Manager; called only on reset (not by application)"
    },
    {
      "toolcall": "06",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "FMStatus",
      "description": "Indicates whether the Font Manager is active"
    },
    {
      "toolcall": "09",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "CountFamilies",
      "description": "Returns total # of distinct font families currently available to FM that match given spec"
    },
    {
      "toolcall": "0A",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "FindFamily",
      "description": "Returns the number and name of a particular font family"
    },
    {
      "toolcall": "0B",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "GetFamInfo",
      "description": "Returns family name & characteristics of a font family with a spec family number"
    },
    {
      "toolcall": "0C",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "GetFamNum",
      "description": "Returns the family number corresponding to a specified font family name"
    },
    {
      "toolcall": "0D",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "AddFamily",
      "description": "Enables application to add a family number & name to Font Manager's list of known fonts"
    },
    {
      "toolcall": "0E",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "InstallFont",
      "description": "Finds spec font or best fit if spec font isn't available; loads or scales; makes current"
    },
    {
      "toolcall": "0F",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "SetPurgeStat",
      "description": "Makes a specified font in memory purgeable or unpurgeable"
    },
    {
      "toolcall": "10",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "CountFonts",
      "description": "Returns number of fonts currently available to Font Manager that fit a spec description"
    },
    {
      "toolcall": "11",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "FindFontStats",
      "description": "Returns the font ID and the characteristics of a particular font"
    },
    {
      "toolcall": "12",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "LoadFont",
      "description": "Loads a spec font into memory (if not already there) & make it current & unpurgeable"
    },
    {
      "toolcall": "13",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "LoadSysFont",
      "description": "Makes the system font the current font"
    },
    {
      "toolcall": "14",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "AddFontVar",
      "description": "Enables application to add variation of preexisting font family to FM's available fonts"
    },
    {
      "toolcall": "15",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "FixFontMenu",
      "description": "Appends the names of available font families to a specified menu"
    },
    {
      "toolcall": "16",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "ChooseFont",
      "description": "Displays a dialog box enabling the user to select a new font, size, and style"
    },
    {
      "toolcall": "17",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "ItemID2FamNum",
      "description": "Translates the menu item ID into a font family number"
    },
    {
      "toolcall": "18",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "FMSetSysFont",
      "description": "Makes a specified font the system font"
    },
    {
      "toolcall": "19",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "FMGetSysFID",
      "description": "Returns the font ID of the system font"
    },
    {
      "toolcall": "1A",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "FMGetCurFID",
      "description": "Returns the font ID of the current font"
    },
    {
      "toolcall": "1B",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "FamNum2ItemID",
      "description": "Translates a font family number into a menu item ID"
    },
    {
      "toolcall": "1C",
      "toolnum": "1B",
      "toolname": "Font Manager",
      "callname": "InstallWithSta",
      "description": "Installs a font & returns info about that font"
    },
    {
      "toolcall": "01",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "ListBootInit",
      "description": "Initializes the List Manager; called only by Tool Locater - not by application"
    },
    {
      "toolcall": "02",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "ListStartup",
      "description": "Starts up the List Manager for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "ListShutDown",
      "description": "Shuts down the List Manager when an application quits"
    },
    {
      "toolcall": "04",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "ListVersion",
      "description": "Returns the version number of the List Manager"
    },
    {
      "toolcall": "05",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "ListReset",
      "description": "Resets the List Manager; called only on system reset - not by application"
    },
    {
      "toolcall": "06",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "ListStatus",
      "description": "Indicates whether the List Manager is active"
    },
    {
      "toolcall": "09",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "CreateList",
      "description": "Creates a list control using a specified list record"
    },
    {
      "toolcall": "0A",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "SortList",
      "description": "Alphabetizes a specified list by rearranging the array of member records"
    },
    {
      "toolcall": "0B",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "NextMember",
      "description": "Searches spec list record, start w/spec member, & return ptr to member of nxt member found"
    },
    {
      "toolcall": "0C",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "DrawMember",
      "description": "Draws one or all members of a specified list"
    },
    {
      "toolcall": "0D",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "SelectMember",
      "description": "Select spec member, deselects other select members in list, scrolls list & put spec on top"
    },
    {
      "toolcall": "0E",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "GetListDefProc",
      "description": "Returns a pointer to the list control's definition procedure"
    },
    {
      "toolcall": "0F",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "ResetMember",
      "description": "Search spec list record, start w/first member, & returns ptr to member record, & deselects"
    },
    {
      "toolcall": "10",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "NewList",
      "description": "Resets the list control according to a specified list record"
    },
    {
      "toolcall": "11",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "DrawMember2",
      "description": "Draws one or all members of a specified list"
    },
    {
      "toolcall": "12",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "NextMember2",
      "description": "Searches a specified list record, returns the item number corresponding to the next selected item"
    },
    {
      "toolcall": "13",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "ResetMember2",
      "description": "Searches a specified list control, returns the item number of the first selected member in the list"
    },
    {
      "toolcall": "14",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "SelectMember2",
      "description": "Selects a specified member, deselects any other selected members of the list, scrolls the list display"
    },
    {
      "toolcall": "15",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "SortList2",
      "description": "Alphabetizes a specified list by rearranging the array of member records"
    },
    {
      "toolcall": "16",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "NewList2",
      "description": "Resets the list control according to a specified list record"
    },
    {
      "toolcall": "17",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "ListKey",
      "description": "Accepts keystrokes and jumps the selection around in the specified list appropriately"
    },
    {
      "toolcall": "18",
      "toolnum": "1C",
      "toolname": "List Manager",
      "callname": "CompareStrings",
      "description": "CompareStrings compares two Pascal strings"
    },
    {
      "toolcall": "01",
      "toolnum": "1D",
      "toolname": "ACE Tool Set",
      "callname": "ACEBootInit",
      "description": "Initializes the ACE Tool Set; called only by Tool Locator (not by application)"
    },
    {
      "toolcall": "02",
      "toolnum": "1D",
      "toolname": "ACE Tool Set",
      "callname": "ACEStartUp",
      "description": "Starts up the ACE Tool Set for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "1D",
      "toolname": "ACE Tool Set",
      "callname": "ACEShutDown",
      "description": "Shuts down the ACE Tool Set when an application quits"
    },
    {
      "toolcall": "04",
      "toolnum": "1D",
      "toolname": "ACE Tool Set",
      "callname": "ACEVersion",
      "description": "Returns the version number of the ACE Tool Set"
    },
    {
      "toolcall": "05",
      "toolnum": "1D",
      "toolname": "ACE Tool Set",
      "callname": "ACEReset",
      "description": "Resets the ACE Tool Set; called only on reset - not by application"
    },
    {
      "toolcall": "06",
      "toolnum": "1D",
      "toolname": "ACE Tool Set",
      "callname": "ACEStatus",
      "description": "Indicates whether the ACE Tool Set is active"
    },
    {
      "toolcall": "07",
      "toolnum": "1D",
      "toolname": "ACE Tool Set",
      "callname": "ACEInfo",
      "description": "Returns certain information about currently installed version of the ACE tools"
    },
    {
      "toolcall": "09",
      "toolnum": "1D",
      "toolname": "ACE Tool Set",
      "callname": "ACECompress",
      "description": "Compresses equivalent of NBlks of blocks of digital audio data & stores at spec location"
    },
    {
      "toolcall": "0A",
      "toolnum": "1D",
      "toolname": "ACE Tool Set",
      "callname": "ACEExpand",
      "description": "Decompresses a previously compressed Audio Sample, using spec method, & stores at spec loc"
    },
    {
      "toolcall": "0B",
      "toolnum": "1D",
      "toolname": "ACE Tool Set",
      "callname": "ACECompBegin",
      "description": "Prepares the ACE tools to compress a new audio sequence"
    },
    {
      "toolcall": "0C",
      "toolnum": "1D",
      "toolname": "ACE Tool Set",
      "callname": "ACEExpBegin",
      "description": "Prepares ACE to expand a new sequence"
    },
    {
      "toolcall": "0D",
      "toolnum": "1D",
      "toolname": "ACE Tool Set",
      "callname": "ACEGetExpState",
      "description": "Gets the first 16 bytes of the expansion buffer"
    },
    {
      "toolcall": "0E",
      "toolnum": "1D",
      "toolname": "ACE Tool Set",
      "callname": "ACESetExpState",
      "description": "Copies the first 16 bytes to the expansion buffer"
    },
    {
      "toolcall": "01",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "ResourceBootIn",
      "description": "Initializes the Resource Manager"
    },
    {
      "toolcall": "02",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "ResourceStartUp",
      "description": "Notifies the Resource Manager that an application wishes to open and use its own resource files"
    },
    {
      "toolcall": "03",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "ResourceShutDown",
      "description": "Notifies the Resource Manager that an application is finished using its own resource files"
    },
    {
      "toolcall": "04",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "ResourceVersion",
      "description": "Retrieves the Resource Manager version number"
    },
    {
      "toolcall": "05",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "ResourceReset",
      "description": "Resets the Resource Manager; issued only when the system is reset"
    },
    {
      "toolcall": "06",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "ResourceStatus",
      "description": "Returns a flag indicating whether the Resource Manager is active"
    },
    {
      "toolcall": "09",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "CreateResource",
      "description": "Initializes a resource fork with no resources"
    },
    {
      "toolcall": "0A",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "OpenResourceFile",
      "description": "Opens a specified resource file, making it the current file, and returns a unique file ID to the calling program"
    },
    {
      "toolcall": "0B",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "CloseResourceFile",
      "description": "Updates a specified resource file, frees any memory used by the resource map and resources and closes the file"
    },
    {
      "toolcall": "0C",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "AddResource",
      "description": "Adds a resource to the current resource file"
    },
    {
      "toolcall": "0D",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "UpdateResource",
      "description": "Transfers modifications made to resources in memory to the appropriate resource file"
    },
    {
      "toolcall": "0E",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "LoadResource",
      "description": "Loads a resource into memory and returns a handle to that location"
    },
    {
      "toolcall": "0F",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "RemoveResource",
      "description": "Deletes a resource from its resource file and releases any memory used by the resource"
    },
    {
      "toolcall": "10",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "MarkResourceCh",
      "description": "Instructs the Resource Manager to write the specified resource to disk the next time its resource file is updated"
    },
    {
      "toolcall": "11",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "SetCurResource",
      "description": "Makes a specified resource file the current file"
    },
    {
      "toolcall": "12",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "GetCurResource",
      "description": "Returns the file ID of the current resource file"
    },
    {
      "toolcall": "13",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "SetCurResource",
      "description": "Tells the Resource Manager that another application will now be issuing Resource Manager calls"
    },
    {
      "toolcall": "14",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "GetCurResource",
      "description": "Returns the user ID for the application that is currently using the Resource Manager"
    },
    {
      "toolcall": "15",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "HomeResourceFile",
      "description": "Returns the file ID of the resource file that contains a specified resource"
    },
    {
      "toolcall": "16",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "WriteResource",
      "description": "Directs the Resource Manager to write a modified resource to its resource file"
    },
    {
      "toolcall": "17",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "ReleaseResource",
      "description": "Sets the purge level of the memory used by a resource"
    },
    {
      "toolcall": "18",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "DetachResource",
      "description": "Instructs the Resource Manager to dispose of its control blocks for a specified resource"
    },
    {
      "toolcall": "19",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "UniqueResource",
      "description": "Returns a unique resource ID for a specified resource type"
    },
    {
      "toolcall": "1A",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "SetResourceID",
      "description": "Changes the ID of a resource to a new value"
    },
    {
      "toolcall": "1B",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "GetResourceAtt",
      "description": "Returns the attributes word for a specified resource"
    },
    {
      "toolcall": "1C",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "SetResourceAtt",
      "description": "Sets the attributes of a resource"
    },
    {
      "toolcall": "1D",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "GetResourceSiz",
      "description": "Returns the size of the specified resource"
    },
    {
      "toolcall": "1E",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "MatchResourceH",
      "description": "Returns the type and ID of a resource, given ahandle to that resource"
    },
    {
      "toolcall": "1F",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "GetOpenFileRef",
      "description": "Returns the GS/OS file reference number associated with the resource fork of an open resource file"
    },
    {
      "toolcall": "20",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "CountTypes",
      "description": "Counts the number of different resource types in all resource files available to the calling program"
    },
    {
      "toolcall": "21",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "GetIndType",
      "description": "Finds a resource type value by means of its index"
    },
    {
      "toolcall": "22",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "CountResources",
      "description": "Counts the number of resources of a specified type in all resource files available to the calling program"
    },
    {
      "toolcall": "23",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "GetIndResource",
      "description": "Finds a resource of a specified type by means of its index and returns the resource ID for that resource"
    },
    {
      "toolcall": "24",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "SetResourceLoa",
      "description": "Controls Resource Manager access to the disk when resources are loaded"
    },
    {
      "toolcall": "25",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "SetResourceFil",
      "description": "Sets the number of files the Resource Manager is to search during a search operation"
    },
    {
      "toolcall": "26",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "GetMapHandle",
      "description": "Returns a handle to the resource map for a specified resource file"
    },
    {
      "toolcall": "27",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "LoadAbsResourc",
      "description": "Loads a resource into a specified absolute memory location"
    },
    {
      "toolcall": "28",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "ResourceConver",
      "description": "Installs or removes a converter routine from either the application or system converter list"
    },
    {
      "toolcall": "29",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "LoadResource2",
      "description": "It is like LoadResource expect that it returns information about the previous state of the returned handle"
    },
    {
      "toolcall": "2A",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "RMFindeNamedRe",
      "description": "Takes a resource type and a resource name and finds the resource ID of the corresponding resource"
    },
    {
      "toolcall": "2B",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "RMGetResourceN",
      "description": "Returns the Pascal string name of the specified resource"
    },
    {
      "toolcall": "2C",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "RMLoadNamedRes",
      "description": "Takes a resource type and a resource name and loads the corresponding resource"
    },
    {
      "toolcall": "2D",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "RMSetResourceN",
      "description": "Sets the name of the specified resource, first removing any existing name"
    },
    {
      "toolcall": "2E",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "OpenResourceFi",
      "description": "Starts the Resource Manager for you if it isn't already started under the specified user ID"
    },
    {
      "toolcall": "2F",
      "toolnum": "1E",
      "toolname": "ResourceManager",
      "callname": "CompactResourc",
      "description": "Consolidates all free blocks in an open resource file into a single free block at the end"
    },
    {
      "toolcall": "01",
      "toolnum": "20",
      "toolname": "MIDI Tool Set",
      "callname": "MIDIBootInit",
      "description": "Initializes the MIDI Tool Set; called only by Tool Locator (not by application)"
    },
    {
      "toolcall": "02",
      "toolnum": "20",
      "toolname": "MIDI Tool Set",
      "callname": "MIDIStartUp",
      "description": "Starts up the MIDI Tool Set for use by an application"
    },
    {
      "toolcall": "03",
      "toolnum": "20",
      "toolname": "MIDI Tool Set",
      "callname": "MIDIShutDown",
      "description": "Shuts down the MIDI Tool Set when an application quits"
    },
    {
      "toolcall": "04",
      "toolnum": "20",
      "toolname": "MIDI Tool Set",
      "callname": "MIDIVersion",
      "description": "Returns the version number of the MIDI Tool Set"
    },
    {
      "toolcall": "05",
      "toolnum": "20",
      "toolname": "MIDI Tool Set",
      "callname": "MIDIReset",
      "description": "Resets the MIDI Tool Set; called only on reset - not by application"
    },
    {
      "toolcall": "06",
      "toolnum": "20",
      "toolname": "MIDI Tool Set",
      "callname": "MIDIStatus",
      "description": "Indicates whether the MIDI Tool Set is active"
    },
    {
      "toolcall": "09",
      "toolnum": "20",
      "toolname": "MIDI Tool Set",
      "callname": "MIDIControl",
      "description": "Performs 18 different control functions required by the MIDI Tool Set"
    },
    {
      "toolcall": "0A",
      "toolnum": "20",
      "toolname": "MIDI Tool Set",
      "callname": "MIDIDevice",
      "description": "Allows an application to select, load, & unload device drivers for use with the tools"
    },
    {
      "toolcall": "0B",
      "toolnum": "20",
      "toolname": "MIDI Tool Set",
      "callname": "MIDIClock",
      "description": "Controls operation of optional time-stamp clock - allows precise timing of events"
    },
    {
      "toolcall": "0C",
      "toolnum": "20",
      "toolname": "MIDI Tool Set",
      "callname": "MIDIInfo",
      "description": "Returns certain information about the state of the MIDI Tools"
    },
    {
      "toolcall": "0D",
      "toolnum": "20",
      "toolname": "MIDI Tool Set",
      "callname": "MIDIReadPacket",
      "description": "Returns length of a packet of MIDI data that was transferred from input buffer to array"
    },
    {
      "toolcall": "0E",
      "toolnum": "20",
      "toolname": "MIDI Tool Set",
      "callname": "MIDIWritePacke",
      "description": "Queues spec MIDI packet into output buffer - returns # of bytes written, if successful"
    },
    {
      "toolcall": "01",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEBootInit",
      "description": "Initializes TextEdit; called only by the Tool Locator"
    },
    {
      "toolcall": "02",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEStartUp",
      "description": "Starts up the TextEdit Tool Set and prepares TextEdit for application use"
    },
    {
      "toolcall": "03",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEShutDown",
      "description": "Frees memory used by TextEdit, not including memory used by individual TextEdit records"
    },
    {
      "toolcall": "04",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEVersion",
      "description": "Retrieves the TextEdit version number"
    },
    {
      "toolcall": "05",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEReset",
      "description": "Resets TextEdit; called only when the system is reset"
    },
    {
      "toolcall": "06",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEStatus",
      "description": "Returns a flag indicating whether TextEdit is active"
    },
    {
      "toolcall": "09",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TENew",
      "description": "Allocates a new TextEdit record in the current port and returns the TERecord defining that record"
    },
    {
      "toolcall": "0A",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEKill",
      "description": "Deallocates a TERecord and all associated memory"
    },
    {
      "toolcall": "0B",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TESetText",
      "description": "Replaces the text in a TextEdit record, including style information, with supplied text and style data"
    },
    {
      "toolcall": "0C",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEGetText",
      "description": "Returns the text from a TextEdit record, including the style information associated with that text"
    },
    {
      "toolcall": "0D",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEGetTextInfo",
      "description": "Returns an information record, of variable size, describing a TextEdit record"
    },
    {
      "toolcall": "0E",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEIdle",
      "description": "Provides processor time so that TextEdit can cause the cursor to blink and can perform other background tasks"
    },
    {
      "toolcall": "0F",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEActivate",
      "description": "Makes the specified TextEdit record active-that is, makes that record the target of user keystrokes"
    },
    {
      "toolcall": "10",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEDeactivate",
      "description": "Deactivates a TextEdit record"
    },
    {
      "toolcall": "11",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEClick",
      "description": "Tracks the pointer within a TextEdit record, selecting all text that it passes over until the user releases the mouse button"
    },
    {
      "toolcall": "12",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEUpdate",
      "description": "Redraws the screen for a TextEdit record"
    },
    {
      "toolcall": "13",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEPaintText",
      "description": "Prints the text from a TextEdit record"
    },
    {
      "toolcall": "14",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEKey",
      "description": "Processes a keystroke for a TextEdit record"
    },
    {
      "toolcall": "15",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEUndo",
      "description": "This routine does nothing"
    },
    {
      "toolcall": "16",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TECut",
      "description": "Copies the current selection from the active TextEdit record to the Clipboard, destroying its previous contents"
    },
    {
      "toolcall": "17",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TECopy",
      "description": "Copies the current selection from the active TextEdit record to the Clipboard, destroying its previous contents"
    },
    {
      "toolcall": "18",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEPaste",
      "description": "Replaces the current selection with the contents of the Clipboard, including both text and style information"
    },
    {
      "toolcall": "19",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEClear",
      "description": "Clears the current selection in the active TextEdit record and redraws the screen"
    },
    {
      "toolcall": "1A",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEInsert",
      "description": "Inserts a block of text before the current selection in a TextEdit record and redraws the text screen"
    },
    {
      "toolcall": "1B",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEReplace",
      "description": "Replaces the current selection in a TextEdit record with a specified block of text and redraws the text screen"
    },
    {
      "toolcall": "1C",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEGetSelection",
      "description": "Returns information defining the current selection for a TextEdit record"
    },
    {
      "toolcall": "1D",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TESetSelection",
      "description": "Sets the current selection for a TextEdit record"
    },
    {
      "toolcall": "1E",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEGetSelection",
      "description": "Returns all style information for the text in the current selection in a TextEdit record."
    },
    {
      "toolcall": "1F",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEStyleChange",
      "description": "Changes the style information for the current selection in a TextEdit record"
    },
    {
      "toolcall": "20",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEOffsetToPoin",
      "description": "Converts a text byte offset into a pixel position expressed in the local coordinates of the GrafPort"
    },
    {
      "toolcall": "21",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEPointToOffse",
      "description": "Converts a pixel position into a text byte offset to the text for the record"
    },
    {
      "toolcall": "22",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEGetDefProc",
      "description": "Returns the address of the TextEdit control definition procedure"
    },
    {
      "toolcall": "23",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEGetRuler",
      "description": "Returns the ruler definition for a TextEdit record"
    },
    {
      "toolcall": "24",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TESetRuler",
      "description": "Sets the ruler for a TextEdit record"
    },
    {
      "toolcall": "25",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEScroll",
      "description": "Causes the text in a TextEdit record to scroll"
    },
    {
      "toolcall": "26",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEGetInternalP",
      "description": "Returns a pointer to the low-level procedure routine for TextEdit"
    },
    {
      "toolcall": "27",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TEGetLastError",
      "description": "Returns the last error code generated for a TextEdit record"
    },
    {
      "toolcall": "28",
      "toolnum": "22",
      "toolname": "Text Edit Tool",
      "callname": "TECompactRecor",
      "description": "Compresses all the TextEdit data structures in a specified TextEdit record"
    },
    {
      "toolcall": "01",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "CREATE",
      "description": "Creates a standard file, extended file, or subdirectory file on a volume"
    },
    {
      "toolcall": "02",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "DESTROY",
      "description": "Deletes a spec standard, extended, or subdir file & updates file system to show deletion"
    },
    {
      "toolcall": "04",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "CHANGE_PATH",
      "description": "Changes a file's pathname to another pathname on the same volume, or renames a volume"
    },
    {
      "toolcall": "05",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "SET_FILE_INFO",
      "description": "Sets certain file attributes of existing block file & immediately modifies directory entry"
    },
    {
      "toolcall": "06",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "GET_FILE_INFO",
      "description": "Returns certain file attributes of existing block file"
    },
    {
      "toolcall": "08",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "VOLUME",
      "description": "Returns name of volume mounted in specified device along with other info about volume"
    },
    {
      "toolcall": "09",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "SET_PREFIX",
      "description": "Sets one of the number pathname prefixes to a specified value"
    },
    {
      "toolcall": "0A",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "GET_PREFIX",
      "description": "Returns current value of any one of the numbered prefixes"
    },
    {
      "toolcall": "0B",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "CLEAR_BACKUP_BI",
      "description": "Alters a file's state info to indicate file has been backed up & not altered since backup"
    },
    {
      "toolcall": "10",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "OPEN",
      "description": "Causes GS/OS to establish an access path to a file & allows subsequent reads & writes"
    },
    {
      "toolcall": "11",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "NEWLINE",
      "description": "Enables or disables the newline read mode for an open file & spec enable mask & character"
    },
    {
      "toolcall": "12",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "READ",
      "description": "Attempts to transfer # of bytes requested, starting at current mark, into file buffer"
    },
    {
      "toolcall": "13",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "WRITE",
      "description": "Attempts to transfer # bytes spec from applications buffer to the spec file, at mark"
    },
    {
      "toolcall": "14",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "CLOSE",
      "description": "Closes access path to specified file, releasing all resources & buffered data for file"
    },
    {
      "toolcall": "15",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "FLUSH",
      "description": "Writes to volume all file state info that's buffered in mem but not yet written to volume"
    },
    {
      "toolcall": "16",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "SET_MARK",
      "description": "Sets the file mark to a specified value (position where next byte will be accessed)"
    },
    {
      "toolcall": "17",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "GET_MARK",
      "description": "Returns the current file mark for the specified file"
    },
    {
      "toolcall": "18",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "SET_EOF",
      "description": "Sets logical size of oepn file to spec value which may be larger or smaller than current"
    },
    {
      "toolcall": "19",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "GET_EOF",
      "description": "Returns current logical size of a specified file"
    },
    {
      "toolcall": "1A",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "SET_LEVEL",
      "description": "Sets current value of the system file level"
    },
    {
      "toolcall": "1B",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "GET_LEVEL",
      "description": "Returns current value of system file level"
    },
    {
      "toolcall": "1C",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "GET_DIR_ENTRY",
      "description": "Returns info about a directory entry in the volume directory or a subdirectory"
    },
    {
      "toolcall": "20",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "GET_DEV_NUMBER",
      "description": "Returns device number of a device identifed by device name or volume name"
    },
    {
      "toolcall": "21",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "GET_LAST_DEV",
      "description": "Returns the device number of the last accessed device (use with caution)"
    },
    {
      "toolcall": "22",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "READ_BLOCK",
      "description": "Reads one 512-byte block of information from disk specified by device number"
    },
    {
      "toolcall": "23",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "WRITE_BLOCK",
      "description": "Writes one 512-byte block of information to disk specified by device number"
    },
    {
      "toolcall": "24",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "FORMAT",
      "description": "Puts up dialog box that allows user to physically format a volume & chose file system"
    },
    {
      "toolcall": "25",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "ERASE_DISK",
      "description": "Puts up dialog box that allows user to erase a spec volume (does not physically format)"
    },
    {
      "toolcall": "27",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "GET_NAME",
      "description": "Returns the filename (not complete pathname) of currently running application program"
    },
    {
      "toolcall": "28",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "GET_BOOT_VOL",
      "description": "Returns volume name of volume from wich the file GS/OS was last loaded & executed (*/)"
    },
    {
      "toolcall": "29",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "QUIT",
      "description": "Terminates the running application, closes all open files, then launches next application"
    },
    {
      "toolcall": "2A",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "GET_VERSION",
      "description": "Returns the version number of the GS/OS operating system"
    },
    {
      "toolcall": "2C",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "D_INFO",
      "description": "Returns general information about a device attached to the system (devNum & devName)"
    },
    {
      "toolcall": "31",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "ALLOC_INTERRUPT",
      "description": "Places address of an interrupt handler into GS/OS interrupt vector table"
    },
    {
      "toolcall": "32",
      "toolnum": "00",
      "toolname": "ProDOS 16",
      "callname": "DEALLOC_INTERRU",
      "description": "Removes a specified interrupt handler from the interrupt vector table"
    },
    {
      "toolcall": "01",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "CreateGS",
      "description": "Creates a standard file, extended file, or subdirectory file on a volume"
    },
    {
      "toolcall": "02",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "DestroyGS",
      "description": "Deletes a spec standard, extended, or subdir file & updates file system to show deletion"
    },
    {
      "toolcall": "03",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "OSShutdownGS",
      "description": "Allows application to shut down OS in prep for power down or cold reboot of machine"
    },
    {
      "toolcall": "04",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Change_PathGS",
      "description": "Changes a file's pathname to another pathname on the same volume, or change name of volume"
    },
    {
      "toolcall": "05",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Set_File_InfoGS",
      "description": "Sets certain file attributes of existing block file & immediately modifies directory entry"
    },
    {
      "toolcall": "06",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Get_File_InfoGS",
      "description": "Returns certain file attributes of existing block file"
    },
    {
      "toolcall": "07",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "JudgeNameGS",
      "description": "Allows the caller to verify the syntax of a file name, directory name or volume name"
    },
    {
      "toolcall": "08",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "VolumeGS",
      "description": "Returns name of volume mounted in specified device along with other info about volume"
    },
    {
      "toolcall": "09",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Set_PrefixGS",
      "description": "Sets one of the number pathname prefixes to a specified value"
    },
    {
      "toolcall": "0A",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Get_PrefixGS",
      "description": "Returns current value of any one of the numbered prefixes"
    },
    {
      "toolcall": "0B",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Clear_BackupGS",
      "description": "Sets file's state info to indicate that file has been backed up & not altered since backup"
    },
    {
      "toolcall": "0C",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Set_Sys_PrefsGS",
      "description": "Sets value of current global system preferences - values affect behavior of sys calls"
    },
    {
      "toolcall": "0D",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "NullGS",
      "description": "Executes any pending events in Scheduler & GS/OS event queue - flushes queues"
    },
    {
      "toolcall": "0E",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Expand_PathGS",
      "description": "Converts input pathname into full pathname with ':' as separators, optionally changin case"
    },
    {
      "toolcall": "0F",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Get_Sys_PrefsGS",
      "description": "Returns value of current global system preferences - values affect behavior of sys calls"
    },
    {
      "toolcall": "10",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "OpenGS",
      "description": "Causes GS/OS to establish an access path to a file & allows subsequent reads & writes"
    },
    {
      "toolcall": "11",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "NewLineGS",
      "description": "Enables or disables newline read mode for an open file, & spec enable mask & character"
    },
    {
      "toolcall": "12",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "ReadGS",
      "description": "Attempts to transfer # of bytes requested, starting at current mark, into file buffer"
    },
    {
      "toolcall": "13",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "WriteGS",
      "description": "Attempts to transfer # bytes spec from applications buffer to the spec file, at mark"
    },
    {
      "toolcall": "14",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "CloseGS",
      "description": "Closes access path to specified file, releasing all resources & buffered data for file"
    },
    {
      "toolcall": "15",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "FlushGS",
      "description": "Writes to volume all file state info that's buffered in mem but not yet written to volume"
    },
    {
      "toolcall": "16",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Set_MarkGS",
      "description": "Sets the file mark to a specified value (position where next byte will be accessed)"
    },
    {
      "toolcall": "17",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Get_MarkGS",
      "description": "Returns the current file mark for the specified file"
    },
    {
      "toolcall": "18",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Set_EOFGS",
      "description": "Sets logical size of oepn file to spec value which may be larger or smaller than current"
    },
    {
      "toolcall": "19",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Get_EOFGS",
      "description": "Returns current logical size of a specified file"
    },
    {
      "toolcall": "1A",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Set_LevelGS",
      "description": "Sets current value of the system file level"
    },
    {
      "toolcall": "1B",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Get_LevelGS",
      "description": "Returns the current value of the system file level"
    },
    {
      "toolcall": "1C",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Get_Dir_EntryGS",
      "description": "Returns info about a directory entry in the volume directory or a subdirectory"
    },
    {
      "toolcall": "1D",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Begin_SessionGS",
      "description": "Tells GS/OS to begin deferring block writes to disk - block cache until EndSession"
    },
    {
      "toolcall": "1E",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "End_SessionGS",
      "description": "Flushes any deferred block writes occuring during write-deferral session & resume norm"
    },
    {
      "toolcall": "1F",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Session_StatusG",
      "description": "Returns a value that tells if a write-deferral session is in progress"
    },
    {
      "toolcall": "20",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Get_Dev_NumberG",
      "description": "Returns device number of a device identifed by device name or volume name"
    },
    {
      "toolcall": "21",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Get_Last_DevGS",
      "description": "Returns the device number of the last accessed device (use with caution)"
    },
    {
      "toolcall": "24",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "FormatGS",
      "description": "Puts up dialog box that allows user to physically format a volume & chose file system"
    },
    {
      "toolcall": "25",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Erase_DiskGS",
      "description": "Puts up dialog box that allows user to erase a spec volume (does not physically format)"
    },
    {
      "toolcall": "26",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "ResetCacheGS",
      "description": "Provides a way to resize the GS/OS cache and be able to use the resized cache immediately"
    },
    {
      "toolcall": "27",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Get_NameGS",
      "description": "Returns the filename (not complete pathname) of currently running application program"
    },
    {
      "toolcall": "28",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Get_Boot_VolGS",
      "description": "Returns volume name of volume from wich the file GS/OS was last loaded & executed (*/)"
    },
    {
      "toolcall": "29",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "QuitGS",
      "description": "Terminates the running application, closes all open files, then launches next application"
    },
    {
      "toolcall": "2A",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Get_VersionGS",
      "description": "Returns the version number of the GS/OS operating system"
    },
    {
      "toolcall": "2B",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Get_FST_InfoGS",
      "description": "Returns general information about a specified File System Translator"
    },
    {
      "toolcall": "2C",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "D_InfoGS",
      "description": "Returns general information about a device attached to the system"
    },
    {
      "toolcall": "2D",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "D_StatusGS",
      "description": "Returns status information about a specified device"
    },
    {
      "toolcall": "2E",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "D_ControlGS",
      "description": "Sends control info to a specified device"
    },
    {
      "toolcall": "2F",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "D_ReadGS",
      "description": "Performs a device-level read on a specified device"
    },
    {
      "toolcall": "30",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "D_WriteGS",
      "description": "Performs a device-level write to a specified device"
    },
    {
      "toolcall": "31",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Bind_IntGS",
      "description": "Places address of an interrupt handler into GS/OS's interrupt vector table"
    },
    {
      "toolcall": "32",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "Unbind_IntGS",
      "description": "Removes a specified interrupt handler from the interrupt vector table"
    },
    {
      "toolcall": "33",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "FSTSpecificGS",
      "description": "Call that can be defined individually for any file system translator"
    },
    {
      "toolcall": "34",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "AddNotifyProcGS",
      "description": "Adds a notification queue to the notification queue"
    },
    {
      "toolcall": "35",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "DelNotifyProcGS",
      "description": "Removes a notification procedure from the notification queue"
    },
    {
      "toolcall": "36",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "D_RenameGS",
      "description": "Replaces a device name as specificed in a device information block"
    },
    {
      "toolcall": "39",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "GetRefInfoGS",
      "description": "Returns the access attributes and full pathname for an open file when the reference number is given as input"
    },
    {
      "toolcall": "3A",
      "toolnum": "20",
      "toolname": "GS/OS",
      "callname": "SetStdRefNumGS",
      "description": "Allows the caller to explicitly set the reference number associated with one of the standard I/O channels"
    }
  ],
  "errors": {
    "tl0001": { "source": "Tool Locator", "code": "0001", "name": "toolNotFoundErr", "description": "Specified tool set not found" },
    "tl0002": { "source": "Tool Locator", "code": "0002", "name": "funcNotFoundErr", "description": "Specified routine not found" },
    "tl0010": { "source": "Tool Locator", "code": "0010", "name": "toolVersionErr", "description": "Specified minimum version not found" },
    "tl0103": { "source": "Tool Locator", "code": "0103", "name": "tlBadRecFlag", "description": "StartStop record invalid" },
    "tl0104": { "source": "Tool Locator", "code": "0104", "name": "tlCantLoad", "description": "A tool can't be loaded - check StartStop input record for valid tool numbers and versions and numTools value" },
    "tl0111": { "source": "Tool Locator", "code": "0111", "name": "messNotFoundErr", "description": "Specified message not found" },
    "tl0112": { "source": "Tool Locator", "code": "0112", "name": "messageOvfl", "description": "No message numbers available" },
    "tl0113": { "source": "Tool Locator", "code": "0113", "name": "srqNameTooLong", "description": "Message name too long; it must be <= 62 characters." },
    "tl0120": { "source": "Tool Locator", "code": "0120", "name": "reqNotAccepted", "description": "Nobody accepted the request" },
    "tl0121": { "source": "Tool Locator", "code": "0121", "name": "srqDuplicateName", "description": "The name has already been used" },
    "tl0122": { "source": "Tool Locator", "code": "0122", "name": "invalidSendRequest", "description": "Bad combination of reqCode and target" },


    "mm0201": { "source": "Memory Manager", "code": "0201", "name": "memErr", "description": "Unable to allocate memory" },
    "mm0202": { "source": "Memory Manager", "code": "0202", "name": "emptyErr", "description": "Illegal operation on an empty handle" },
    "mm0203": { "source": "Memory Manager", "code": "0203", "name": "notEmptyErr", "description": "Illegal operation on a handle that is not empty" },
    "mm0204": { "source": "Memory Manager", "code": "0204", "name": "lockErr", "description": "Illegal operation on a locked or immovable block" },
    "mm0205": { "source": "Memory Manager", "code": "0205", "name": "purgeErr", "description": "Attempt to purge an unpurgeable block" },
    "mm0206": { "source": "Memory Manager", "code": "0206", "name": "handleErr", "description": "Invalid handle" },
    "mm0207": { "source": "Memory Manager", "code": "0207", "name": "idErr", "description": "Invalid user ID" },
    "mm0208": { "source": "Memory Manager", "code": "0208", "name": "attrErr", "description": "Illegal operation for the specified attributes" },

    "mt0301": { "source": "Miscellaneous Tool Set", "code": "0301", "name": "badInputErr", "description":"Bad input parameter" },
    "mt0302": { "source": "Miscellaneous Tool Set", "code": "0302", "name": "noDevParamErr", "description": "device for the input parameter" },
    "mt0303": { "source": "Miscellaneous Tool Set", "code": "0303", "name": "taskInstlErr", "description": "Specified task already in heartbeat queue" },
    "mt0304": { "source": "Miscellaneous Tool Set", "code": "0304", "name": "noSigTaskErr ", "description": "No signature detected in the task header" },
    "mt0305": { "source": "Miscellaneous Tool Set", "code": "0305", "name": "queueDmgdErr ", "description": "Damaged Heartbeat queue detected" },
    "mt0306": { "source": "Miscellaneous Tool Set", "code": "0306", "name": "queueDmgdErr ", "description": "Specified task not in queue" },
    "mt0307": { "source": "Miscellaneous Tool Set", "code": "0307", "name": "firmTaskErr ", "description": "Unsuccessful firmware task" },
    "mt0308": { "source": "Miscellaneous Tool Set", "code": "0308", "name": "hbQueueBadErr ", "description": "Damaged Heartbeat queue detected" },
    "mt0309": { "source": "Miscellaneous Tool Set", "code": "0309", "name": "unCnctdDevErr ", "description": "Dispatch attempted to unconnected device" },
    "mt030B": { "source": "Miscellaneous Tool Set", "code": "030B", "name": "idTagNtAvlErr ", "description": "No ID tag available" },
    "mt0380": { "source": "Miscellaneous Tool Set", "code": "0380", "name": "notInList", "description": "Specified routine not found in queue" },
    "mt0381": { "source": "Miscellaneous Tool Set", "code": "0381", "name": "invalidTag", "description": "The correct signature value was not found in the header" },
    "mt0382": { "source": "Miscellaneous Tool Set", "code": "0382", "name": "alreadyInQueue", "description": "Specified element already in queue" },
    "mt0390": { "source": "Miscellaneous Tool Set", "code": "0390", "name": "badTimeVerb", "description": "Invalid convVerb value" },
    "mt0391": { "source": "Miscellaneous Tool Set", "code": "0391", "name": "badTimeData", "description": "Invalid date or time to be converted" },
    "mt034F": { "source": "Miscellaneous Tool Set", "code": "034F", "name": "mtBufferTooSmall", "description": "The buffer is too small" },
    "mt0377": { "source": "Miscellaneous Tool Set", "code": "0377", "name": "onlyFromGSOS", "description": "You called AlertMessage from ProDOS 8" },

    "qd0401": { "source": "QuickDraw II", "code": "0401", "name": "alreadyInitialized", "description":"QuickDraw II is already initialized" },
    "qd0402": { "source": "QuickDraw II", "code": "0402", "name": "cannotReset", "description":"Never used" },
    "qd0403": { "source": "QuickDraw II", "code": "0403", "name": "notinitialized", "description":"QuickDraw II not initialized" },
    "qd0410": { "source": "QuickDraw II", "code": "0410", "name": "screenReserved", "description":"Screen reserved" },
    "qd0411": { "source": "QuickDraw II", "code": "0411", "name": "badRect", "description":"Invalid rectangle specified" },
    "qd0420": { "source": "QuickDraw II", "code": "0420", "name": "notEqualChunkiness", "description":"Chunkiness not equal" },
    "qd0430": { "source": "QuickDraw II", "code": "0430", "name": "rgnAlreadyOpen", "description":"Region already open" },
    "qd0431": { "source": "QuickDraw II", "code": "0431", "name": "rgnNotOpen", "description":"Region not open" },
    "qd0432": { "source": "QuickDraw II", "code": "0432", "name": "rgnScanOverflow", "description":"Region scan overflow" },
    "qd0433": { "source": "QuickDraw II", "code": "0433", "name": "rgnFull", "description":"Region full" },
    "qd0440": { "source": "QuickDraw II", "code": "0440", "name": "polyAlreadyOpen", "description":"Polygon already open" },
    "qd0441": { "source": "QuickDraw II", "code": "0441", "name": "polyNotOpen", "description":"No polygon open in current GrafPort" },
    "qd0442": { "source": "QuickDraw II", "code": "0442", "name": "polyTooBig", "description":"Polygon too big" },
    "qd0450": { "source": "QuickDraw II", "code": "0450", "name": "badTableNum", "description":"Invalid color table number; 0 to 15 are valid" },
    "qd0451": { "source": "QuickDraw II", "code": "0451", "name": "badColorNum", "description":"Invalid color number; 0 to 15 are valid" },
    "qd0452": { "source": "QuickDraw II", "code": "0452", "name": "badScanLine", "description":"Invalid scan line number; 0 to 199 are valid" },
    "qd04FF": { "source": "QuickDraw II", "code": "04FF", "name": "", "description":"Not implemented" },


    "dm0510": { "source": "Desk Manager", "code": "0510", "name": "daNotFound", "description":"Specified DA not available" },
    "dm0511": { "source": "Desk Manager", "code": "0511", "name": "notSysWindow", "description":"The window parameter is not a pointer to a system window owned by an NDA" },
    "dm0520": { "source": "Desk Manager", "code": "0520", "name": "deskBadSelector", "description":"Selector out of range" },

    "em0601": { "source": "Event Manager", "code": "0601", "name": "emDupStrtUpErr", "description":"The Event Manager has already been started" },
    "em0602": { "source": "Event Manager", "code": "0602", "name": "emResetErr", "description":"Can't reset the Event Manager" },
    "em0603": { "source": "Event Manager", "code": "0603", "name": "emNotActErr", "description":"The Event Manager is not active" },
    "em0604": { "source": "Event Manager", "code": "0604", "name": "emBadEvtCodeErr", "description":"The event code is greater than 15" },
    "em0605": { "source": "Event Manager", "code": "0605", "name": "emBadBttnNoErr", "description":"The button number given was not 0 or 1" },
    "em0606": { "source": "Event Manager", "code": "0606", "name": "emQSiz2LrgErr", "description":"The size of the event queue is larger than 3639" },
    "em0607": { "source": "Event Manager", "code": "0607", "name": "emNoMemQueueErr", "description":"Insufficient memory for the event queue" },
    "em0681": { "source": "Event Manager", "code": "0681", "name": "emBadEvtQErr", "description":"The event queue is damaged" },
    "em0682": { "source": "Event Manager", "code": "0682", "name": "emBadQHndlErr", "description":"Queue handle damaged" },


    "mmUnch": { "source": "Memory Manager", "code": "", "name": "Memory Manager errors", "description": "Returned unchanged" },
    "slUnch": { "source": "System Loader", "code": "", "name": "System Loader errors", "description": "Returned unchanged" },
    "proUnch": { "source": "ProDOS 16", "code": "", "name": "ProDOS errors", "description": "Returned unchanged" },
    "gsosUnch": { "source": "GS/OS", "code": "", "name": "GS/OS errors", "description": "Returned unchanged" }


  },
  "references": {
    "tbv1": {
      "title": "Apple IIgs Toolbox Reference: Volume 1",
      "url": "https://archive.org/details/AppleIIGSToolboxReferenceVolume1",
      "emoji": "1️⃣"
    },
    "tbv2": {
      "title": "Apple IIgs Toolbox Reference: Volume 2",
      "url": "https://archive.org/details/AppleIIGSToolboxReferenceVolume2",
      "emoji": "2️⃣"
    },
    "tbv3": {
      "title": "Apple IIgs Toolbox Reference: Volume 3",
      "url": "https://archive.org/details/apple_iigs_toolbox_reference_volume_3",
      "emoji": "3️⃣"
    },
    "gs16pr60": {
      "title": "Programmer's Reference for System 6.0",
      "url": "https://juiced.gs/store/opus-ii-software/",
      "emoji": "📕"
    },
    "gs16pr601": {
      "title": "Programmer's Reference for System 6.0.1",
      "url": "https://juiced.gs/store/opus-ii-software/",
      "emoji": "📕"
    },
    "tn.iigs.100": {
      "title": "Apple IIgs Technical Note #100: VersionVille",
      "url": "https://apple2.gs/technotes/tn/iigs/TN.IIGS.100.txt",
      "emoji": "🗒️"
    }
  } 
}